{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./App.css';import'./Treaties.css';import'./Empires.css';import'./Boards.css';import'./Accounts.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function getNationPairs(nations){const pairs=[];for(let i=0;i<nations.length;i++){for(let j=i+1;j<nations.length;j++){pairs.push([nations[i],nations[j]]);}}return pairs;}function App(){// Remove unused empireInput, selectedNation, author\nconst[empires,setEmpires]=useState([]);const[selected,setSelected]=useState(()=>{const saved=localStorage.getItem('stellarisSelectedBoard');return saved?saved:null;});const[messages,setMessages]=useState({});const[text,setText]=useState('');const pollingRef=useRef();const messagesEndRef=useRef(null);const[accounts,setAccounts]=useState({});const[accountsLoaded,setAccountsLoaded]=useState(false);const[account,setAccount]=useState(()=>{const saved=localStorage.getItem('stellarisAccount');return saved?JSON.parse(saved):null;});const[loginUser,setLoginUser]=useState('');const[loginPass,setLoginPass]=useState('');const[error,setError]=useState('');const[activeTab,setActiveTab]=useState('channels');const[empirePage,setEmpirePage]=useState(null);const[editEmpire,setEditEmpire]=useState(null);const[empireInfo,setEmpireInfo]=useState({});const[empireInfoLoaded,setEmpireInfoLoaded]=useState(false);// Account creation and management\nconst[newAccountName,setNewAccountName]=useState('');const[newAccountPass,setNewAccountPass]=useState('');const[accountError,setAccountError]=useState('');const[accountSuccess,setAccountSuccess]=useState('');const[accountsTabLoading,setAccountsTabLoading]=useState(false);const[editAccount,setEditAccount]=useState(null);const[editAccountName,setEditAccountName]=useState('');const[editAccountPass,setEditAccountPass]=useState('');const[editAccountError,setEditAccountError]=useState('');const[editAccountLoading,setEditAccountLoading]=useState(false);// Manage Empires tab\nconst[newEmpireName,setNewEmpireName]=useState('');const[newEmpireError,setNewEmpireError]=useState('');const[newEmpireLoading,setNewEmpireLoading]=useState(false);// --- Treaties State (NEW IMPLEMENTATION) ---\nconst[treaties,setTreaties]=useState([]);const[treatiesLoaded,setTreatiesLoaded]=useState(false);const[treatyDialog,setTreatyDialog]=useState({open:false,mode:null,data:null});const[treatyError,setTreatyError]=useState('');const[treatySaving,setTreatySaving]=useState(false);// --- Add search states ---\nconst[treatySearch,setTreatySearch]=useState(()=>localStorage.getItem('treatySearch')||'');const[empireSearch,setEmpireSearch]=useState(()=>localStorage.getItem('empireSearch')||'');// --- Add sort states ---\nconst[treatySort,setTreatySort]=useState('title');const[empireSort,setEmpireSort]=useState('name');// --- End states ---\n// --- Fetch treaties ---\nfunction fetchTreaties(){fetch('/treaties.json?ts='+Date.now()).then(res=>res.json()).then(data=>{setTreaties(Array.isArray(data)?data:[]);setTreatiesLoaded(true);}).catch(()=>setTreatiesLoaded(true));}useEffect(()=>{fetchTreaties();},[]);// --- Treaty CRUD ---\nfunction openTreatyDialog(mode){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;setTreatyDialog({open:true,mode,data});setTreatyError('');}function closeTreatyDialog(){setTreatyDialog({open:false,mode:null,data:null});setTreatyError('');}function handleTreatySave(form){var _payload$participants;setTreatySaving(true);setTreatyError('');const payload={...form};if(!payload.title||!payload.content||!((_payload$participants=payload.participants)!==null&&_payload$participants!==void 0&&_payload$participants.length)){setTreatyError('Title, content, and at least one participant are required.');setTreatySaving(false);return;}if(!payload.owner)payload.owner=(account===null||account===void 0?void 0:account.username)||'';if(!payload.status)payload.status='discussion';if(!payload.id)payload.id=Date.now().toString();fetch('/api/treaties',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)}).then(res=>res.json()).then(data=>{if(data.success){// --- FIX: update treaties state locally, just like accounts ---\nsetTreaties(prev=>{// If editing, replace; if new, add\nconst idx=prev.findIndex(t=>t.id===payload.id);if(idx!==-1){const updated=[...prev];updated[idx]={...prev[idx],...payload};return updated;}else{return[...prev,payload];}});closeTreatyDialog();}else{setTreatyError(data.error||'Failed to save treaty');}}).catch(()=>setTreatyError('Failed to save treaty')).finally(()=>setTreatySaving(false));}function handleTreatyTransferOwner(id,newOwner){setTreatySaving(true);fetch('/api/treaties/transfer',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id,newOwner})}).then(res=>res.json()).then(data=>{if(data.success)fetchTreaties();}).finally(()=>setTreatySaving(false));}// --- Treaty Permissions ---\nfunction canEditTreaty(treaty){if(!account)return false;return account.username===treaty.owner||account.username===\"GameMaster\";}function canTransferTreaty(treaty){return account&&account.username===\"GameMaster\";}// --- Treaty Dialog UI ---\nfunction TreatyDialog(_ref){let{open,mode,data,onSave,onClose,error,saving,empires,accounts}=_ref;const[form,setForm]=useState(()=>data?{...data}:{title:'',content:'',participants:[],status:'discussion',owner:(account===null||account===void 0?void 0:account.username)||''});const[showParticipantsDropdown,setShowParticipantsDropdown]=useState(false);const dropdownBtnRef=useRef(null);const dropdownListRef=useRef(null);useEffect(()=>{if(data)setForm({...data});else setForm({title:'',content:'',participants:[],status:'discussion',owner:(account===null||account===void 0?void 0:account.username)||''});},[data,open]);// --- Dropdown close on outside click ---\nuseEffect(()=>{if(!showParticipantsDropdown)return;function handleClick(e){if(dropdownBtnRef.current&&!dropdownBtnRef.current.contains(e.target)&&dropdownListRef.current&&!dropdownListRef.current.contains(e.target)){setShowParticipantsDropdown(false);}}document.addEventListener('mousedown',handleClick);return()=>document.removeEventListener('mousedown',handleClick);},[showParticipantsDropdown]);// Keyboard navigation: close dropdown on Escape\nuseEffect(()=>{if(!showParticipantsDropdown)return;function handleKey(e){if(e.key===\"Escape\")setShowParticipantsDropdown(false);}document.addEventListener('keydown',handleKey);return()=>document.removeEventListener('keydown',handleKey);},[showParticipantsDropdown]);if(!open)return null;const isEdit=mode==='edit';const statuses=[{value:'discussion',label:'🗨️ In Discussion'},{value:'active',label:'✅ Active'},{value:'broken',label:'❌ Broken'},{value:'expired',label:'⌛ Expired'},{value:'other',label:'❓ Other'}];// Helper for participants dropdown\nfunction toggleParticipant(name){setForm(f=>{const exists=f.participants.includes(name);return{...f,participants:exists?f.participants.filter(p=>p!==name):[...f.participants,name]};});}return/*#__PURE__*/_jsx(\"div\",{className:\"treaty-dialog-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-dialog\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isEdit?'Edit Treaty':'New Treaty'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{e.preventDefault();onSave(form);},children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Title:\",/*#__PURE__*/_jsx(\"input\",{value:form.title,onChange:e=>setForm(f=>({...f,title:e.target.value})),required:true,disabled:saving})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Status:\",/*#__PURE__*/_jsx(\"select\",{value:form.status,onChange:e=>setForm(f=>({...f,status:e.target.value})),disabled:saving,children:statuses.map(s=>/*#__PURE__*/_jsx(\"option\",{value:s.value,children:s.label},s.value))})]}),/*#__PURE__*/_jsxs(\"label\",{style:{position:'relative'},children:[\"Participants:\",/*#__PURE__*/_jsxs(\"div\",{className:\"participants-dropdown\",ref:dropdownBtnRef,tabIndex:0,style:{userSelect:'none',background:'var(--primary-bg)',border:'1px solid var(--border)',borderRadius:8,padding:'0.7rem 1rem',minHeight:'2.2rem',cursor:saving?'not-allowed':'pointer',marginBottom:'0.7rem',position:'relative',display:'flex',alignItems:'center',justifyContent:'space-between'}// Prevent the first click from toggling the first item\n,onMouseDown:e=>e.preventDefault(),onClick:e=>{if(!saving)setShowParticipantsDropdown(v=>!v);},\"aria-haspopup\":\"listbox\",\"aria-expanded\":showParticipantsDropdown,children:[/*#__PURE__*/_jsx(\"span\",{style:{color:form.participants.length?'var(--text)':'#aaa',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap',flex:1},children:form.participants.length?form.participants.join(', '):'Select participants...'}),/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:8,color:'#aaa',fontSize:'1.1em',pointerEvents:'none'},children:\"\\u25BC\"})]}),showParticipantsDropdown&&/*#__PURE__*/_jsx(\"div\",{className:\"participants-dropdown-list\",ref:dropdownListRef,style:{position:'absolute',left:0,right:0,top:'calc(100% + 8px)',zIndex:1001,background:'var(--card-bg)',border:'1.5px solid var(--accent)',borderRadius:10,boxShadow:'0 4px 24px #0005',minWidth:210,padding:'0.3rem 0',display:'flex',flexDirection:'column',gap:'0.2rem',maxHeight:220,overflowY:'auto'},onClick:e=>e.stopPropagation(),role:\"listbox\",children:empires.map((e,idx)=>/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"participants-dropdown-item\",style:{background:'none',border:'none',color:'var(--accent)',fontSize:'1.08rem',textAlign:'left',padding:'0.7rem 1.2rem',cursor:saving?'not-allowed':'pointer',borderRadius:7,transition:'background 0.15s, color 0.15s',width:'100%',display:'flex',alignItems:'center',gap:'0.7em',position:'relative',backgroundColor:form.participants.includes(e)?'rgba(0,191,255,0.10)':'transparent'},tabIndex:-1// Prevent the first click after opening from toggling the first item\n,onMouseDown:ev=>ev.preventDefault(),onClick:ev=>{ev.stopPropagation();if(!saving)toggleParticipant(e);},children:[/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-flex',alignItems:'center',justifyContent:'center',width:22,height:22,borderRadius:5,border:'1.5px solid var(--accent)',background:form.participants.includes(e)?'var(--accent)':'var(--primary-bg)',marginRight:10,transition:'background 0.15s, border 0.15s'},children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:form.participants.includes(e),readOnly:true,tabIndex:-1,style:{accentColor:'var(--accent)',width:18,height:18,margin:0,pointerEvents:'none'}})}),/*#__PURE__*/_jsx(\"span\",{style:{color:form.participants.includes(e)?'#fff':'var(--accent)',fontWeight:form.participants.includes(e)?600:400,flex:1,textAlign:'left'},children:e})]},e))})]}),(account===null||account===void 0?void 0:account.username)===\"GameMaster\"&&/*#__PURE__*/_jsxs(\"label\",{children:[\"Owner:\",/*#__PURE__*/_jsx(\"select\",{value:form.owner,onChange:e=>setForm(f=>({...f,owner:e.target.value})),disabled:saving,children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsx(\"option\",{value:acc,children:acc},acc))})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Content:\",/*#__PURE__*/_jsx(\"textarea\",{value:form.content,onChange:e=>setForm(f=>({...f,content:e.target.value})),rows:7,required:true,disabled:saving})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error treaty-error\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:saving,children:isEdit?\"Save Changes\":\"Create Treaty\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"empire-back-btn\",onClick:onClose,disabled:saving,children:\"Cancel\"})]})]})]})});}// --- Treaty View UI ---\nfunction TreatyView(_ref2){var _treaty$participants;let{treaty,onBack,onEdit,onTransfer,canEdit,canTransfer,accounts}=_ref2;if(!treaty)return null;const statuses={discussion:'🗨️ In Discussion',active:'✅ Active',broken:'❌ Broken',expired:'⌛ Expired',other:'❓ Other'};return/*#__PURE__*/_jsx(\"div\",{className:\"treaty-dialog-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-dialog\",children:[/*#__PURE__*/_jsx(\"h2\",{children:treaty.title}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Status:\"}),\" \",statuses[treaty.status]||treaty.status]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Owner:\"}),\" \",treaty.owner]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Participants:\"}),\" \",((_treaty$participants=treaty.participants)===null||_treaty$participants===void 0?void 0:_treaty$participants.join(', '))||/*#__PURE__*/_jsx(\"i\",{children:\"None\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{margin:'1em 0',whiteSpace:'pre-line'},children:treaty.content}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",style:{minWidth:110,maxWidth:160},onClick:onBack,children:\"Back\"}),canEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",style:{minWidth:110,maxWidth:160},onClick:onEdit,children:\"Edit\"})]})]})});}// --- NEW: Permissions state for GameMaster ---\nconst[showMenu,setShowMenu]=useState(false);const[showPermissions,setShowPermissions]=useState(false);const[gmPermissions,setGmPermissions]=useState(()=>{// Persist in localStorage\nconst saved=localStorage.getItem('stellarisGmPermissions');return saved?JSON.parse(saved):{canDeleteMessages:true};});// Save GM permissions to localStorage\nuseEffect(()=>{localStorage.setItem('stellarisGmPermissions',JSON.stringify(gmPermissions));},[gmPermissions]);// --- NEW: Menu handlers ---\nfunction handleMenuToggle(){setShowMenu(v=>!v);setShowPermissions(false);}function handleMenuClose(){setShowMenu(false);setShowPermissions(false);}// Keep menu open when hovering either dropdown or permissions\nconst menuDropdownRef=useRef(null);const permissionsDropdownRef=useRef(null);// Close menu only if mouse leaves both dropdowns\nuseEffect(()=>{if(!showMenu&&!showPermissions)return;function handleMouseMove(e){if(menuDropdownRef.current&&permissionsDropdownRef.current&&!menuDropdownRef.current.contains(e.target)&&!permissionsDropdownRef.current.contains(e.target)){setShowMenu(false);setShowPermissions(false);}}document.addEventListener('mousedown',handleMouseMove);return()=>document.removeEventListener('mousedown',handleMouseMove);},[showMenu,showPermissions]);function handlePermissionsToggle(){setShowPermissions(v=>!v);}function handlePermissionChange(key,value){setGmPermissions(prev=>({...prev,[key]:value}));}// --- NEW: Other menu options ---\n// REMOVE handleShowAbout and handleShowTheme\n// Only load empireInfo when switching to the Empires tab and not viewing/editing any empire.\n// This prevents any reloads while editing or viewing an empire.\nuseEffect(()=>{if(activeTab==='empires'&&!editEmpire&&!empirePage){// Add cache-busting query param\nfetch(`/empireInfo.json?ts=${Date.now()}`).then(res=>res.json()).then(data=>{setEmpireInfo(data&&typeof data==='object'?data:{});setEmpireInfoLoaded(true);}).catch(()=>setEmpireInfoLoaded(true));}// Only run when switching tabs, or leaving view/edit mode\n},[activeTab,editEmpire,empirePage]);// Helper: get empire names\nfunction getEmpireNames(){// Only include empires that exist (already the case)\nreturn empires.map(e=>e.name);}// Helper: get boards from linked empires\nfunction getLinkedBoards(){const names=getEmpireNames();return getNationPairs(names);}// Helper: get account linked to empire\nfunction getEmpireAccount(empireName){const emp=empires.find(e=>e.name===empireName);return emp&&emp.account?emp.account:null;}// Only show boards for the empire assigned to the logged-in account, except GameMaster sees all\nconst filteredBoards=account?account.username===\"GameMaster\"?getLinkedBoards():getLinkedBoards().filter(_ref3=>{let[a,b]=_ref3;return getEmpireAccount(a)===account.username||getEmpireAccount(b)===account.username;}):[];// GameMaster: link/unlink accounts to empires\nfunction handleLinkAccount(empireName,accountName){fetch('/api/empires/link',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({empireName,accountName})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>prev.map(e=>e.name===empireName?{...e,account:accountName}:e));}});}function handleUnlinkAccount(empireName){fetch('/api/empires/unlink',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({empireName})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>prev.map(e=>e.name===empireName?{...e,account:null}:e));}});}// Save selected board to localStorage\nfunction handleBoardSelect(pair){const key=pair.join('|');setSelected(key);localStorage.setItem('stellarisSelectedBoard',key);}// Fetch messages for the selected board from the server\nuseEffect(()=>{// Only poll messages if on channels tab and not editing/viewing empire\nif(!selected||activeTab!=='channels'||editEmpire||empirePage){// Stop polling if not in correct state\nif(pollingRef.current){clearInterval(pollingRef.current);pollingRef.current=null;}return;}// Use selected as key\nconst key=selected;// Function to fetch messages\nconst fetchMessages=()=>{fetch(`/api/messages?board=${encodeURIComponent(key)}`).then(res=>{if(!res.ok)throw new Error('Network response was not ok');return res.json();}).then(data=>{setMessages(prev=>({...prev,[key]:data}));}).catch(err=>{setMessages(prev=>({...prev,[key]:[]}));console.error('Failed to fetch messages:',err);});};// Initial fetch\nfetchMessages();// Set up polling\npollingRef.current=setInterval(fetchMessages,2000);// Cleanup on unmount or when selected/activeTab/editEmpire/empirePage changes\nreturn()=>{if(pollingRef.current){clearInterval(pollingRef.current);pollingRef.current=null;}};},[selected,activeTab,editEmpire,empirePage]);// Scroll to bottom only when messages actually change for the selected board\nconst prevMessagesLengthRef=useRef(0);useEffect(()=>{if(!selected)return;const currentMessages=messages[selected]||[];if(currentMessages.length!==prevMessagesLengthRef.current){if(messagesEndRef.current){messagesEndRef.current.scrollIntoView({behavior:'auto'});}prevMessagesLengthRef.current=currentMessages.length;}},[messages,selected]);// When posting, always use the logged-in account's empire name\nfunction postMessage(e){e.preventDefault();if(!selected||!account||!text.trim())return;const key=selected;const msg={board:key,author:account.username,text,timestamp:Date.now()};fetch('/api/messages',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(msg)}).then(res=>res.json()).then(()=>{fetch(`/api/messages?board=${encodeURIComponent(key)}`).then(res=>res.json()).then(data=>{setMessages(prev=>({...prev,[key]:data}));});});setText('');}// Fetch accounts from server (accounts.json)\nuseEffect(()=>{fetch('/accounts.json').then(res=>res.json()).then(data=>{setAccounts(data);setAccountsLoaded(true);}).catch(()=>setAccountsLoaded(true));},[]);// Load empires from empires.json\nuseEffect(()=>{fetch('/empires.json').then(res=>res.json()).then(data=>{setEmpires(Array.isArray(data)?data:[]);});},[]);// Fetch treaties from backend\nuseEffect(()=>{fetch('/treaties.json').then(res=>res.json()).then(data=>{setTreaties(Array.isArray(data)?data:[]);setTreatiesLoaded(true);}).catch(()=>setTreatiesLoaded(true));},[]);function handleLogin(e){e.preventDefault();// Wait until accounts are loaded\nif(!accountsLoaded){setError('Accounts are still loading, please wait...');return;}const username=loginUser.trim();const password=loginPass.trim();if(!accounts[username]){setError('Invalid credentials');return;}if(accounts[username]!==password){setError('Invalid credentials');return;}setAccount({username});localStorage.setItem('stellarisAccount',JSON.stringify({username}));setError('');}function handleLogout(){setAccount(null);localStorage.removeItem('stellarisAccount');}// Save empire info to backend and update local state\nfunction saveEmpireInfo(name,info){return fetch('/api/empireInfo',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,info})}).then(res=>res.json()).then(()=>{// After saving, reload from backend with cache-busting param\nreturn fetch(`/empireInfo.json?ts=${Date.now()}`).then(res=>res.json()).then(data=>{setEmpireInfo(data&&typeof data==='object'?data:{});});});}// Edit panel for empire info\nfunction EmpireEditPanel(_ref4){let{name,onCancel}=_ref4;// Only initialize edit state from empireInfo[name] when the component mounts\nconst info=empireInfo[name]||{};const[edit,setEdit]=useState(info);// Do NOT use useEffect to update edit state from empireInfo.\n// This ensures the text fields are not reset while editing.\nfunction handleChange(e){setEdit({...edit,[e.target.name]:e.target.value});}function handleSave(e){e.preventDefault();saveEmpireInfo(name,edit).then(()=>{onCancel();});}return/*#__PURE__*/_jsxs(\"form\",{className:\"empire-edit-form\",onSubmit:handleSave,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Lore:\",/*#__PURE__*/_jsx(\"textarea\",{name:\"lore\",value:edit.lore||'',onChange:handleChange,rows:3})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Stats:\",/*#__PURE__*/_jsx(\"input\",{name:\"stats\",value:edit.stats||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Ethics:\",/*#__PURE__*/_jsx(\"input\",{name:\"ethics\",value:edit.ethics||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Civics:\",/*#__PURE__*/_jsx(\"input\",{name:\"civics\",value:edit.civics||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Special Info:\",/*#__PURE__*/_jsx(\"input\",{name:\"special\",value:edit.special||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'1rem',marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"empire-back-btn\",onClick:onCancel,children:\"Cancel\"})]})]});}// View panel for empire info\nfunction EmpirePanel(_ref5){let{name,canEdit}=_ref5;const info=empireInfo[name]||{};return/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-card empire-info-page\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"empire-info-title\",children:name}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-owner\",children:[\"Owner: \",/*#__PURE__*/_jsx(\"span\",{children:getEmpireAccount(name)||/*#__PURE__*/_jsx(\"i\",{children:\"Unassigned\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-details\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Lore:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.lore||/*#__PURE__*/_jsx(\"i\",{children:\"No lore set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Stats:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.stats||/*#__PURE__*/_jsx(\"i\",{children:\"No stats set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Ethics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.ethics||/*#__PURE__*/_jsx(\"i\",{children:\"No ethics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Civics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.civics||/*#__PURE__*/_jsx(\"i\",{children:\"No civics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Special Info:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.special||/*#__PURE__*/_jsx(\"i\",{children:\"No special info set.\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setEmpirePage(null),children:\"Back to Empires\"}),canEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>setEditEmpire(name),children:\"Edit\"})]})]});}// Defensive: ensure empireInfo is always an object\nuseEffect(()=>{if(!empireInfo||typeof empireInfo!=='object'||Array.isArray(empireInfo)){setEmpireInfo({});}},[empireInfo]);// Defensive: ensure accounts is always an object\nuseEffect(()=>{if(!accounts||typeof accounts!=='object'||Array.isArray(accounts)){setAccounts({});}},[accounts]);// Add API to create new account\nfunction handleCreateAccount(e){e.preventDefault();setAccountError('');setAccountSuccess('');const name=newAccountName.trim();const pass=newAccountPass.trim();if(!name||!pass){setAccountError('Name and password required');return;}if(accounts[name]){setAccountError('Account already exists');return;}setAccountsTabLoading(true);fetch('/api/accounts',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,pass})}).then(res=>res.json()).then(data=>{if(data.success){setAccounts(prev=>({...prev,[name]:pass}));// Remove: setEmpires(prev => prev.includes(name) ? prev : [...prev, name]);\nsetAccountSuccess('Account created');setNewAccountName('');setNewAccountPass('');}else{setAccountError(data.error||'Failed to create account');}}).catch(()=>setAccountError('Failed to create account')).finally(()=>setAccountsTabLoading(false));}// API: Rename account\nfunction handleRenameAccount(e){e.preventDefault();setEditAccountError('');setEditAccountLoading(true);const oldName=editAccount;const newName=editAccountName.trim();if(!newName||newName===oldName){setEditAccountError('Enter a new name');setEditAccountLoading(false);return;}fetch('/api/accounts/rename',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({oldName,newName})}).then(res=>res.json()).then(data=>{if(data.success){// Update local state\nsetAccounts(prev=>{const updated={...prev};updated[newName]=updated[oldName];delete updated[oldName];return updated;});setEmpires(prev=>prev.map(e=>e===oldName?newName:e));setEditAccount(null);}else{setEditAccountError(data.error||'Rename failed');}}).catch(()=>setEditAccountError('Rename failed')).finally(()=>setEditAccountLoading(false));}// API: Change password\nfunction handleChangePassword(e){e.preventDefault();setEditAccountError('');setEditAccountLoading(true);const name=editAccount;const pass=editAccountPass.trim();if(!pass){setEditAccountError('Enter a new password');setEditAccountLoading(false);return;}fetch('/api/accounts/password',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,pass})}).then(res=>res.json()).then(data=>{if(data.success){setAccounts(prev=>({...prev,[name]:pass}));setEditAccount(null);}else{setEditAccountError(data.error||'Password change failed');}}).catch(()=>setEditAccountError('Password change failed')).finally(()=>setEditAccountLoading(false));}// API: Delete account\nfunction handleDeleteAccount(name){if(!window.confirm(`Delete account \"${name}\"? This cannot be undone.`))return;setEditAccountLoading(true);fetch('/api/accounts/delete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name})}).then(res=>res.json()).then(data=>{if(data.success){setAccounts(prev=>{const updated={...prev};delete updated[name];return updated;});setEmpires(prev=>prev.filter(e=>e!==name));setEditAccount(null);}else{alert(data.error||'Delete failed');}}).catch(()=>alert('Delete failed')).finally(()=>setEditAccountLoading(false));}// API: Create new empire\nfunction handleCreateEmpire(e){e.preventDefault();setNewEmpireError('');setNewEmpireLoading(true);const name=newEmpireName.trim();if(!name){setNewEmpireError('Empire name required');setNewEmpireLoading(false);return;}if(empires.some(e=>e.name===name)){setNewEmpireError('Empire already exists');setNewEmpireLoading(false);return;}fetch('/api/empires/create',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>[...prev,{name,account:null}]);setNewEmpireName('');}else{setNewEmpireError(data.error||'Failed to create empire');}}).catch(()=>setNewEmpireError('Failed to create empire')).finally(()=>setNewEmpireLoading(false));}// API: Delete empire\nfunction handleDeleteEmpire(name){if(!window.confirm(`Delete empire \"${name}\"? This cannot be undone.`))return;setNewEmpireLoading(true);fetch('/api/empires/delete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>{const updated=prev.filter(e=>e.name!==name);// If the selected board involves the deleted empire, clear selection\nif(selected){const[a,b]=selected.split('|');if(a===name||b===name){setSelected(null);localStorage.removeItem('stellarisSelectedBoard');}}return updated;});}else{setNewEmpireError(data.error||'Failed to delete empire');}}).catch(()=>setNewEmpireError('Failed to delete empire')).finally(()=>setNewEmpireLoading(false));}// Treaties: permissions\nfunction canEditTreaty(treaty){if(!account)return false;return account.username===treaty.owner||account.username===\"GameMaster\";}function canTransferTreaty(treaty){return account&&account.username===\"GameMaster\";}// Treaties: open new form\nfunction handleAddTreaty(){setTreatyDialog({open:true,mode:'new',data:null});setTreatyError('');}// Treaties: open edit\nfunction handleEditTreaty(treaty){setTreatyDialog({open:true,mode:'edit',data:treaty});setTreatyError('');}// Treaties: open view\nfunction handleViewTreaty(treaty){setTreatyDialog({open:true,mode:'view',data:treaty});setTreatyError('');}// Treaties: cancel form\nfunction handleCancelTreatyForm(){setTreatyDialog({open:false,mode:null,data:null});setTreatyError('');}// Treaties: save (create or update)\nfunction handleSaveTreaty(e){e.preventDefault();setTreatyError('');setTreatySaving(true);const isEdit=treatyEditId!=null;const form={...treatyForm};if(!form.title.trim()||!form.content.trim()||!form.participants.length){setTreatyError('Title, content, and at least one participant are required.');setTreatySaving(false);return;}if(!form.owner)form.owner=account?account.username:'';if(!form.status)form.status='discussion';if(!form.id)form.id=isEdit?treatyEditId:Date.now().toString();fetch('/api/treaties',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(form)}).then(res=>res.json()).then(data=>{if(data.success){// Always fetch the latest treaties from /treaties.json after save\nreturn fetch('/treaties.json?ts='+Date.now()).then(res=>res.json()).then(data2=>{setTreaties(Array.isArray(data2)?data2:[]);setTreatyForm(null);setTreatyEditId(null);setShowTreatyForm(false);setTreatyViewId(form.id);});}else{setTreatyError(data.error||'Failed to save treaty');}}).catch(()=>setTreatyError('Failed to save treaty')).finally(()=>setTreatySaving(false));}// Treaties: transfer ownership (GM only)\nfunction handleTransferTreatyOwner(treaty,newOwner){if(!canTransferTreaty(treaty))return;setTreatySaving(true);fetch('/api/treaties/transfer',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id:treaty.id,newOwner})}).then(res=>res.json()).then(data=>{if(data.success){return fetch('/treaties.json').then(res=>res.json()).then(data2=>setTreaties(Array.isArray(data2)?data2:[]));}}).finally(()=>setTreatySaving(false));}// Treaties: form field change\nfunction handleTreatyFormChange(e){const{name,value,type,options}=e.target;if(type==='select-multiple'){const vals=Array.from(options).filter(o=>o.selected).map(o=>o.value);setTreatyForm(f=>({...f,[name]:vals}));}else{setTreatyForm(f=>({...f,[name]:value}));}}// Treaties: render\nfunction renderTreatyForm(){if(!treatyForm)return null;return/*#__PURE__*/_jsxs(\"form\",{className:\"treaty-form card\",onSubmit:handleSaveTreaty,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-header\",children:[/*#__PURE__*/_jsx(\"input\",{name:\"title\",placeholder:\"Treaty Title\",value:treatyForm.title,onChange:handleTreatyFormChange,className:\"login-input\",required:true,disabled:treatySaving}),/*#__PURE__*/_jsx(\"select\",{name:\"status\",value:treatyForm.status,onChange:handleTreatyFormChange,className:\"login-input\",disabled:treatySaving,children:TREATY_STATUSES.map(s=>/*#__PURE__*/_jsx(\"option\",{value:s.value,children:s.label},s.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-participants\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"participants-select\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"participants-label\",children:\"Participants\"}),/*#__PURE__*/_jsx(\"select\",{name:\"participants\",value:treatyForm.participants,onChange:handleTreatyFormChange,className:\"login-input\",multiple:true,disabled:treatySaving,children:getEmpireNames().map(e=>/*#__PURE__*/_jsx(\"option\",{value:e,children:e},e))})]}),account&&account.username===\"GameMaster\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"owner-select\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"owner-label\",children:\"Owner:\"}),/*#__PURE__*/_jsx(\"select\",{name:\"owner\",value:treatyForm.owner,onChange:handleTreatyFormChange,className:\"login-input\",disabled:treatySaving,children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsx(\"option\",{value:acc,children:acc},acc))})]})]}),/*#__PURE__*/_jsx(\"label\",{className:\"treaty-content-label\",children:\"Treaty Content\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"content\",placeholder:\"Treaty Content\",value:treatyForm.content,onChange:handleTreatyFormChange,className:\"login-input\",rows:9,required:true,disabled:treatySaving}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:treatySaving,children:treatyEditId?\"Save Changes\":\"Create Treaty\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"empire-back-btn\",onClick:handleCancelTreatyForm,disabled:treatySaving,children:\"Cancel\"}),treatyError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error treaty-error\",children:treatyError})]})]});}function renderTreatyView(treaty){const statusObj=TREATY_STATUSES.find(s=>s.value===treaty.status);return/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"treaty-title\",children:treaty.title}),/*#__PURE__*/_jsx(\"span\",{className:\"treaty-status\",style:{color:statusObj.color},children:statusObj?statusObj.label:treaty.status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-owner\",children:[\"Owner: \",treaty.owner]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-participants\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Participants:\"}),\" \",treaty.participants&&treaty.participants.length>0?treaty.participants.join(', '):/*#__PURE__*/_jsx(\"i\",{children:\"None\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"treaty-content-static\",children:treaty.content}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setTreatyViewId(null),children:\"Back\"}),canEditTreaty(treaty)&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>handleEditTreaty(treaty),children:\"Edit\"}),canTransferTreaty(treaty)&&/*#__PURE__*/_jsx(\"select\",{value:treaty.owner,onChange:e=>handleTransferTreatyOwner(treaty,e.target.value),className:\"owner-transfer-select\",children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsx(\"option\",{value:acc,children:acc},acc))})]})]});}// Only show accounts tab for GameMaster\nconst showAccountsTab=account&&account.username===\"GameMaster\";const tabs=[{key:'channels',label:'Channels'},{key:'empires',label:'Empires'},{key:'treaties',label:'Treaties'}];if(showAccountsTab){tabs.push({key:'accounts',label:'Manage Accounts'});tabs.push({key:'manage-empires',label:'Manage Empires'});}// Ref for account edit panel\nconst accountEditPanelRef=useRef(null);// Scroll to edit panel when editAccount changes\nuseEffect(()=>{if(editAccount&&accountEditPanelRef.current){accountEditPanelRef.current.scrollIntoView({behavior:'smooth',block:'center'});}},[editAccount]);// --- MODIFIED: Only allow delete if GM and permission enabled ---\nfunction handleDeleteMessage(boardKey,msgIdx){if(!account||account.username!==\"GameMaster\"||!gmPermissions.canDeleteMessages)return;if(!window.confirm(\"Delete this message?\"))return;fetch('/api/messages/delete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({board:boardKey,index:Number(msgIdx)})}).then(res=>res.json()).then(()=>{fetch(`/api/messages?board=${encodeURIComponent(boardKey)}`).then(res=>res.json()).then(data=>{setMessages(prev=>({...prev,[boardKey]:data}));});});}// --- Treaties: filtered and sorted by search ---\nconst filteredTreaties=treatySearch.trim()?treaties.filter(t=>t.title&&t.title.toLowerCase().includes(treatySearch.toLowerCase())||t.content&&t.content.toLowerCase().includes(treatySearch.toLowerCase())||t.owner&&t.owner.toLowerCase().includes(treatySearch.toLowerCase())||Array.isArray(t.participants)&&t.participants.some(p=>p.toLowerCase().includes(treatySearch.toLowerCase()))):treaties;const sortedTreaties=[...filteredTreaties].sort((a,b)=>{if(treatySort==='title')return a.title.localeCompare(b.title);if(treatySort==='owner')return a.owner.localeCompare(b.owner);return 0;});// --- Empires: filtered and sorted by search ---\nconst filteredEmpires=empireSearch.trim()?getEmpireNames().filter(e=>e.toLowerCase().includes(empireSearch.toLowerCase())):getEmpireNames();const sortedEmpires=[...filteredEmpires].sort((a,b)=>{if(empireSort==='name')return a.localeCompare(b);return 0;});return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Stellaris RP Diplomatic Message Boards\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tabs-bar\",children:[tabs.map(tab=>/*#__PURE__*/_jsx(\"button\",{className:`tab-btn${activeTab===tab.key?' active':''}`,onClick:()=>{setActiveTab(tab.key);setEmpirePage(null);setEditEmpire(null);setEditAccount(null);setTreatyEditId(null);setTreatyViewId(null);setShowTreatyForm(false);},children:tab.label},tab.key)),/*#__PURE__*/_jsxs(\"div\",{className:\"menu-dropdown-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"menu-btn\",\"aria-label\":\"Open menu\",onClick:handleMenuToggle,children:/*#__PURE__*/_jsx(\"span\",{className:\"menu-icon\",children:\"\\u2630\"})}),showMenu&&/*#__PURE__*/_jsxs(\"div\",{className:\"menu-dropdown\",ref:menuDropdownRef,children:[/*#__PURE__*/_jsxs(\"button\",{className:\"menu-dropdown-item logout-btn\",onClick:handleLogout,children:[/*#__PURE__*/_jsx(\"span\",{className:\"logout-icon\",children:\"\\uD83D\\uDD11\"}),\" Logout\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"menu-dropdown-item\",onClick:handleShowAbout,children:\"About\"}),/*#__PURE__*/_jsx(\"button\",{className:\"menu-dropdown-item\",onClick:handleShowTheme,children:\"Theme Switcher\"}),account&&account.username===\"GameMaster\"&&/*#__PURE__*/_jsx(\"button\",{className:\"menu-dropdown-item\",onClick:handlePermissionsToggle,children:\"Manage Permissions\"})]}),showPermissions&&/*#__PURE__*/_jsxs(\"div\",{className:\"menu-permissions-dropdown\",ref:permissionsDropdownRef,children:[/*#__PURE__*/_jsx(\"div\",{className:\"menu-permissions-title\",children:\"GameMaster Permissions\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"menu-permissions-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:!!gmPermissions.canDeleteMessages,onChange:e=>handlePermissionChange('canDeleteMessages',e.target.checked)}),\"Allow deleting messages\"]})]})]})]})]}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:activeTab==='treaties'?/*#__PURE__*/_jsxs(\"section\",{className:\"treaties-section card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaties-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Treaties, Contracts & Agreements\"}),account&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>openTreatyDialog('new'),children:\"+ Add New Treaty\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search treaties by title, content, owner, or participant...\",value:treatySearch,onChange:e=>setTreatySearch(e.target.value),className:\"treaty-search-input\"}),treatySearch&&/*#__PURE__*/_jsx(\"button\",{className:\"treaty-search-clear-btn\",onClick:()=>setTreatySearch(''),title:\"Clear search\",children:\"\\u2715\"}),/*#__PURE__*/_jsxs(\"select\",{value:treatySort,onChange:e=>setTreatySort(e.target.value),className:\"treaty-sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"title\",children:\"Sort by Title\"}),/*#__PURE__*/_jsx(\"option\",{value:\"owner\",children:\"Sort by Owner\"})]})]}),treatyDialog.open&&treatyDialog.mode!=='view'&&/*#__PURE__*/_jsx(TreatyDialog,{open:treatyDialog.open,mode:treatyDialog.mode,data:treatyDialog.data,onSave:handleTreatySave,onClose:closeTreatyDialog,error:treatyError,saving:treatySaving,empires:empires.map(e=>e.name),accounts:accounts}),treatyDialog.open&&treatyDialog.mode==='view'&&/*#__PURE__*/_jsx(TreatyView,{treaty:treatyDialog.data,onBack:closeTreatyDialog,onEdit:()=>openTreatyDialog('edit',treatyDialog.data),onTransfer:newOwner=>handleTreatyTransferOwner(treatyDialog.data.id,newOwner),canEdit:canEditTreaty(treatyDialog.data),canTransfer:canTransferTreaty(treatyDialog.data),accounts:accounts}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaties-list-container\",children:[!treatiesLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",children:\"Loading treaties...\"}),sortedTreaties.length===0&&treatiesLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"no-messages\",children:\"No treaties found.\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"treaties-list\",children:sortedTreaties.map(treaty=>{var _treaty$participants2;return/*#__PURE__*/_jsxs(\"li\",{className:\"treaty-item\",onClick:()=>setTreatyDialog({open:true,mode:'view',data:treaty}),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"treaty-title\",children:treaty.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-meta\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-owner\",children:[\"Owner: \",treaty.owner]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-participants\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Participants:\"}),\" \",((_treaty$participants2=treaty.participants)===null||_treaty$participants2===void 0?void 0:_treaty$participants2.join(', '))||/*#__PURE__*/_jsx(\"i\",{children:\"None\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"treaty-content\",children:treaty.content.length>180?treaty.content.slice(0,180)+'…':treaty.content})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-actions\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"treaty-status\",children:{discussion:'🗨️ In Discussion',active:'✅ Active',broken:'❌ Broken',expired:'⌛ Expired',other:'❓ Other'}[treaty.status]||treaty.status}),/*#__PURE__*/_jsxs(\"span\",{className:\"treaty-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-view-btn\",onClick:ev=>{ev.stopPropagation();setTreatyDialog({open:true,mode:'view',data:treaty});},children:\"View\"}),canEditTreaty(treaty)&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:ev=>{ev.stopPropagation();openTreatyDialog('edit',treaty);},children:\"Edit\"})]})]})]},treaty.id);})})]})]}):activeTab==='manage-empires'&&showAccountsTab?/*#__PURE__*/_jsxs(\"section\",{className:\"account-manage-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Empires\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleCreateEmpire,className:\"account-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"account-form-fields\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"New empire name\",value:newEmpireName,onChange:e=>setNewEmpireName(e.target.value),required:true,className:\"login-input\",disabled:newEmpireLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-btn\",disabled:newEmpireLoading,children:\"Create Empire\"})]})}),newEmpireError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:newEmpireError}),/*#__PURE__*/_jsx(\"h3\",{children:\"Empires & Account Assignment\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"accounts-list\",children:empires.map(emp=>/*#__PURE__*/_jsxs(\"li\",{className:\"account-item\",children:[/*#__PURE__*/_jsx(\"b\",{children:emp.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"account-actions\",children:[/*#__PURE__*/_jsxs(\"select\",{value:emp.account||'',onChange:e=>{const val=e.target.value;if(val)handleLinkAccount(emp.name,val);else handleUnlinkAccount(emp.name);},className:\"account-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",className:\"account-option\",children:\"Select account...\"}),Object.keys(accounts).map(accName=>/*#__PURE__*/_jsx(\"option\",{value:accName,className:\"account-option\",children:accName},accName))]}),/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-delete-btn\",onClick:()=>handleDeleteEmpire(emp.name),disabled:newEmpireLoading,children:\"Delete\"})]})]},emp.name))})]}):activeTab==='accounts'&&showAccountsTab?/*#__PURE__*/_jsxs(\"section\",{className:\"account-manage-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Accounts\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleCreateAccount,className:\"account-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"account-form-fields\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Account name\",value:newAccountName,onChange:e=>setNewAccountName(e.target.value),required:true,className:\"login-input\",disabled:accountsTabLoading}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:newAccountPass,onChange:e=>setNewAccountPass(e.target.value),required:true,className:\"login-input\",disabled:accountsTabLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-btn\",disabled:accountsTabLoading,children:\"Create\"})]})}),accountError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:accountError}),accountSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",style:{color:'limegreen'},children:accountSuccess}),/*#__PURE__*/_jsx(\"h3\",{children:\"All Accounts\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"accounts-list\",children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsxs(\"li\",{className:\"account-item\",children:[/*#__PURE__*/_jsx(\"b\",{children:acc}),acc!==\"GameMaster\"&&/*#__PURE__*/_jsxs(\"span\",{className:\"account-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-edit-btn\",onClick:()=>{setEditAccount(acc);setEditAccountName(acc);setEditAccountPass('');setEditAccountError('');},disabled:editAccountLoading,children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-delete-btn\",onClick:()=>handleDeleteAccount(acc),disabled:editAccountLoading,children:\"Delete\"})]})]},acc))}),editAccount&&/*#__PURE__*/_jsxs(\"div\",{className:\"account-edit-panel card\",ref:accountEditPanelRef,children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Edit Account: \",/*#__PURE__*/_jsx(\"b\",{children:editAccount})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRenameAccount,className:\"edit-account-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Rename to:\",/*#__PURE__*/_jsx(\"input\",{value:editAccountName,onChange:e=>setEditAccountName(e.target.value),className:\"login-input\",disabled:editAccountLoading})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:editAccountLoading,children:\"Rename\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleChangePassword,className:\"change-password-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"New Password:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:editAccountPass,onChange:e=>setEditAccountPass(e.target.value),className:\"login-input\",disabled:editAccountLoading})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:editAccountLoading,children:\"Change Password\"})]}),editAccountError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:editAccountError}),/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setEditAccount(null),disabled:editAccountLoading,children:\"Cancel\"})]})]}):activeTab==='empires'?editEmpire?/*#__PURE__*/_jsxs(\"section\",{className:\"empires-info-section card\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Edit \",editEmpire]}),/*#__PURE__*/_jsx(EmpireEditPanel,{name:editEmpire,onCancel:()=>setEditEmpire(null)})]}):empirePage?/*#__PURE__*/_jsx(EmpirePanel,{name:empirePage,canEdit:account&&account.username===empirePage}):/*#__PURE__*/_jsxs(\"section\",{className:\"empires-info-section card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"empire-search-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Empires Overview\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"empire-total-count\",children:[\"Total Empires: \",/*#__PURE__*/_jsx(\"b\",{children:sortedEmpires.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-search-fields\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search empires by name...\",value:empireSearch,onChange:e=>setEmpireSearch(e.target.value),className:\"empire-search-input\"}),empireSearch&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-search-clear-btn\",onClick:()=>setEmpireSearch(''),title:\"Clear search\",children:\"\\u2715\"}),/*#__PURE__*/_jsx(\"select\",{value:empireSort,onChange:e=>setEmpireSort(e.target.value),className:\"empire-sort-select\",children:/*#__PURE__*/_jsx(\"option\",{value:\"name\",children:\"Sort by Name\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"empires-info-list\",style:{display:'flex',flexWrap:'wrap',gap:'1.5rem',justifyContent:'flex-start'},children:sortedEmpires.map(e=>{const linkedAccount=getEmpireAccount(e);const canEdit=account&&(account.username===linkedAccount||account.username===\"GameMaster\");return/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-card empire-list-card\",onClick:()=>setEmpirePage(e),children:[/*#__PURE__*/_jsx(\"h3\",{className:\"empire-info-title\",children:e}),/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-owner\",children:linkedAccount?/*#__PURE__*/_jsx(\"span\",{title:\"Assigned Account\",children:linkedAccount}):/*#__PURE__*/_jsx(\"i\",{children:\"Unassigned\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-view-btn\",onClick:ev=>{ev.stopPropagation();setEmpirePage(e);},children:\"View\"}),canEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:ev=>{ev.stopPropagation();setEditEmpire(e);},children:\"Edit\"})]})]},e);})})]}):/*#__PURE__*/_jsx(_Fragment,{children:!account?/*#__PURE__*/_jsxs(\"section\",{className:\"account-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"login-title\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"account-form login-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-fields\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Empire name\",value:loginUser,onChange:e=>setLoginUser(e.target.value),required:true,disabled:!accountsLoaded,className:\"login-input\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:loginPass,onChange:e=>setLoginPass(e.target.value),required:true,disabled:!accountsLoaded,className:\"login-input\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!accountsLoaded,className:\"login-btn\",children:\"Login\"})]}),!accountsLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",children:\"Loading accounts...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:error})]}):/*#__PURE__*/// Center the channels page\n_jsx(\"div\",{style:{display:'flex',justifyContent:'center',width:'100%'},children:/*#__PURE__*/_jsx(\"section\",{className:\"boards-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"channels-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"channels-sidebar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"boards-list card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:account&&account.username===\"GameMaster\"?\"All Boards\":\"Your Diplomatic Channels\"}),/*#__PURE__*/_jsx(\"div\",{className:\"boards-list-header\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"boards-list-count\",children:[filteredBoards.length,\" \",filteredBoards.length===1?\"channel\":\"channels\"]})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"boards-list-ul\",children:[filteredBoards.length===0&&/*#__PURE__*/_jsx(\"li\",{className:\"no-channels\",children:\"No channels available.\"}),filteredBoards.map(_ref6=>{let[a,b]=_ref6;const key=a+'|'+b;return/*#__PURE__*/_jsx(\"li\",{className:`boards-list-item${selected===key?' active':''}`,children:/*#__PURE__*/_jsxs(\"button\",{className:\"board-btn\",onClick:()=>handleBoardSelect([a,b]),children:[/*#__PURE__*/_jsx(\"span\",{className:\"board-nations\",children:a}),/*#__PURE__*/_jsx(\"span\",{className:\"board-arrow\",children:\"\\u2194\"}),/*#__PURE__*/_jsx(\"span\",{className:\"board-nations\",children:b})]})},key);})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"channels-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"board-messages card\",children:selected&&filteredBoards.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"board-messages-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-title-row\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"board-title\",children:selected.replace('|',' ↔ ')})}),/*#__PURE__*/_jsxs(\"div\",{className:\"messages-panel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages-list-container\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"messages-list\",children:[(messages[selected]||[]).length===0&&/*#__PURE__*/_jsx(\"li\",{className:\"no-messages\",children:\"No messages yet.\"}),(messages[selected]||[]).map((msg,i)=>{const[partnerA,partnerB]=selected.split('|');let partnerClass='';if(msg.author===partnerA)partnerClass='message-partnerA';else if(msg.author===partnerB)partnerClass='message-partnerB';return/*#__PURE__*/_jsxs(\"li\",{className:`message-item ${partnerClass}`,style:{display:'flex',alignItems:'stretch',justifyContent:'flex-start',gap:'0.7rem'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,minWidth:0,display:'flex',flexDirection:'column',gap:'0.15rem',justifyContent:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-meta\",style:{marginBottom:0},children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-author\",children:msg.author}),/*#__PURE__*/_jsx(\"small\",{className:\"message-date\",children:new Date(msg.timestamp).toLocaleString()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:msg.text})]}),account&&account.username===\"GameMaster\"&&gmPermissions.canDeleteMessages&&/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center',minWidth:'2.5em',paddingLeft:'0.5em'},children:/*#__PURE__*/_jsx(\"button\",{title:\"Delete message\",style:{background:'none',border:'none',color:'#ff4d4d',cursor:'pointer',fontSize:'1.3em',display:'flex',alignItems:'center',height:'2.2em'},onClick:e=>{e.stopPropagation();handleDeleteMessage(selected,i);},children:/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"Delete\",children:\"\\uD83D\\uDDD1\"})})})]},i);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:postMessage,className:\"message-form message-form-bottom\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Your empire\",value:account.username,disabled:true,required:true,className:\"author-input\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Message\",value:text,onChange:e=>setText(e.target.value),required:true,className:\"text-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-btn\",children:\"Send\"})]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"no-messages\",children:\"Select a channel to view messages.\"})})})]})})})})}),/*#__PURE__*/_jsx(\"footer\",{className:\"footer\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Stellaris RP Board \\xA9 \",new Date().getFullYear()]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getNationPairs","nations","pairs","i","length","j","push","App","empires","setEmpires","selected","setSelected","saved","localStorage","getItem","messages","setMessages","text","setText","pollingRef","messagesEndRef","accounts","setAccounts","accountsLoaded","setAccountsLoaded","account","setAccount","JSON","parse","loginUser","setLoginUser","loginPass","setLoginPass","error","setError","activeTab","setActiveTab","empirePage","setEmpirePage","editEmpire","setEditEmpire","empireInfo","setEmpireInfo","empireInfoLoaded","setEmpireInfoLoaded","newAccountName","setNewAccountName","newAccountPass","setNewAccountPass","accountError","setAccountError","accountSuccess","setAccountSuccess","accountsTabLoading","setAccountsTabLoading","editAccount","setEditAccount","editAccountName","setEditAccountName","editAccountPass","setEditAccountPass","editAccountError","setEditAccountError","editAccountLoading","setEditAccountLoading","newEmpireName","setNewEmpireName","newEmpireError","setNewEmpireError","newEmpireLoading","setNewEmpireLoading","treaties","setTreaties","treatiesLoaded","setTreatiesLoaded","treatyDialog","setTreatyDialog","open","mode","data","treatyError","setTreatyError","treatySaving","setTreatySaving","treatySearch","setTreatySearch","empireSearch","setEmpireSearch","treatySort","setTreatySort","empireSort","setEmpireSort","fetchTreaties","fetch","Date","now","then","res","json","Array","isArray","catch","openTreatyDialog","arguments","undefined","closeTreatyDialog","handleTreatySave","form","_payload$participants","payload","title","content","participants","owner","username","status","id","toString","method","headers","body","stringify","success","prev","idx","findIndex","t","updated","finally","handleTreatyTransferOwner","newOwner","canEditTreaty","treaty","canTransferTreaty","TreatyDialog","_ref","onSave","onClose","saving","setForm","showParticipantsDropdown","setShowParticipantsDropdown","dropdownBtnRef","dropdownListRef","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","handleKey","key","isEdit","statuses","value","label","toggleParticipant","name","f","exists","includes","filter","p","className","children","onSubmit","preventDefault","onChange","required","disabled","map","s","style","position","ref","tabIndex","userSelect","background","border","borderRadius","padding","minHeight","cursor","marginBottom","display","alignItems","justifyContent","onMouseDown","onClick","v","color","overflow","textOverflow","whiteSpace","flex","join","marginLeft","fontSize","pointerEvents","left","right","top","zIndex","boxShadow","minWidth","flexDirection","gap","maxHeight","overflowY","stopPropagation","role","type","textAlign","transition","width","backgroundColor","ev","height","marginRight","checked","readOnly","accentColor","margin","fontWeight","Object","keys","acc","rows","TreatyView","_ref2","_treaty$participants","onBack","onEdit","onTransfer","canEdit","canTransfer","discussion","active","broken","expired","other","maxWidth","showMenu","setShowMenu","showPermissions","setShowPermissions","gmPermissions","setGmPermissions","canDeleteMessages","setItem","handleMenuToggle","handleMenuClose","menuDropdownRef","permissionsDropdownRef","handleMouseMove","handlePermissionsToggle","handlePermissionChange","getEmpireNames","getLinkedBoards","names","getEmpireAccount","empireName","emp","find","filteredBoards","_ref3","a","b","handleLinkAccount","accountName","handleUnlinkAccount","handleBoardSelect","pair","clearInterval","fetchMessages","encodeURIComponent","ok","Error","err","console","setInterval","prevMessagesLengthRef","currentMessages","scrollIntoView","behavior","postMessage","trim","msg","board","author","timestamp","handleLogin","password","handleLogout","removeItem","saveEmpireInfo","info","EmpireEditPanel","_ref4","onCancel","edit","setEdit","handleChange","handleSave","lore","stats","ethics","civics","special","marginTop","EmpirePanel","_ref5","handleCreateAccount","pass","handleRenameAccount","oldName","newName","handleChangePassword","handleDeleteAccount","window","confirm","alert","handleCreateEmpire","some","handleDeleteEmpire","split","handleAddTreaty","handleEditTreaty","handleViewTreaty","handleCancelTreatyForm","handleSaveTreaty","treatyEditId","treatyForm","data2","setTreatyForm","setTreatyEditId","setShowTreatyForm","setTreatyViewId","handleTransferTreatyOwner","handleTreatyFormChange","options","vals","from","o","renderTreatyForm","placeholder","TREATY_STATUSES","multiple","renderTreatyView","statusObj","showAccountsTab","tabs","accountEditPanelRef","block","handleDeleteMessage","boardKey","msgIdx","index","Number","filteredTreaties","toLowerCase","sortedTreaties","sort","localeCompare","filteredEmpires","sortedEmpires","tab","handleShowAbout","handleShowTheme","_treaty$participants2","slice","val","accName","flexWrap","linkedAccount","_ref6","replace","partnerA","partnerB","partnerClass","toLocaleString","paddingLeft","getFullYear"],"sources":["C:/Users/Admin/Dokumente/Stellaris/project/StellarisRP-Site/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport './Treaties.css';\r\nimport './Empires.css';\r\nimport './Boards.css';\r\nimport './Accounts.css';\r\n\r\nfunction getNationPairs(nations) {\r\n    const pairs = [];\r\n    for (let i = 0; i < nations.length; i++) {\r\n        for (let j = i + 1; j < nations.length; j++) {\r\n            pairs.push([nations[i], nations[j]]);\r\n        }\r\n    }\r\n    return pairs;\r\n}\r\n\r\nfunction App() {\r\n    // Remove unused empireInput, selectedNation, author\r\n    const [empires, setEmpires] = useState([]);\r\n    const [selected, setSelected] = useState(() => {\r\n        const saved = localStorage.getItem('stellarisSelectedBoard');\r\n        return saved ? saved : null;\r\n    });\r\n    const [messages, setMessages] = useState({});\r\n    const [text, setText] = useState('');\r\n    const pollingRef = useRef();\r\n    const messagesEndRef = useRef(null);\r\n    const [accounts, setAccounts] = useState({});\r\n    const [accountsLoaded, setAccountsLoaded] = useState(false);\r\n    const [account, setAccount] = useState(() => {\r\n        const saved = localStorage.getItem('stellarisAccount');\r\n        return saved ? JSON.parse(saved) : null;\r\n    });\r\n    const [loginUser, setLoginUser] = useState('');\r\n    const [loginPass, setLoginPass] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [activeTab, setActiveTab] = useState('channels');\r\n    const [empirePage, setEmpirePage] = useState(null);\r\n    const [editEmpire, setEditEmpire] = useState(null);\r\n    const [empireInfo, setEmpireInfo] = useState({});\r\n    const [empireInfoLoaded, setEmpireInfoLoaded] = useState(false);\r\n\r\n    // Account creation and management\r\n    const [newAccountName, setNewAccountName] = useState('');\r\n    const [newAccountPass, setNewAccountPass] = useState('');\r\n    const [accountError, setAccountError] = useState('');\r\n    const [accountSuccess, setAccountSuccess] = useState('');\r\n    const [accountsTabLoading, setAccountsTabLoading] = useState(false);\r\n    const [editAccount, setEditAccount] = useState(null);\r\n    const [editAccountName, setEditAccountName] = useState('');\r\n    const [editAccountPass, setEditAccountPass] = useState('');\r\n    const [editAccountError, setEditAccountError] = useState('');\r\n    const [editAccountLoading, setEditAccountLoading] = useState(false);\r\n\r\n    // Manage Empires tab\r\n    const [newEmpireName, setNewEmpireName] = useState('');\r\n    const [newEmpireError, setNewEmpireError] = useState('');\r\n    const [newEmpireLoading, setNewEmpireLoading] = useState(false);\r\n\r\n    // --- Treaties State (NEW IMPLEMENTATION) ---\r\n    const [treaties, setTreaties] = useState([]);\r\n    const [treatiesLoaded, setTreatiesLoaded] = useState(false);\r\n    const [treatyDialog, setTreatyDialog] = useState({ open: false, mode: null, data: null });\r\n    const [treatyError, setTreatyError] = useState('');\r\n    const [treatySaving, setTreatySaving] = useState(false);\r\n\r\n    // --- Add search states ---\r\n    const [treatySearch, setTreatySearch] = useState(() => localStorage.getItem('treatySearch') || '');\r\n    const [empireSearch, setEmpireSearch] = useState(() => localStorage.getItem('empireSearch') || '');\r\n    // --- Add sort states ---\r\n    const [treatySort, setTreatySort] = useState('title');\r\n    const [empireSort, setEmpireSort] = useState('name');\r\n    // --- End states ---\r\n\r\n    // --- Fetch treaties ---\r\n    function fetchTreaties() {\r\n        fetch('/treaties.json?ts=' + Date.now())\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTreaties(Array.isArray(data) ? data : []);\r\n                setTreatiesLoaded(true);\r\n            })\r\n            .catch(() => setTreatiesLoaded(true));\r\n    }\r\n    useEffect(() => { fetchTreaties(); }, []);\r\n\r\n    // --- Treaty CRUD ---\r\n    function openTreatyDialog(mode, data = null) {\r\n        setTreatyDialog({ open: true, mode, data });\r\n        setTreatyError('');\r\n    }\r\n    function closeTreatyDialog() {\r\n        setTreatyDialog({ open: false, mode: null, data: null });\r\n        setTreatyError('');\r\n    }\r\n    function handleTreatySave(form) {\r\n        setTreatySaving(true);\r\n        setTreatyError('');\r\n        const payload = { ...form };\r\n        if (!payload.title || !payload.content || !payload.participants?.length) {\r\n            setTreatyError('Title, content, and at least one participant are required.');\r\n            setTreatySaving(false);\r\n            return;\r\n        }\r\n        if (!payload.owner) payload.owner = account?.username || '';\r\n        if (!payload.status) payload.status = 'discussion';\r\n        if (!payload.id) payload.id = Date.now().toString();\r\n\r\n        fetch('/api/treaties', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                // --- FIX: update treaties state locally, just like accounts ---\r\n                setTreaties(prev => {\r\n                    // If editing, replace; if new, add\r\n                    const idx = prev.findIndex(t => t.id === payload.id);\r\n                    if (idx !== -1) {\r\n                        const updated = [...prev];\r\n                        updated[idx] = { ...prev[idx], ...payload };\r\n                        return updated;\r\n                    } else {\r\n                        return [...prev, payload];\r\n                    }\r\n                });\r\n                closeTreatyDialog();\r\n            } else {\r\n                setTreatyError(data.error || 'Failed to save treaty');\r\n            }\r\n        })\r\n        .catch(() => setTreatyError('Failed to save treaty'))\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n    function handleTreatyTransferOwner(id, newOwner) {\r\n        setTreatySaving(true);\r\n        fetch('/api/treaties/transfer', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id, newOwner })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) fetchTreaties();\r\n        })\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n\r\n    // --- Treaty Permissions ---\r\n    function canEditTreaty(treaty) {\r\n        if (!account) return false;\r\n        return account.username === treaty.owner || account.username === \"GameMaster\";\r\n    }\r\n    function canTransferTreaty(treaty) {\r\n        return account && account.username === \"GameMaster\";\r\n    }\r\n\r\n    // --- Treaty Dialog UI ---\r\n    function TreatyDialog({ open, mode, data, onSave, onClose, error, saving, empires, accounts }) {\r\n        const [form, setForm] = useState(() => data ? { ...data } : {\r\n            title: '', content: '', participants: [], status: 'discussion', owner: account?.username || ''\r\n        });\r\n        const [showParticipantsDropdown, setShowParticipantsDropdown] = useState(false);\r\n        const dropdownBtnRef = useRef(null);\r\n        const dropdownListRef = useRef(null);\r\n\r\n        useEffect(() => {\r\n            if (data) setForm({ ...data });\r\n            else setForm({ title: '', content: '', participants: [], status: 'discussion', owner: account?.username || '' });\r\n        }, [data, open]);\r\n\r\n        // --- Dropdown close on outside click ---\r\n        useEffect(() => {\r\n            if (!showParticipantsDropdown) return;\r\n            function handleClick(e) {\r\n                if (\r\n                    dropdownBtnRef.current &&\r\n                    !dropdownBtnRef.current.contains(e.target) &&\r\n                    dropdownListRef.current &&\r\n                    !dropdownListRef.current.contains(e.target)\r\n                ) {\r\n                    setShowParticipantsDropdown(false);\r\n                }\r\n            }\r\n            document.addEventListener('mousedown', handleClick);\r\n            return () => document.removeEventListener('mousedown', handleClick);\r\n        }, [showParticipantsDropdown]);\r\n\r\n        // Keyboard navigation: close dropdown on Escape\r\n        useEffect(() => {\r\n            if (!showParticipantsDropdown) return;\r\n            function handleKey(e) {\r\n                if (e.key === \"Escape\") setShowParticipantsDropdown(false);\r\n            }\r\n            document.addEventListener('keydown', handleKey);\r\n            return () => document.removeEventListener('keydown', handleKey);\r\n        }, [showParticipantsDropdown]);\r\n\r\n        if (!open) return null;\r\n\r\n        const isEdit = mode === 'edit';\r\n        const statuses = [\r\n            { value: 'discussion', label: '🗨️ In Discussion' },\r\n            { value: 'active', label: '✅ Active' },\r\n            { value: 'broken', label: '❌ Broken' },\r\n            { value: 'expired', label: '⌛ Expired' },\r\n            { value: 'other', label: '❓ Other' }\r\n        ];\r\n\r\n        // Helper for participants dropdown\r\n        function toggleParticipant(name) {\r\n            setForm(f => {\r\n                const exists = f.participants.includes(name);\r\n                return {\r\n                    ...f,\r\n                    participants: exists\r\n                        ? f.participants.filter(p => p !== name)\r\n                        : [...f.participants, name]\r\n                };\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"treaty-dialog-overlay\">\r\n                <div className=\"treaty-dialog\">\r\n                    <h2>{isEdit ? 'Edit Treaty' : 'New Treaty'}</h2>\r\n                    <form onSubmit={e => { e.preventDefault(); onSave(form); }}>\r\n                        <label>\r\n                            Title:\r\n                            <input\r\n                                value={form.title}\r\n                                onChange={e => setForm(f => ({ ...f, title: e.target.value }))}\r\n                                required\r\n                                disabled={saving}\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            Status:\r\n                            <select\r\n                                value={form.status}\r\n                                onChange={e => setForm(f => ({ ...f, status: e.target.value }))}\r\n                                disabled={saving}\r\n                            >\r\n                                {statuses.map(s => (\r\n                                    <option key={s.value} value={s.value}>{s.label}</option>\r\n                                ))}\r\n                            </select>\r\n                        </label>\r\n                        <label style={{ position: 'relative' }}>\r\n                            Participants:\r\n                            <div\r\n                                className=\"participants-dropdown\"\r\n                                ref={dropdownBtnRef}\r\n                                tabIndex={0}\r\n                                style={{\r\n                                    userSelect: 'none',\r\n                                    background: 'var(--primary-bg)',\r\n                                    border: '1px solid var(--border)',\r\n                                    borderRadius: 8,\r\n                                    padding: '0.7rem 1rem',\r\n                                    minHeight: '2.2rem',\r\n                                    cursor: saving ? 'not-allowed' : 'pointer',\r\n                                    marginBottom: '0.7rem',\r\n                                    position: 'relative',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'space-between'\r\n                                }}\r\n                                // Prevent the first click from toggling the first item\r\n                                onMouseDown={e => e.preventDefault()}\r\n                                onClick={e => {\r\n                                    if (!saving) setShowParticipantsDropdown(v => !v);\r\n                                }}\r\n                                aria-haspopup=\"listbox\"\r\n                                aria-expanded={showParticipantsDropdown}\r\n                            >\r\n                                <span style={{\r\n                                    color: form.participants.length ? 'var(--text)' : '#aaa',\r\n                                    overflow: 'hidden',\r\n                                    textOverflow: 'ellipsis',\r\n                                    whiteSpace: 'nowrap',\r\n                                    flex: 1\r\n                                }}>\r\n                                    {form.participants.length\r\n                                        ? form.participants.join(', ')\r\n                                        : 'Select participants...'}\r\n                                </span>\r\n                                <span style={{ marginLeft: 8, color: '#aaa', fontSize: '1.1em', pointerEvents: 'none' }}>▼</span>\r\n                            </div>\r\n                            {showParticipantsDropdown && (\r\n                                <div\r\n                                    className=\"participants-dropdown-list\"\r\n                                    ref={dropdownListRef}\r\n                                    style={{\r\n                                        position: 'absolute',\r\n                                        left: 0,\r\n                                        right: 0,\r\n                                        top: 'calc(100% + 8px)',\r\n                                        zIndex: 1001,\r\n                                        background: 'var(--card-bg)',\r\n                                        border: '1.5px solid var(--accent)',\r\n                                        borderRadius: 10,\r\n                                        boxShadow: '0 4px 24px #0005',\r\n                                        minWidth: 210,\r\n                                        padding: '0.3rem 0',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        gap: '0.2rem',\r\n                                        maxHeight: 220,\r\n                                        overflowY: 'auto'\r\n                                    }}\r\n                                    onClick={e => e.stopPropagation()}\r\n                                    role=\"listbox\"\r\n                                >\r\n                                    {empires.map((e, idx) => (\r\n                                        <button\r\n                                            key={e}\r\n                                            type=\"button\"\r\n                                            className=\"participants-dropdown-item\"\r\n                                            style={{\r\n                                                background: 'none',\r\n                                                border: 'none',\r\n                                                color: 'var(--accent)',\r\n                                                fontSize: '1.08rem',\r\n                                                textAlign: 'left',\r\n                                                padding: '0.7rem 1.2rem',\r\n                                                cursor: saving ? 'not-allowed' : 'pointer',\r\n                                                borderRadius: 7,\r\n                                                transition: 'background 0.15s, color 0.15s',\r\n                                                width: '100%',\r\n                                                display: 'flex',\r\n                                                alignItems: 'center',\r\n                                                gap: '0.7em',\r\n                                                position: 'relative',\r\n                                                backgroundColor: form.participants.includes(e) ? 'rgba(0,191,255,0.10)' : 'transparent'\r\n                                            }}\r\n                                            tabIndex={-1}\r\n                                            // Prevent the first click after opening from toggling the first item\r\n                                            onMouseDown={ev => ev.preventDefault()}\r\n                                            onClick={ev => {\r\n                                                ev.stopPropagation();\r\n                                                if (!saving) toggleParticipant(e);\r\n                                            }}\r\n                                        >\r\n                                            <span style={{\r\n                                                display: 'inline-flex',\r\n                                                alignItems: 'center',\r\n                                                justifyContent: 'center',\r\n                                                width: 22,\r\n                                                height: 22,\r\n                                                borderRadius: 5,\r\n                                                border: '1.5px solid var(--accent)',\r\n                                                background: form.participants.includes(e) ? 'var(--accent)' : 'var(--primary-bg)',\r\n                                                marginRight: 10,\r\n                                                transition: 'background 0.15s, border 0.15s'\r\n                                            }}>\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={form.participants.includes(e)}\r\n                                                    readOnly\r\n                                                    tabIndex={-1}\r\n                                                    style={{\r\n                                                        accentColor: 'var(--accent)',\r\n                                                        width: 18,\r\n                                                        height: 18,\r\n                                                        margin: 0,\r\n                                                        pointerEvents: 'none'\r\n                                                    }}\r\n                                                />\r\n                                            </span>\r\n                                            <span style={{\r\n                                                color: form.participants.includes(e) ? '#fff' : 'var(--accent)',\r\n                                                fontWeight: form.participants.includes(e) ? 600 : 400,\r\n                                                flex: 1,\r\n                                                textAlign: 'left'\r\n                                            }}>\r\n                                                {e}\r\n                                            </span>\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </label>\r\n                        {account?.username === \"GameMaster\" && (\r\n                            <label>\r\n                                Owner:\r\n                                <select\r\n                                    value={form.owner}\r\n                                    onChange={e => setForm(f => ({ ...f, owner: e.target.value }))}\r\n                                    disabled={saving}\r\n                                >\r\n                                    {Object.keys(accounts).map(acc => (\r\n                                        <option key={acc} value={acc}>{acc}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </label>\r\n                        )}\r\n                        <label>\r\n                            Content:\r\n                            <textarea\r\n                                value={form.content}\r\n                                onChange={e => setForm(f => ({ ...f, content: e.target.value }))}\r\n                                rows={7}\r\n                                required\r\n                                disabled={saving}\r\n                            />\r\n                        </label>\r\n                        {error && <div className=\"login-error treaty-error\">{error}</div>}\r\n                        <div className=\"treaty-form-actions\">\r\n                            <button type=\"submit\" className=\"empire-save-btn\" disabled={saving}>\r\n                                {isEdit ? \"Save Changes\" : \"Create Treaty\"}\r\n                            </button>\r\n                            <button type=\"button\" className=\"empire-back-btn\" onClick={onClose} disabled={saving}>Cancel</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // --- Treaty View UI ---\r\n    function TreatyView({ treaty, onBack, onEdit, onTransfer, canEdit, canTransfer, accounts }) {\r\n        if (!treaty) return null;\r\n        const statuses = {\r\n            discussion: '🗨️ In Discussion',\r\n            active: '✅ Active',\r\n            broken: '❌ Broken',\r\n            expired: '⌛ Expired',\r\n            other: '❓ Other'\r\n        };\r\n        return (\r\n            <div className=\"treaty-dialog-overlay\">\r\n                <div className=\"treaty-dialog\">\r\n                    <h2>{treaty.title}</h2>\r\n                    <div><b>Status:</b> {statuses[treaty.status] || treaty.status}</div>\r\n                    <div><b>Owner:</b> {treaty.owner}</div>\r\n                    <div><b>Participants:</b> {treaty.participants?.join(', ') || <i>None</i>}</div>\r\n                    <div style={{margin: '1em 0', whiteSpace: 'pre-line'}}>{treaty.content}</div>\r\n                    <div className=\"treaty-form-actions\">\r\n                        <button className=\"empire-back-btn\" style={{minWidth: 110, maxWidth: 160}} onClick={onBack}>Back</button>\r\n                        {canEdit && <button className=\"empire-save-btn\" style={{minWidth: 110, maxWidth: 160}} onClick={onEdit}>Edit</button>}\r\n                        {/* The owner transfer dropdown is intentionally removed from view mode */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // --- NEW: Permissions state for GameMaster ---\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showPermissions, setShowPermissions] = useState(false);\r\n    const [gmPermissions, setGmPermissions] = useState(() => {\r\n        // Persist in localStorage\r\n        const saved = localStorage.getItem('stellarisGmPermissions');\r\n        return saved ? JSON.parse(saved) : { canDeleteMessages: true };\r\n    });\r\n\r\n    // Save GM permissions to localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('stellarisGmPermissions', JSON.stringify(gmPermissions));\r\n    }, [gmPermissions]);\r\n\r\n    // --- NEW: Menu handlers ---\r\n    function handleMenuToggle() {\r\n        setShowMenu(v => !v);\r\n        setShowPermissions(false);\r\n    }\r\n    function handleMenuClose() {\r\n        setShowMenu(false);\r\n        setShowPermissions(false);\r\n    }\r\n    // Keep menu open when hovering either dropdown or permissions\r\n    const menuDropdownRef = useRef(null);\r\n    const permissionsDropdownRef = useRef(null);\r\n\r\n    // Close menu only if mouse leaves both dropdowns\r\n    useEffect(() => {\r\n        if (!showMenu && !showPermissions) return;\r\n        function handleMouseMove(e) {\r\n            if (\r\n                menuDropdownRef.current &&\r\n                permissionsDropdownRef.current &&\r\n                !menuDropdownRef.current.contains(e.target) &&\r\n                !permissionsDropdownRef.current.contains(e.target)\r\n            ) {\r\n                setShowMenu(false);\r\n                setShowPermissions(false);\r\n            }\r\n        }\r\n        document.addEventListener('mousedown', handleMouseMove);\r\n        return () => document.removeEventListener('mousedown', handleMouseMove);\r\n    }, [showMenu, showPermissions]);\r\n    function handlePermissionsToggle() {\r\n        setShowPermissions(v => !v);\r\n    }\r\n    function handlePermissionChange(key, value) {\r\n        setGmPermissions(prev => ({ ...prev, [key]: value }));\r\n    }\r\n\r\n    // --- NEW: Other menu options ---\r\n    // REMOVE handleShowAbout and handleShowTheme\r\n\r\n    // Only load empireInfo when switching to the Empires tab and not viewing/editing any empire.\r\n    // This prevents any reloads while editing or viewing an empire.\r\n    useEffect(() => {\r\n        if (\r\n            activeTab === 'empires' &&\r\n            !editEmpire &&\r\n            !empirePage\r\n        ) {\r\n            // Add cache-busting query param\r\n            fetch(`/empireInfo.json?ts=${Date.now()}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setEmpireInfo(data && typeof data === 'object' ? data : {});\r\n                    setEmpireInfoLoaded(true);\r\n                })\r\n                .catch(() => setEmpireInfoLoaded(true));\r\n        }\r\n    // Only run when switching tabs, or leaving view/edit mode\r\n    }, [activeTab, editEmpire, empirePage]);\r\n\r\n    // Helper: get empire names\r\n    function getEmpireNames() {\r\n        // Only include empires that exist (already the case)\r\n        return empires.map(e => e.name);\r\n    }\r\n\r\n    // Helper: get boards from linked empires\r\n    function getLinkedBoards() {\r\n        const names = getEmpireNames();\r\n        return getNationPairs(names);\r\n    }\r\n\r\n    // Helper: get account linked to empire\r\n    function getEmpireAccount(empireName) {\r\n        const emp = empires.find(e => e.name === empireName);\r\n        return emp && emp.account ? emp.account : null;\r\n    }\r\n\r\n    // Only show boards for the empire assigned to the logged-in account, except GameMaster sees all\r\n    const filteredBoards = account\r\n        ? account.username === \"GameMaster\"\r\n            ? getLinkedBoards()\r\n            : getLinkedBoards().filter(([a, b]) =>\r\n                getEmpireAccount(a) === account.username || getEmpireAccount(b) === account.username\r\n            )\r\n        : [];\r\n\r\n    // GameMaster: link/unlink accounts to empires\r\n    function handleLinkAccount(empireName, accountName) {\r\n        fetch('/api/empires/link', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ empireName, accountName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev =>\r\n                    prev.map(e => e.name === empireName ? { ...e, account: accountName } : e)\r\n                );\r\n            }\r\n        });\r\n    }\r\n    function handleUnlinkAccount(empireName) {\r\n        fetch('/api/empires/unlink', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ empireName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev =>\r\n                    prev.map(e => e.name === empireName ? { ...e, account: null } : e)\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    // Save selected board to localStorage\r\n    function handleBoardSelect(pair) {\r\n        const key = pair.join('|');\r\n        setSelected(key);\r\n        localStorage.setItem('stellarisSelectedBoard', key);\r\n    }\r\n\r\n    // Fetch messages for the selected board from the server\r\n    useEffect(() => {\r\n        // Only poll messages if on channels tab and not editing/viewing empire\r\n        if (\r\n            !selected ||\r\n            activeTab !== 'channels' ||\r\n            editEmpire ||\r\n            empirePage\r\n        ) {\r\n            // Stop polling if not in correct state\r\n            if (pollingRef.current) {\r\n                clearInterval(pollingRef.current);\r\n                pollingRef.current = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Use selected as key\r\n        const key = selected;\r\n\r\n        // Function to fetch messages\r\n        const fetchMessages = () => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(key)}`)\r\n                .then(res => {\r\n                    if (!res.ok) throw new Error('Network response was not ok');\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: data\r\n                    }));\r\n                })\r\n                .catch((err) => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: []\r\n                    }));\r\n                    console.error('Failed to fetch messages:', err);\r\n                });\r\n        };\r\n\r\n        // Initial fetch\r\n        fetchMessages();\r\n\r\n        // Set up polling\r\n        pollingRef.current = setInterval(fetchMessages, 2000);\r\n\r\n        // Cleanup on unmount or when selected/activeTab/editEmpire/empirePage changes\r\n        return () => {\r\n            if (pollingRef.current) {\r\n                clearInterval(pollingRef.current);\r\n                pollingRef.current = null;\r\n            }\r\n        };\r\n    }, [selected, activeTab, editEmpire, empirePage]);\r\n\r\n    // Scroll to bottom only when messages actually change for the selected board\r\n    const prevMessagesLengthRef = useRef(0);\r\n    useEffect(() => {\r\n        if (!selected) return;\r\n        const currentMessages = messages[selected] || [];\r\n        if (currentMessages.length !== prevMessagesLengthRef.current) {\r\n            if (messagesEndRef.current) {\r\n                messagesEndRef.current.scrollIntoView({ behavior: 'auto' });\r\n            }\r\n            prevMessagesLengthRef.current = currentMessages.length;\r\n        }\r\n    }, [messages, selected]);\r\n\r\n    // When posting, always use the logged-in account's empire name\r\n    function postMessage(e) {\r\n        e.preventDefault();\r\n        if (!selected || !account || !text.trim()) return;\r\n        const key = selected;\r\n        const msg = {\r\n            board: key,\r\n            author: account.username,\r\n            text,\r\n            timestamp: Date.now()\r\n        };\r\n        fetch('/api/messages', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(msg)\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(key)}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: data\r\n                    }));\r\n                });\r\n        });\r\n        setText('');\r\n    }\r\n\r\n    // Fetch accounts from server (accounts.json)\r\n    useEffect(() => {\r\n        fetch('/accounts.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAccounts(data);\r\n                setAccountsLoaded(true);\r\n            })\r\n            .catch(() => setAccountsLoaded(true));\r\n    }, []);\r\n\r\n    // Load empires from empires.json\r\n    useEffect(() => {\r\n        fetch('/empires.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setEmpires(Array.isArray(data) ? data : []);\r\n            });\r\n    }, []);\r\n\r\n    // Fetch treaties from backend\r\n    useEffect(() => {\r\n        fetch('/treaties.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTreaties(Array.isArray(data) ? data : []);\r\n                setTreatiesLoaded(true);\r\n            })\r\n            .catch(() => setTreatiesLoaded(true));\r\n    }, []);\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault();\r\n        // Wait until accounts are loaded\r\n        if (!accountsLoaded) {\r\n            setError('Accounts are still loading, please wait...');\r\n            return;\r\n        }\r\n        const username = loginUser.trim();\r\n        const password = loginPass.trim();\r\n        if (!accounts[username]) {\r\n            setError('Invalid credentials');\r\n            return;\r\n        }\r\n        if (accounts[username] !== password) {\r\n            setError('Invalid credentials');\r\n            return;\r\n        }\r\n        setAccount({ username });\r\n        localStorage.setItem('stellarisAccount', JSON.stringify({ username }));\r\n        setError('');\r\n    }\r\n\r\n    function handleLogout() {\r\n        setAccount(null);\r\n        localStorage.removeItem('stellarisAccount');\r\n    }\r\n\r\n    // Save empire info to backend and update local state\r\n    function saveEmpireInfo(name, info) {\r\n        return fetch('/api/empireInfo', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, info })\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            // After saving, reload from backend with cache-busting param\r\n            return fetch(`/empireInfo.json?ts=${Date.now()}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setEmpireInfo(data && typeof data === 'object' ? data : {});\r\n                });\r\n        });\r\n    }\r\n\r\n    // Edit panel for empire info\r\n    function EmpireEditPanel({ name, onCancel }) {\r\n        // Only initialize edit state from empireInfo[name] when the component mounts\r\n        const info = empireInfo[name] || {};\r\n        const [edit, setEdit] = useState(info);\r\n\r\n        // Do NOT use useEffect to update edit state from empireInfo.\r\n        // This ensures the text fields are not reset while editing.\r\n\r\n        function handleChange(e) {\r\n            setEdit({ ...edit, [e.target.name]: e.target.value });\r\n        }\r\n        function handleSave(e) {\r\n            e.preventDefault();\r\n            saveEmpireInfo(name, edit).then(() => {\r\n                onCancel();\r\n            });\r\n        }\r\n\r\n        return (\r\n            <form className=\"empire-edit-form\" onSubmit={handleSave}>\r\n                <label>\r\n                    Lore:\r\n                    <textarea\r\n                        name=\"lore\"\r\n                        value={edit.lore || ''}\r\n                        onChange={handleChange}\r\n                        rows={3}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Stats:\r\n                    <input name=\"stats\" value={edit.stats || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Ethics:\r\n                    <input name=\"ethics\" value={edit.ethics || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Civics:\r\n                    <input name=\"civics\" value={edit.civics || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Special Info:\r\n                    <input name=\"special\" value={edit.special || ''} onChange={handleChange} />\r\n                </label>\r\n                <div style={{display: 'flex', gap: '1rem', marginTop: '1rem'}}>\r\n                    <button type=\"submit\" className=\"empire-save-btn\">Save</button>\r\n                    <button type=\"button\" className=\"empire-back-btn\" onClick={onCancel}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    // View panel for empire info\r\n    function EmpirePanel({ name, canEdit }) {\r\n        const info = empireInfo[name] || {};\r\n        return (\r\n            <div\r\n                className=\"empire-info-card empire-info-page\"\r\n            >\r\n                <h2 className=\"empire-info-title\">{name}</h2>\r\n                <div className=\"empire-info-owner\">\r\n                    Owner: <span>{getEmpireAccount(name) || <i>Unassigned</i>}</span>\r\n                </div>\r\n                <div className=\"empire-info-details\">\r\n                    <div><b>Lore:</b> <div className=\"empire-info-field\">{info.lore || <i>No lore set.</i>}</div></div>\r\n                    <div><b>Stats:</b> <div className=\"empire-info-field\">{info.stats || <i>No stats set.</i>}</div></div>\r\n                    <div><b>Ethics:</b> <div className=\"empire-info-field\">{info.ethics || <i>No ethics set.</i>}</div></div>\r\n                    <div><b>Civics:</b> <div className=\"empire-info-field\">{info.civics || <i>No civics set.</i>}</div></div>\r\n                    <div><b>Special Info:</b> <div className=\"empire-info-field\">{info.special || <i>No special info set.</i>}</div></div>\r\n                </div>\r\n                <div className=\"empire-actions\">\r\n                    <button className=\"empire-back-btn\" onClick={() => setEmpirePage(null)}>Back to Empires</button>\r\n                    {canEdit && (\r\n                        <button className=\"empire-save-btn\" onClick={() => setEditEmpire(name)}>Edit</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Defensive: ensure empireInfo is always an object\r\n    useEffect(() => {\r\n        if (!empireInfo || typeof empireInfo !== 'object' || Array.isArray(empireInfo)) {\r\n            setEmpireInfo({});\r\n        }\r\n    }, [empireInfo]);\r\n\r\n    // Defensive: ensure accounts is always an object\r\n    useEffect(() => {\r\n        if (!accounts || typeof accounts !== 'object' || Array.isArray(accounts)) {\r\n            setAccounts({});\r\n        }\r\n    }, [accounts]);\r\n\r\n    // Add API to create new account\r\n    function handleCreateAccount(e) {\r\n        e.preventDefault();\r\n        setAccountError('');\r\n        setAccountSuccess('');\r\n        const name = newAccountName.trim();\r\n        const pass = newAccountPass.trim();\r\n        if (!name || !pass) {\r\n            setAccountError('Name and password required');\r\n            return;\r\n        }\r\n        if (accounts[name]) {\r\n            setAccountError('Account already exists');\r\n            return;\r\n        }\r\n        setAccountsTabLoading(true);\r\n        fetch('/api/accounts', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, pass })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setAccounts(prev => ({ ...prev, [name]: pass }));\r\n                // Remove: setEmpires(prev => prev.includes(name) ? prev : [...prev, name]);\r\n                setAccountSuccess('Account created');\r\n                setNewAccountName('');\r\n                setNewAccountPass('');\r\n            } else {\r\n                setAccountError(data.error || 'Failed to create account');\r\n            }\r\n        })\r\n        .catch(() => setAccountError('Failed to create account'))\r\n        .finally(() => setAccountsTabLoading(false));\r\n    }\r\n\r\n    // API: Rename account\r\n    function handleRenameAccount(e) {\r\n        e.preventDefault();\r\n        setEditAccountError('');\r\n        setEditAccountLoading(true);\r\n        const oldName = editAccount;\r\n        const newName = editAccountName.trim();\r\n        if (!newName || newName === oldName) {\r\n            setEditAccountError('Enter a new name');\r\n            setEditAccountLoading(false);\r\n            return;\r\n        }\r\n        fetch('/api/accounts/rename', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ oldName, newName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                // Update local state\r\n                setAccounts(prev => {\r\n                    const updated = { ...prev };\r\n                    updated[newName] = updated[oldName];\r\n                    delete updated[oldName];\r\n                    return updated;\r\n                });\r\n                setEmpires(prev => prev.map(e => e === oldName ? newName : e));\r\n                setEditAccount(null);\r\n            } else {\r\n                setEditAccountError(data.error || 'Rename failed');\r\n            }\r\n        })\r\n        .catch(() => setEditAccountError('Rename failed'))\r\n        .finally(() => setEditAccountLoading(false));\r\n    }\r\n\r\n    // API: Change password\r\n    function handleChangePassword(e) {\r\n        e.preventDefault();\r\n        setEditAccountError('');\r\n        setEditAccountLoading(true);\r\n        const name = editAccount;\r\n        const pass = editAccountPass.trim();\r\n        if (!pass) {\r\n            setEditAccountError('Enter a new password');\r\n            setEditAccountLoading(false);\r\n            return;\r\n        }\r\n        fetch('/api/accounts/password', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, pass })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setAccounts(prev => ({ ...prev, [name]: pass }));\r\n                setEditAccount(null);\r\n            } else {\r\n                setEditAccountError(data.error || 'Password change failed');\r\n            }\r\n        })\r\n        .catch(() => setEditAccountError('Password change failed'))\r\n        .finally(() => setEditAccountLoading(false));\r\n    }\r\n\r\n    // API: Delete account\r\n    function handleDeleteAccount(name) {\r\n        if (!window.confirm(`Delete account \"${name}\"? This cannot be undone.`)) return;\r\n        setEditAccountLoading(true);\r\n        fetch('/api/accounts/delete', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setAccounts(prev => {\r\n                    const updated = { ...prev };\r\n                    delete updated[name];\r\n                    return updated;\r\n                });\r\n                setEmpires(prev => prev.filter(e => e !== name));\r\n                setEditAccount(null);\r\n            } else {\r\n                alert(data.error || 'Delete failed');\r\n            }\r\n        })\r\n        .catch(() => alert('Delete failed'))\r\n        .finally(() => setEditAccountLoading(false));\r\n    }\r\n\r\n    // API: Create new empire\r\n    function handleCreateEmpire(e) {\r\n        e.preventDefault();\r\n        setNewEmpireError('');\r\n        setNewEmpireLoading(true);\r\n        const name = newEmpireName.trim();\r\n        if (!name) {\r\n            setNewEmpireError('Empire name required');\r\n            setNewEmpireLoading(false);\r\n            return;\r\n        }\r\n        if (empires.some(e => e.name === name)) {\r\n            setNewEmpireError('Empire already exists');\r\n            setNewEmpireLoading(false);\r\n            return;\r\n        }\r\n        fetch('/api/empires/create', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev => [...prev, { name, account: null }]);\r\n                setNewEmpireName('');\r\n            } else {\r\n                setNewEmpireError(data.error || 'Failed to create empire');\r\n            }\r\n        })\r\n        .catch(() => setNewEmpireError('Failed to create empire'))\r\n        .finally(() => setNewEmpireLoading(false));\r\n    }\r\n\r\n    // API: Delete empire\r\n    function handleDeleteEmpire(name) {\r\n        if (!window.confirm(`Delete empire \"${name}\"? This cannot be undone.`)) return;\r\n        setNewEmpireLoading(true);\r\n        fetch('/api/empires/delete', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev => {\r\n                    const updated = prev.filter(e => e.name !== name);\r\n                    // If the selected board involves the deleted empire, clear selection\r\n                    if (selected) {\r\n                        const [a, b] = selected.split('|');\r\n                        if (a === name || b === name) {\r\n                            setSelected(null);\r\n                            localStorage.removeItem('stellarisSelectedBoard');\r\n                        }\r\n                    }\r\n                    return updated;\r\n                });\r\n            } else {\r\n                setNewEmpireError(data.error || 'Failed to delete empire');\r\n            }\r\n        })\r\n        .catch(() => setNewEmpireError('Failed to delete empire'))\r\n        .finally(() => setNewEmpireLoading(false));\r\n    }\r\n\r\n    // Treaties: permissions\r\n    function canEditTreaty(treaty) {\r\n        if (!account) return false;\r\n        return account.username === treaty.owner || account.username === \"GameMaster\";\r\n    }\r\n    function canTransferTreaty(treaty) {\r\n        return account && account.username === \"GameMaster\";\r\n    }\r\n\r\n    // Treaties: open new form\r\n    function handleAddTreaty() {\r\n        setTreatyDialog({\r\n            open: true,\r\n            mode: 'new',\r\n            data: null\r\n        });\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: open edit\r\n    function handleEditTreaty(treaty) {\r\n        setTreatyDialog({\r\n            open: true,\r\n            mode: 'edit',\r\n            data: treaty\r\n        });\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: open view\r\n    function handleViewTreaty(treaty) {\r\n        setTreatyDialog({\r\n            open: true,\r\n            mode: 'view',\r\n            data: treaty\r\n        });\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: cancel form\r\n    function handleCancelTreatyForm() {\r\n        setTreatyDialog({\r\n            open: false,\r\n            mode: null,\r\n            data: null\r\n        });\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: save (create or update)\r\n    function handleSaveTreaty(e) {\r\n        e.preventDefault();\r\n        setTreatyError('');\r\n        setTreatySaving(true);\r\n        const isEdit = treatyEditId != null;\r\n        const form = { ...treatyForm };\r\n        if (!form.title.trim() || !form.content.trim() || !form.participants.length) {\r\n            setTreatyError('Title, content, and at least one participant are required.');\r\n            setTreatySaving(false);\r\n            return;\r\n        }\r\n        if (!form.owner) form.owner = account ? account.username : '';\r\n        if (!form.status) form.status = 'discussion';\r\n        if (!form.id) form.id = isEdit ? treatyEditId : Date.now().toString();\r\n\r\n        fetch('/api/treaties', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(form)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                // Always fetch the latest treaties from /treaties.json after save\r\n                return fetch('/treaties.json?ts=' + Date.now())\r\n                    .then(res => res.json())\r\n                    .then(data2 => {\r\n                        setTreaties(Array.isArray(data2) ? data2 : []);\r\n                        setTreatyForm(null);\r\n                        setTreatyEditId(null);\r\n                        setShowTreatyForm(false);\r\n                        setTreatyViewId(form.id);\r\n                    });\r\n            } else {\r\n                setTreatyError(data.error || 'Failed to save treaty');\r\n            }\r\n        })\r\n        .catch(() => setTreatyError('Failed to save treaty'))\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n\r\n    // Treaties: transfer ownership (GM only)\r\n    function handleTransferTreatyOwner(treaty, newOwner) {\r\n        if (!canTransferTreaty(treaty)) return;\r\n        setTreatySaving(true);\r\n        fetch('/api/treaties/transfer', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: treaty.id, newOwner })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                return fetch('/treaties.json')\r\n                    .then(res => res.json())\r\n                    .then(data2 => setTreaties(Array.isArray(data2) ? data2 : []));\r\n            }\r\n        })\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n\r\n    // Treaties: form field change\r\n    function handleTreatyFormChange(e) {\r\n        const { name, value, type, options } = e.target;\r\n        if (type === 'select-multiple') {\r\n            const vals = Array.from(options).filter(o => o.selected).map(o => o.value);\r\n            setTreatyForm(f => ({ ...f, [name]: vals }));\r\n        } else {\r\n            setTreatyForm(f => ({ ...f, [name]: value }));\r\n        }\r\n    }\r\n\r\n    // Treaties: render\r\n    function renderTreatyForm() {\r\n        if (!treatyForm) return null;\r\n        return (\r\n            <form className=\"treaty-form card\" onSubmit={handleSaveTreaty}>\r\n                <div className=\"treaty-form-header\">\r\n                    <input\r\n                        name=\"title\"\r\n                        placeholder=\"Treaty Title\"\r\n                        value={treatyForm.title}\r\n                        onChange={handleTreatyFormChange}\r\n                        className=\"login-input\"\r\n                        required\r\n                        disabled={treatySaving}\r\n                    />\r\n                    <select\r\n                        name=\"status\"\r\n                        value={treatyForm.status}\r\n                        onChange={handleTreatyFormChange}\r\n                        className=\"login-input\"\r\n                        disabled={treatySaving}\r\n                    >\r\n                        {TREATY_STATUSES.map(s => (\r\n                            <option key={s.value} value={s.value}>{s.label}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"treaty-form-participants\">\r\n                    <div className=\"participants-select\">\r\n                        <label className=\"participants-label\">Participants</label>\r\n                        <select\r\n                            name=\"participants\"\r\n                            value={treatyForm.participants}\r\n                            onChange={handleTreatyFormChange}\r\n                            className=\"login-input\"\r\n                            multiple\r\n                            disabled={treatySaving}\r\n                        >\r\n                            {getEmpireNames().map(e => (\r\n                                <option key={e} value={e}>{e}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {account && account.username === \"GameMaster\" && (\r\n                        <div className=\"owner-select\">\r\n                            <label className=\"owner-label\">Owner:</label>\r\n                            <select\r\n                                name=\"owner\"\r\n                                value={treatyForm.owner}\r\n                                onChange={handleTreatyFormChange}\r\n                                className=\"login-input\"\r\n                                disabled={treatySaving}\r\n                            >\r\n                                {Object.keys(accounts).map(acc => (\r\n                                    <option key={acc} value={acc}>{acc}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <label className=\"treaty-content-label\">Treaty Content</label>\r\n                <textarea\r\n                    name=\"content\"\r\n                    placeholder=\"Treaty Content\"\r\n                    value={treatyForm.content}\r\n                    onChange={handleTreatyFormChange}\r\n                    className=\"login-input\"\r\n                    rows={9}\r\n                    required\r\n                    disabled={treatySaving}\r\n                />\r\n                <div className=\"treaty-form-actions\">\r\n                    <button type=\"submit\" className=\"empire-save-btn\" disabled={treatySaving}>\r\n                        {treatyEditId ? \"Save Changes\" : \"Create Treaty\"}\r\n                    </button>\r\n                    <button type=\"button\" className=\"empire-back-btn\" onClick={handleCancelTreatyForm} disabled={treatySaving}>Cancel</button>\r\n                    {treatyError && <div className=\"login-error treaty-error\">{treatyError}</div>}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    function renderTreatyView(treaty) {\r\n        const statusObj = TREATY_STATUSES.find(s => s.value === treaty.status);\r\n        return (\r\n            <div className=\"treaty-view card\">\r\n                <div className=\"treaty-view-header\">\r\n                    <h2 className=\"treaty-title\">{treaty.title}</h2>\r\n                    <span className=\"treaty-status\" style={{color: statusObj.color}}>{statusObj ? statusObj.label : treaty.status}</span>\r\n                </div>\r\n                <div className=\"treaty-view-owner\">\r\n                    Owner: {treaty.owner}\r\n                </div>\r\n                <div className=\"treaty-view-participants\">\r\n                    <b>Participants:</b> {treaty.participants && treaty.participants.length > 0 ? treaty.participants.join(', ') : <i>None</i>}\r\n                </div>\r\n                <div className=\"treaty-content-static\">\r\n                    {treaty.content}\r\n                </div>\r\n                <div className=\"treaty-view-actions\">\r\n                    <button className=\"empire-back-btn\" onClick={() => setTreatyViewId(null)}>Back</button>\r\n                    {canEditTreaty(treaty) && (\r\n                        <button className=\"empire-save-btn\" onClick={() => handleEditTreaty(treaty)}>Edit</button>\r\n                    )}\r\n                    {canTransferTreaty(treaty) && (\r\n                        <select\r\n                            value={treaty.owner}\r\n                            onChange={e => handleTransferTreatyOwner(treaty, e.target.value)}\r\n                            className=\"owner-transfer-select\"\r\n                        >\r\n                            {Object.keys(accounts).map(acc => (\r\n                                <option key={acc} value={acc}>{acc}</option>\r\n                            ))}\r\n                        </select>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Only show accounts tab for GameMaster\r\n    const showAccountsTab = account && account.username === \"GameMaster\";\r\n    const tabs = [\r\n        { key: 'channels', label: 'Channels' },\r\n        { key: 'empires', label: 'Empires' },\r\n        { key: 'treaties', label: 'Treaties' }\r\n    ];\r\n    if (showAccountsTab) {\r\n        tabs.push({ key: 'accounts', label: 'Manage Accounts' });\r\n        tabs.push({ key: 'manage-empires', label: 'Manage Empires' });\r\n    }\r\n\r\n    // Ref for account edit panel\r\n    const accountEditPanelRef = useRef(null);\r\n\r\n    // Scroll to edit panel when editAccount changes\r\n    useEffect(() => {\r\n        if (editAccount && accountEditPanelRef.current) {\r\n            accountEditPanelRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    }, [editAccount]);\r\n\r\n    // --- MODIFIED: Only allow delete if GM and permission enabled ---\r\n    function handleDeleteMessage(boardKey, msgIdx) {\r\n        if (!account || account.username !== \"GameMaster\" || !gmPermissions.canDeleteMessages) return;\r\n        if (!window.confirm(\"Delete this message?\")) return;\r\n        fetch('/api/messages/delete', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ board: boardKey, index: Number(msgIdx) })\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(boardKey)}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [boardKey]: data\r\n                    }));\r\n                });\r\n        });\r\n    }\r\n\r\n    // --- Treaties: filtered and sorted by search ---\r\n    const filteredTreaties = treatySearch.trim()\r\n        ? treaties.filter(t =>\r\n            (t.title && t.title.toLowerCase().includes(treatySearch.toLowerCase())) ||\r\n            (t.content && t.content.toLowerCase().includes(treatySearch.toLowerCase())) ||\r\n            (t.owner && t.owner.toLowerCase().includes(treatySearch.toLowerCase())) ||\r\n            (Array.isArray(t.participants) && t.participants.some(p => p.toLowerCase().includes(treatySearch.toLowerCase())))\r\n        )\r\n        : treaties;\r\n    const sortedTreaties = [...filteredTreaties].sort((a, b) => {\r\n        if (treatySort === 'title') return a.title.localeCompare(b.title);\r\n        if (treatySort === 'owner') return a.owner.localeCompare(b.owner);\r\n        return 0;\r\n    });\r\n\r\n    // --- Empires: filtered and sorted by search ---\r\n    const filteredEmpires = empireSearch.trim()\r\n        ? getEmpireNames().filter(e => e.toLowerCase().includes(empireSearch.toLowerCase()))\r\n        : getEmpireNames();\r\n    const sortedEmpires = [...filteredEmpires].sort((a, b) => {\r\n        if (empireSort === 'name') return a.localeCompare(b);\r\n        return 0;\r\n    });\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <header className=\"header\">\r\n                <h1>Stellaris RP Diplomatic Message Boards</h1>\r\n                <div className=\"tabs-bar\">\r\n                    {tabs.map(tab => (\r\n                        <button\r\n                            key={tab.key}\r\n                            className={`tab-btn${activeTab === tab.key ? ' active' : ''}`}\r\n                            onClick={() => {\r\n                                setActiveTab(tab.key);\r\n                                setEmpirePage(null);\r\n                                setEditEmpire(null);\r\n                                setEditAccount(null);\r\n                                setTreatyEditId(null);\r\n                                setTreatyViewId(null);\r\n                                setShowTreatyForm(false);\r\n                            }}\r\n                        >\r\n                            {tab.label}\r\n                        </button>\r\n                    ))}\r\n                    {/* --- Hamburger menu at top right --- */}\r\n                    <div className=\"menu-dropdown-container\">\r\n                        <button\r\n                            className=\"menu-btn\"\r\n                            aria-label=\"Open menu\"\r\n                            onClick={handleMenuToggle}\r\n                        >\r\n                            <span className=\"menu-icon\">&#9776;</span>\r\n                        </button>\r\n                        {showMenu && (\r\n                            <div\r\n                                className=\"menu-dropdown\"\r\n                                ref={menuDropdownRef}\r\n                            >\r\n                                <button className=\"menu-dropdown-item logout-btn\" onClick={handleLogout}>\r\n                                    <span className=\"logout-icon\">&#x1F511;</span> Logout\r\n                                </button>\r\n                                <button className=\"menu-dropdown-item\" onClick={handleShowAbout}>\r\n                                    About\r\n                                </button>\r\n                                <button className=\"menu-dropdown-item\" onClick={handleShowTheme}>\r\n                                    Theme Switcher\r\n                                </button>\r\n                                {account && account.username === \"GameMaster\" && (\r\n                                    <button className=\"menu-dropdown-item\" onClick={handlePermissionsToggle}>\r\n                                        Manage Permissions\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        {showPermissions && (\r\n                            <div\r\n                                className=\"menu-permissions-dropdown\"\r\n                                ref={permissionsDropdownRef}\r\n                            >\r\n                                <div className=\"menu-permissions-title\">GameMaster Permissions</div>\r\n                                <label className=\"menu-permissions-option\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={!!gmPermissions.canDeleteMessages}\r\n                                        onChange={e => handlePermissionChange('canDeleteMessages', e.target.checked)}\r\n                                    />\r\n                                    Allow deleting messages\r\n                                </label>\r\n                                {/* Add more GM toggles here if needed */}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <main className=\"main-content\">\r\n                {activeTab === 'treaties' ? (\r\n                    <section className=\"treaties-section card\">\r\n                        <div className=\"treaties-header\">\r\n                            <h2>Treaties, Contracts & Agreements</h2>\r\n                            {account && (\r\n                                <button\r\n                                    className=\"empire-save-btn\"\r\n                                    onClick={() => openTreatyDialog('new')}\r\n                                >\r\n                                    + Add New Treaty\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                        {/* --- Treaty Search Input & Sort --- */}\r\n                        <div className=\"treaty-search-container\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search treaties by title, content, owner, or participant...\"\r\n                                value={treatySearch}\r\n                                onChange={e => setTreatySearch(e.target.value)}\r\n                                className=\"treaty-search-input\"\r\n                            />\r\n                            {treatySearch && (\r\n                                <button\r\n                                    className=\"treaty-search-clear-btn\"\r\n                                    onClick={() => setTreatySearch('')}\r\n                                    title=\"Clear search\"\r\n                                >✕</button>\r\n                            )}\r\n                            <select\r\n                                value={treatySort}\r\n                                onChange={e => setTreatySort(e.target.value)}\r\n                                className=\"treaty-sort-select\"\r\n                            >\r\n                                <option value=\"title\">Sort by Title</option>\r\n                                <option value=\"owner\">Sort by Owner</option>\r\n                            </select>\r\n                        </div>\r\n                        {/* Dialogs */}\r\n                        {treatyDialog.open && treatyDialog.mode !== 'view' && (\r\n                            <TreatyDialog\r\n                                open={treatyDialog.open}\r\n                                mode={treatyDialog.mode}\r\n                                data={treatyDialog.data}\r\n                                onSave={handleTreatySave}\r\n                                onClose={closeTreatyDialog}\r\n                                error={treatyError}\r\n                                saving={treatySaving}\r\n                                empires={empires.map(e => e.name)}\r\n                                accounts={accounts}\r\n                            />\r\n                        )}\r\n                        {treatyDialog.open && treatyDialog.mode === 'view' && (\r\n                            <TreatyView\r\n                                treaty={treatyDialog.data}\r\n                                onBack={closeTreatyDialog}\r\n                                onEdit={() => openTreatyDialog('edit', treatyDialog.data)}\r\n                                onTransfer={newOwner => handleTreatyTransferOwner(treatyDialog.data.id, newOwner)}\r\n                                canEdit={canEditTreaty(treatyDialog.data)}\r\n                                canTransfer={canTransferTreaty(treatyDialog.data)}\r\n                                accounts={accounts}\r\n                            />\r\n                        )}\r\n                        {/* List */}\r\n                        <div className=\"treaties-list-container\">\r\n                            {!treatiesLoaded && <div className=\"login-loading\">Loading treaties...</div>}\r\n                            {sortedTreaties.length === 0 && treatiesLoaded && (\r\n                                <div className=\"no-messages\">No treaties found.</div>\r\n                            )}\r\n                            <ul className=\"treaties-list\">\r\n                                {sortedTreaties.map(treaty => (\r\n                                    <li\r\n                                        key={treaty.id}\r\n                                        className=\"treaty-item\"\r\n                                        onClick={() => setTreatyDialog({ open: true, mode: 'view', data: treaty })}\r\n                                    >\r\n                                        <div className=\"treaty-info\">\r\n                                            <div className=\"treaty-title\">{treaty.title}</div>\r\n                                            <div className=\"treaty-meta\">\r\n                                                <div className=\"treaty-owner\">Owner: {treaty.owner}</div>\r\n                                                <div className=\"treaty-participants\">\r\n                                                    <b>Participants:</b> {treaty.participants?.join(', ') || <i>None</i>}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"treaty-content\">\r\n                                                {treaty.content.length > 180 ? treaty.content.slice(0,180) + '…' : treaty.content}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"treaty-actions\">\r\n                                            <span className=\"treaty-status\">\r\n                                                {({\r\n                                                    discussion: '🗨️ In Discussion',\r\n                                                    active: '✅ Active',\r\n                                                    broken: '❌ Broken',\r\n                                                    expired: '⌛ Expired',\r\n                                                    other: '❓ Other'\r\n                                                })[treaty.status] || treaty.status}\r\n                                            </span>\r\n                                            <span className=\"treaty-buttons\">\r\n                                                <button\r\n                                                    className=\"empire-view-btn\"\r\n                                                    onClick={ev => { ev.stopPropagation(); setTreatyDialog({ open: true, mode: 'view', data: treaty }); }}\r\n                                                >View</button>\r\n                                                {canEditTreaty(treaty) && (\r\n                                                    <button\r\n                                                        className=\"empire-save-btn\"\r\n                                                        onClick={ev => { ev.stopPropagation(); openTreatyDialog('edit', treaty); }}\r\n                                                    >Edit</button>\r\n                                                )}\r\n                                            </span>\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n                ) : activeTab === 'manage-empires' && showAccountsTab ? (\r\n                    <section className=\"account-manage-section card\">\r\n                        <h2>Manage Empires</h2>\r\n                        <form onSubmit={handleCreateEmpire} className=\"account-form\">\r\n                            <div className=\"account-form-fields\">\r\n                                <input\r\n                                    placeholder=\"New empire name\"\r\n                                    value={newEmpireName}\r\n                                    onChange={e => setNewEmpireName(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={newEmpireLoading}\r\n                                />\r\n                                <button type=\"submit\" className=\"login-btn\" disabled={newEmpireLoading}>Create Empire</button>\r\n                            </div>\r\n                        </form>\r\n                        {newEmpireError && <div className=\"login-error\">{newEmpireError}</div>}\r\n                        <h3>Empires & Account Assignment</h3>\r\n                        <ul className=\"accounts-list\">\r\n                            {empires.map(emp => (\r\n                                <li\r\n                                    key={emp.name}\r\n                                    className=\"account-item\"\r\n                                >\r\n                                    <b>{emp.name}</b>\r\n                                    <span className=\"account-actions\">\r\n                                        <select\r\n                                            value={emp.account || ''}\r\n                                            onChange={e => {\r\n                                                const val = e.target.value;\r\n                                                if (val) handleLinkAccount(emp.name, val);\r\n                                                else handleUnlinkAccount(emp.name);\r\n                                            }}\r\n                                            className=\"account-select\"\r\n                                        >\r\n                                            <option value=\"\" className=\"account-option\">Select account...</option>\r\n                                            {Object.keys(accounts).map(accName => (\r\n                                                <option key={accName} value={accName} className=\"account-option\">\r\n                                                    {accName}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <button\r\n                                            className=\"account-manage-btn account-delete-btn\"\r\n                                            onClick={() => handleDeleteEmpire(emp.name)}\r\n                                            disabled={newEmpireLoading}\r\n                                        >Delete</button>\r\n                                    </span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </section>\r\n                ) : activeTab === 'accounts' && showAccountsTab ? (\r\n                    <section className=\"account-manage-section card\">\r\n                        <h2>Manage Accounts</h2>\r\n                        <form onSubmit={handleCreateAccount} className=\"account-form\">\r\n                            <div className=\"account-form-fields\">\r\n                                <input\r\n                                    placeholder=\"Account name\"\r\n                                    value={newAccountName}\r\n                                    onChange={e => setNewAccountName(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={accountsTabLoading}\r\n                                />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={newAccountPass}\r\n                                    onChange={e => setNewAccountPass(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={accountsTabLoading}\r\n                                />\r\n                                <button type=\"submit\" className=\"login-btn\" disabled={accountsTabLoading}>Create</button>\r\n                            </div>\r\n                        </form>\r\n                        {accountError && <div className=\"login-error\">{accountError}</div>}\r\n                        {accountSuccess && <div className=\"login-loading\" style={{color:'limegreen'}}>{accountSuccess}</div>}\r\n\r\n                        {/* Restore account list with Edit/Delete buttons */}\r\n                        <h3>All Accounts</h3>\r\n                        <ul className=\"accounts-list\">\r\n                            {Object.keys(accounts).map(acc => (\r\n                                <li\r\n                                    key={acc}\r\n                                    className=\"account-item\"\r\n                                >\r\n                                    <b>{acc}</b>\r\n                                    {acc !== \"GameMaster\" && (\r\n                                        <span className=\"account-actions\">\r\n                                            <button\r\n                                                className=\"account-manage-btn account-edit-btn\"\r\n                                                onClick={() => {\r\n                                                    setEditAccount(acc);\r\n                                                    setEditAccountName(acc);\r\n                                                    setEditAccountPass('');\r\n                                                    setEditAccountError('');\r\n                                                }}\r\n                                                disabled={editAccountLoading}\r\n                                            >Edit</button>\r\n                                            <button\r\n                                                className=\"account-manage-btn account-delete-btn\"\r\n                                                onClick={() => handleDeleteAccount(acc)}\r\n                                                disabled={editAccountLoading}\r\n                                            >Delete</button>\r\n                                        </span>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        {editAccount && (\r\n                            <div\r\n                                className=\"account-edit-panel card\"\r\n                                ref={accountEditPanelRef}\r\n                            >\r\n                                <h3>Edit Account: <b>{editAccount}</b></h3>\r\n                                <form onSubmit={handleRenameAccount} className=\"edit-account-form\">\r\n                                    <label>\r\n                                        Rename to:\r\n                                        <input\r\n                                            value={editAccountName}\r\n                                            onChange={e => setEditAccountName(e.target.value)}\r\n                                            className=\"login-input\"\r\n                                            disabled={editAccountLoading}\r\n                                        />\r\n                                    </label>\r\n                                    <button type=\"submit\" className=\"empire-save-btn\" disabled={editAccountLoading}>Rename</button>\r\n                                </form>\r\n                                <form onSubmit={handleChangePassword} className=\"change-password-form\">\r\n                                    <label>\r\n                                        New Password:\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            value={editAccountPass}\r\n                                            onChange={e => setEditAccountPass(e.target.value)}\r\n                                            className=\"login-input\"\r\n                                            disabled={editAccountLoading}\r\n                                        />\r\n                                    </label>\r\n                                    <button type=\"submit\" className=\"empire-save-btn\" disabled={editAccountLoading}>Change Password</button>\r\n                                </form>\r\n                                {editAccountError && <div className=\"login-error\">{editAccountError}</div>}\r\n                                <button className=\"empire-back-btn\" onClick={() => setEditAccount(null)} disabled={editAccountLoading}>Cancel</button>\r\n                            </div>\r\n                        )}\r\n                    </section>\r\n                ) : activeTab === 'empires' ? (\r\n                    editEmpire ? (\r\n                        <section className=\"empires-info-section card\">\r\n                            <h2>Edit {editEmpire}</h2>\r\n                            <EmpireEditPanel name={editEmpire} onCancel={() => setEditEmpire(null)} />\r\n                        </section>\r\n                    ) : empirePage ? (\r\n                        <EmpirePanel name={empirePage} canEdit={account && account.username === empirePage} />\r\n                    ) : (\r\n                        <section className=\"empires-info-section card\">\r\n                            {/* --- Empire Search Input & Sort --- */}\r\n                            <div className=\"empire-search-container\">\r\n                                <h2 className=\"section-title\">Empires Overview</h2>\r\n                                <span className=\"empire-total-count\">\r\n                                    Total Empires: <b>{sortedEmpires.length}</b>\r\n                                </span>\r\n                                <div className=\"empire-search-fields\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search empires by name...\"\r\n                                        value={empireSearch}\r\n                                        onChange={e => setEmpireSearch(e.target.value)}\r\n                                        className=\"empire-search-input\"\r\n                                    />\r\n                                    {empireSearch && (\r\n                                        <button\r\n                                            className=\"empire-search-clear-btn\"\r\n                                            onClick={() => setEmpireSearch('')}\r\n                                            title=\"Clear search\"\r\n                                        >✕</button>\r\n                                    )}\r\n                                    <select\r\n                                        value={empireSort}\r\n                                        onChange={e => setEmpireSort(e.target.value)}\r\n                                        className=\"empire-sort-select\"\r\n                                    >\r\n                                        <option value=\"name\">Sort by Name</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"empires-info-list\" style={{display: 'flex', flexWrap: 'wrap', gap: '1.5rem', justifyContent: 'flex-start'}}>\r\n                                {sortedEmpires.map(e => {\r\n                                    const linkedAccount = getEmpireAccount(e);\r\n                                    const canEdit = account && (account.username === linkedAccount || account.username === \"GameMaster\");\r\n                                    return (\r\n                                        <div\r\n                                            key={e}\r\n                                            className=\"empire-info-card empire-list-card\"\r\n                                            onClick={() => setEmpirePage(e)}\r\n                                        >\r\n                                            <h3 className=\"empire-info-title\">{e}</h3>\r\n                                            <div className=\"empire-info-owner\">\r\n                                                {linkedAccount ? <span title=\"Assigned Account\">{linkedAccount}</span> : <i>Unassigned</i>}\r\n                                            </div>\r\n                                            <div className=\"empire-actions\">\r\n                                                <button\r\n                                                    className=\"empire-view-btn\"\r\n                                                    onClick={ev => {ev.stopPropagation(); setEmpirePage(e);}}\r\n                                                >View</button>\r\n                                                {canEdit && (\r\n                                                    <button\r\n                                                        className=\"empire-save-btn\"\r\n                                                        onClick={ev => {ev.stopPropagation(); setEditEmpire(e);}}\r\n                                                    >Edit</button>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </section>\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        {!account ? (\r\n                            <section className=\"account-section card\">\r\n                                <h2 className=\"login-title\">Login</h2>\r\n                                <form onSubmit={handleLogin} className=\"account-form login-form\">\r\n                                    <div className=\"login-fields\">\r\n                                        <input\r\n                                            placeholder=\"Empire name\"\r\n                                            value={loginUser}\r\n                                            onChange={e => setLoginUser(e.target.value)}\r\n                                            required\r\n                                            disabled={!accountsLoaded}\r\n                                            className=\"login-input\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={loginPass}\r\n                                            onChange={e => setLoginPass(e.target.value)}\r\n                                            required\r\n                                            disabled={!accountsLoaded}\r\n                                            className=\"login-input\"\r\n                                        />\r\n                                    </div>\r\n                                    <button type=\"submit\" disabled={!accountsLoaded} className=\"login-btn\">Login</button>\r\n                                </form>\r\n                                {!accountsLoaded && <div className=\"login-loading\">Loading accounts...</div>}\r\n                                {error && <div className=\"login-error\">{error}</div>}\r\n                            </section>\r\n                        ) : (\r\n                            // Center the channels page\r\n                            <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n                                <section className=\"boards-section\">\r\n                                    {/* Logout button at top right */}\r\n                                    {/* <div className=\"channels-header\">\r\n                                        <span style={{marginRight: 'auto', color: '#aaa', fontWeight: 500}}>\r\n                                            Logged in as <b>{account.username}</b>\r\n                                        </span>\r\n                                        <button\r\n                                            className=\"logout-btn\"\r\n                                            onClick={handleLogout}\r\n                                            title=\"Logout\"\r\n                                        >\r\n                                            <span className=\"logout-icon\">&#x1F511;</span> Logout\r\n                                        </button>\r\n                                    </div> */}\r\n                                    {/* Main area: boards/channels list left, text channel right */}\r\n                                    <div className=\"channels-main\">\r\n                                        <div className=\"channels-sidebar\">\r\n                                            <div className=\"boards-list card\">\r\n                                                <h2>\r\n                                                    {account && account.username === \"GameMaster\"\r\n                                                        ? \"All Boards\"\r\n                                                        : \"Your Diplomatic Channels\"}\r\n                                                </h2>\r\n                                                <div className=\"boards-list-header\">\r\n                                                    <span className=\"boards-list-count\">\r\n                                                        {filteredBoards.length} {filteredBoards.length === 1 ? \"channel\" : \"channels\"}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <ul className=\"boards-list-ul\">\r\n                                                    {filteredBoards.length === 0 && (\r\n                                                        <li className=\"no-channels\">No channels available.</li>\r\n                                                    )}\r\n                                                    {filteredBoards.map(([a, b]) => {\r\n                                                        const key = a + '|' + b;\r\n                                                        return (\r\n                                                            <li key={key} className={`boards-list-item${selected === key ? ' active' : ''}`}>\r\n                                                                <button\r\n                                                                    className=\"board-btn\"\r\n                                                                    onClick={() => handleBoardSelect([a, b])}\r\n                                                                >\r\n                                                                    <span className=\"board-nations\">{a}</span>\r\n                                                                    <span className=\"board-arrow\">↔</span>\r\n                                                                    <span className=\"board-nations\">{b}</span>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                        );\r\n                                                    })}\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"channels-content\">\r\n                                            <div className=\"board-messages card\">\r\n                                                {(selected && filteredBoards.length > 0) ? (\r\n                                                    <div className=\"board-messages-inner\">\r\n                                                        <div className=\"board-title-row\">\r\n                                                            <h2 className=\"board-title\">{selected.replace('|', ' ↔ ')}</h2>\r\n                                                        </div>\r\n                                                        <div className=\"messages-panel\">\r\n                                                            <div className=\"messages-list-container\">\r\n                                                                <ul className=\"messages-list\">\r\n                                                                    {(messages[selected] || []).length === 0 && <li className=\"no-messages\">No messages yet.</li>}\r\n                                                                    {(messages[selected] || []).map((msg, i) => {\r\n                                                                        const [partnerA, partnerB] = selected.split('|');\r\n                                                                        let partnerClass = '';\r\n                                                                        if (msg.author === partnerA) partnerClass = 'message-partnerA';\r\n                                                                        else if (msg.author === partnerB) partnerClass = 'message-partnerB';\r\n                                                                        return (\r\n                                                                            <li\r\n                                                                                key={i}\r\n                                                                                className={`message-item ${partnerClass}`}\r\n                                                                                style={{\r\n                                                                                    display: 'flex',\r\n                                                                                    alignItems: 'stretch',\r\n                                                                                    justifyContent: 'flex-start',\r\n                                                                                    gap: '0.7rem'\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <div style={{\r\n                                                                                    flex: 1,\r\n                                                                                    minWidth: 0,\r\n                                                                                    display: 'flex',\r\n                                                                                    flexDirection: 'column',\r\n                                                                                    gap: '0.15rem',\r\n                                                                                    justifyContent: 'center'\r\n                                                                                }}>\r\n                                                                                    <div className=\"message-meta\" style={{marginBottom: 0}}>\r\n                                                                                        <span className=\"message-author\">{msg.author}</span>\r\n                                                                                        <small className=\"message-date\">{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                                                                    </div>\r\n                                                                                    <div className=\"message-text\">{msg.text}</div>\r\n                                                                                </div>\r\n                                                                                {account && account.username === \"GameMaster\" && gmPermissions.canDeleteMessages && (\r\n                                                                                    <div style={{\r\n                                                                                        display: 'flex',\r\n                                                                                        alignItems: 'center',\r\n                                                                                        justifyContent: 'center',\r\n                                                                                        minWidth: '2.5em',\r\n                                                                                        paddingLeft: '0.5em'\r\n                                                                                    }}>\r\n                                                                                        <button\r\n                                                                                            title=\"Delete message\"\r\n                                                                                            style={{\r\n                                                                                                background: 'none',\r\n                                                                                                border: 'none',\r\n                                                                                                color: '#ff4d4d',\r\n                                                                                                cursor: 'pointer',\r\n                                                                                                fontSize: '1.3em',\r\n                                                                                                display: 'flex',\r\n                                                                                                alignItems: 'center',\r\n                                                                                                height: '2.2em'\r\n                                                                                            }}\r\n                                                                                            onClick={e => {\r\n                                                                                                e.stopPropagation();\r\n                                                                                                handleDeleteMessage(selected, i);\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <span role=\"img\" aria-label=\"Delete\">&#128465;</span>\r\n                                                                                        </button>\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                    <div ref={messagesEndRef} />\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                            <form onSubmit={postMessage} className=\"message-form message-form-bottom\">\r\n                                                                <input\r\n                                                                    placeholder=\"Your empire\"\r\n                                                                    value={account.username}\r\n                                                                    disabled\r\n                                                                    required\r\n                                                                    className=\"author-input\"\r\n                                                                />\r\n                                                                <input\r\n                                                                    placeholder=\"Message\"\r\n                                                                    value={text}\r\n                                                                    onChange={e => setText(e.target.value)}\r\n                                                                    required\r\n                                                                    className=\"text-input\"\r\n                                                                />\r\n                                                                <button type=\"submit\" className=\"send-btn\">Send</button>\r\n                                                            </form>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <div className=\"no-messages\">Select a channel to view messages.</div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </main>\r\n            <footer className=\"footer\">\r\n                <span>Stellaris RP Board &copy; {new Date().getFullYear()}</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}