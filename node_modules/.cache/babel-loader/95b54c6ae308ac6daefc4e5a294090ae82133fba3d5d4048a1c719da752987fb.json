{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./App.css';import'./Treaties.css';import'./Empires.css';import'./Boards.css';import'./Accounts.css';import{getNationPairs}from'./utils/getNationPairs';import TreatyDialog from'./components/TreatyDialog';import TreatyView from'./components/TreatyView';import EmpireEditPanel from'./components/EmpireEditPanel';import EmpirePanel from'./components/EmpirePanel';import MenuDropdown from'./components/MenuDropdown';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[empires,setEmpires]=useState([]);const[selected,setSelected]=useState(()=>{const saved=localStorage.getItem('stellarisSelectedBoard');return saved?saved:null;});const[messages,setMessages]=useState({});const[text,setText]=useState('');const pollingRef=useRef();const messagesEndRef=useRef(null);const[accounts,setAccounts]=useState({});const[accountsLoaded,setAccountsLoaded]=useState(false);const[account,setAccount]=useState(()=>{const saved=localStorage.getItem('stellarisAccount');return saved?JSON.parse(saved):null;});const[loginUser,setLoginUser]=useState('');const[loginPass,setLoginPass]=useState('');const[error,setError]=useState('');const[activeTab,setActiveTab]=useState('channels');const[empirePage,setEmpirePage]=useState(null);const[editEmpire,setEditEmpire]=useState(null);const[empireInfo,setEmpireInfo]=useState({});const[empireInfoLoaded,setEmpireInfoLoaded]=useState(false);// Account creation and management\nconst[newAccountName,setNewAccountName]=useState('');const[newAccountPass,setNewAccountPass]=useState('');const[accountError,setAccountError]=useState('');const[accountSuccess,setAccountSuccess]=useState('');const[accountsTabLoading,setAccountsTabLoading]=useState(false);const[editAccount,setEditAccount]=useState(null);const[editAccountName,setEditAccountName]=useState('');const[editAccountPass,setEditAccountPass]=useState('');const[editAccountError,setEditAccountError]=useState('');const[editAccountLoading,setEditAccountLoading]=useState(false);// Manage Empires tab\nconst[newEmpireName,setNewEmpireName]=useState('');const[newEmpireError,setNewEmpireError]=useState('');const[newEmpireLoading,setNewEmpireLoading]=useState(false);// --- Treaties State (NEW IMPLEMENTATION) ---\nconst[treaties,setTreaties]=useState([]);const[treatiesLoaded,setTreatiesLoaded]=useState(false);const[treatyDialog,setTreatyDialog]=useState({open:false,mode:null,data:null});const[treatyError,setTreatyError]=useState('');const[treatySaving,setTreatySaving]=useState(false);// --- Add search states ---\nconst[treatySearch,setTreatySearch]=useState(()=>localStorage.getItem('treatySearch')||'');const[empireSearch,setEmpireSearch]=useState(()=>localStorage.getItem('empireSearch')||'');// --- Add sort states ---\nconst[treatySort,setTreatySort]=useState('title');const[empireSort,setEmpireSort]=useState('name');// --- End states ---\n// --- Fetch treaties ---\nfunction fetchTreaties(){fetch('/treaties.json?ts='+Date.now()).then(res=>res.json()).then(data=>{setTreaties(Array.isArray(data)?data:[]);setTreatiesLoaded(true);}).catch(()=>setTreatiesLoaded(true));}useEffect(()=>{fetchTreaties();},[]);// --- Treaty CRUD ---\nfunction openTreatyDialog(mode){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;setTreatyDialog({open:true,mode,data});setTreatyError('');}function closeTreatyDialog(){setTreatyDialog({open:false,mode:null,data:null});setTreatyError('');}function handleTreatySave(form){var _payload$participants;setTreatySaving(true);setTreatyError('');const payload={...form};if(!payload.title||!payload.content||!((_payload$participants=payload.participants)!==null&&_payload$participants!==void 0&&_payload$participants.length)){setTreatyError('Title, content, and at least one participant are required.');setTreatySaving(false);return;}if(!payload.owner)payload.owner=(account===null||account===void 0?void 0:account.username)||'';if(!payload.status)payload.status='discussion';if(!payload.id)payload.id=Date.now().toString();fetch('/api/treaties',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)}).then(res=>res.json()).then(data=>{if(data.success){// --- FIX: update treaties state locally, just like accounts ---\nsetTreaties(prev=>{// If editing, replace; if new, add\nconst idx=prev.findIndex(t=>t.id===payload.id);if(idx!==-1){const updated=[...prev];updated[idx]={...prev[idx],...payload};return updated;}else{return[...prev,payload];}});closeTreatyDialog();}else{setTreatyError(data.error||'Failed to save treaty');}}).catch(()=>setTreatyError('Failed to save treaty')).finally(()=>setTreatySaving(false));}function handleTreatyTransferOwner(id,newOwner){setTreatySaving(true);fetch('/api/treaties/transfer',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id,newOwner})}).then(res=>res.json()).then(data=>{if(data.success)fetchTreaties();}).finally(()=>setTreatySaving(false));}// --- Treaty Permissions ---\nfunction canEditTreaty(treaty){if(!account)return false;return account.username===treaty.owner||account.username===\"GameMaster\";}function canTransferTreaty(treaty){return account&&account.username===\"GameMaster\";}// --- NEW: Permissions state for GameMaster ---\nconst[showMenu,setShowMenu]=useState(false);const[showPermissions,setShowPermissions]=useState(false);const[gmPermissions,setGmPermissions]=useState(()=>{// Persist in localStorage\nconst saved=localStorage.getItem('stellarisGmPermissions');return saved?JSON.parse(saved):{canDeleteMessages:true};});// Save GM permissions to localStorage\nuseEffect(()=>{localStorage.setItem('stellarisGmPermissions',JSON.stringify(gmPermissions));},[gmPermissions]);// --- NEW: Menu handlers ---\nfunction handleMenuToggle(){setShowMenu(v=>!v);setShowPermissions(false);}function handleMenuClose(){setShowMenu(false);setShowPermissions(false);}// Keep menu open when hovering either dropdown or permissions\nconst menuDropdownRef=useRef(null);const permissionsDropdownRef=useRef(null);// Close menu only if mouse leaves both dropdowns\nuseEffect(()=>{if(!showMenu&&!showPermissions)return;function handleMouseMove(e){if(menuDropdownRef.current&&permissionsDropdownRef.current&&!menuDropdownRef.current.contains(e.target)&&!permissionsDropdownRef.current.contains(e.target)){setShowMenu(false);setShowPermissions(false);}}document.addEventListener('mousedown',handleMouseMove);return()=>document.removeEventListener('mousedown',handleMouseMove);},[showMenu,showPermissions]);function handlePermissionsToggle(){setShowPermissions(v=>!v);}function handlePermissionChange(key,value){setGmPermissions(prev=>({...prev,[key]:value}));}// Only load empireInfo when switching to the Empires tab and not viewing/editing any empire.\n// This prevents any reloads while editing or viewing an empire.\nuseEffect(()=>{if(activeTab==='empires'&&!editEmpire&&!empirePage){// Add cache-busting query param\nfetch(`/empireInfo.json?ts=${Date.now()}`).then(res=>res.json()).then(data=>{setEmpireInfo(data&&typeof data==='object'?data:{});setEmpireInfoLoaded(true);}).catch(()=>setEmpireInfoLoaded(true));}// Only run when switching tabs, or leaving view/edit mode\n},[activeTab,editEmpire,empirePage]);// Helper: get empire names\nfunction getEmpireNames(){// Only include empires that exist (already the case)\nreturn empires.map(e=>e.name);}// Helper: get boards from linked empires\nfunction getLinkedBoards(){const names=getEmpireNames();return getNationPairs(names);}// Helper: get account linked to empire\nfunction getEmpireAccount(empireName){const emp=empires.find(e=>e.name===empireName);return emp&&emp.account?emp.account:null;}// Only show boards for the empire assigned to the logged-in account, except GameMaster sees all\nconst filteredBoards=account?account.username===\"GameMaster\"?getLinkedBoards():getLinkedBoards().filter(_ref=>{let[a,b]=_ref;return getEmpireAccount(a)===account.username||getEmpireAccount(b)===account.username;}):[];// GameMaster: link/unlink accounts to empires\nfunction handleLinkAccount(empireName,accountName){fetch('/api/empires/link',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({empireName,accountName})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>prev.map(e=>e.name===empireName?{...e,account:accountName}:e));}});}function handleUnlinkAccount(empireName){fetch('/api/empires/unlink',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({empireName})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>prev.map(e=>e.name===empireName?{...e,account:null}:e));}});}// Save selected board to localStorage\nfunction handleBoardSelect(pair){const key=pair.join('|');setSelected(key);localStorage.setItem('stellarisSelectedBoard',key);}// Fetch messages for the selected board from the server\nuseEffect(()=>{// Only poll messages if on channels tab and not editing/viewing empire\nif(!selected||activeTab!=='channels'||editEmpire||empirePage){// Stop polling if not in correct state\nif(pollingRef.current){clearInterval(pollingRef.current);pollingRef.current=null;}return;}// Use selected as key\nconst key=selected;// Function to fetch messages\nconst fetchMessages=()=>{fetch(`/api/messages?board=${encodeURIComponent(key)}`).then(res=>{if(!res.ok)throw new Error('Network response was not ok');return res.json();}).then(data=>{setMessages(prev=>({...prev,[key]:data}));}).catch(err=>{setMessages(prev=>({...prev,[key]:[]}));console.error('Failed to fetch messages:',err);});};// Initial fetch\nfetchMessages();// Set up polling\npollingRef.current=setInterval(fetchMessages,2000);// Cleanup on unmount or when selected/activeTab/editEmpire/empirePage changes\nreturn()=>{if(pollingRef.current){clearInterval(pollingRef.current);pollingRef.current=null;}};},[selected,activeTab,editEmpire,empirePage]);// Scroll to bottom only when messages actually change for the selected board\nconst prevMessagesLengthRef=useRef(0);useEffect(()=>{if(!selected)return;const currentMessages=messages[selected]||[];if(currentMessages.length!==prevMessagesLengthRef.current){if(messagesEndRef.current){messagesEndRef.current.scrollIntoView({behavior:'auto'});}prevMessagesLengthRef.current=currentMessages.length;}},[messages,selected]);// When posting, always use the logged-in account's empire name\nfunction postMessage(e){e.preventDefault();if(!selected||!account||!text.trim())return;const key=selected;const msg={board:key,author:account.username,text,timestamp:Date.now()};fetch('/api/messages',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(msg)}).then(res=>res.json()).then(()=>{fetch(`/api/messages?board=${encodeURIComponent(key)}`).then(res=>res.json()).then(data=>{setMessages(prev=>({...prev,[key]:data}));});});setText('');}// Fetch accounts from server (accounts.json)\nuseEffect(()=>{fetch('/accounts.json').then(res=>res.json()).then(data=>{setAccounts(data);setAccountsLoaded(true);}).catch(()=>setAccountsLoaded(true));},[]);// Load empires from empires.json\nuseEffect(()=>{fetch('/empires.json').then(res=>res.json()).then(data=>{setEmpires(Array.isArray(data)?data:[]);});},[]);// Fetch treaties from backend\nuseEffect(()=>{fetch('/treaties.json').then(res=>res.json()).then(data=>{setTreaties(Array.isArray(data)?data:[]);setTreatiesLoaded(true);}).catch(()=>setTreatiesLoaded(true));},[]);function handleLogin(e){e.preventDefault();// Wait until accounts are loaded\nif(!accountsLoaded){setError('Accounts are still loading, please wait...');return;}const username=loginUser.trim();const password=loginPass.trim();if(!accounts[username]){setError('Invalid credentials');return;}if(accounts[username]!==password){setError('Invalid credentials');return;}setAccount({username});localStorage.setItem('stellarisAccount',JSON.stringify({username}));setError('');}function handleLogout(){setAccount(null);localStorage.removeItem('stellarisAccount');}// Save empire info to backend and update local state\nfunction saveEmpireInfo(name,info){return fetch('/api/empireInfo',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,info})}).then(res=>res.json()).then(()=>{// After saving, reload from backend with cache-busting param\nreturn fetch(`/empireInfo.json?ts=${Date.now()}`).then(res=>res.json()).then(data=>{setEmpireInfo(data&&typeof data==='object'?data:{});});});}// Edit panel for empire info\nfunction EmpireEditPanel(_ref2){let{name,onCancel}=_ref2;// Only initialize edit state from empireInfo[name] when the component mounts\nconst info=empireInfo[name]||{};const[edit,setEdit]=useState(info);// Do NOT use useEffect to update edit state from empireInfo.\n// This ensures the text fields are not reset while editing.\nfunction handleChange(e){setEdit({...edit,[e.target.name]:e.target.value});}function handleSave(e){e.preventDefault();saveEmpireInfo(name,edit).then(()=>{onCancel();});}return/*#__PURE__*/_jsxs(\"form\",{className:\"empire-edit-form\",onSubmit:handleSave,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Lore:\",/*#__PURE__*/_jsx(\"textarea\",{name:\"lore\",value:edit.lore||'',onChange:handleChange,rows:3})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Stats:\",/*#__PURE__*/_jsx(\"input\",{name:\"stats\",value:edit.stats||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Ethics:\",/*#__PURE__*/_jsx(\"input\",{name:\"ethics\",value:edit.ethics||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Civics:\",/*#__PURE__*/_jsx(\"input\",{name:\"civics\",value:edit.civics||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Special Info:\",/*#__PURE__*/_jsx(\"input\",{name:\"special\",value:edit.special||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'1rem',marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"empire-back-btn\",onClick:onCancel,children:\"Cancel\"})]})]});}// View panel for empire info\nfunction EmpirePanel(_ref3){let{name,canEdit}=_ref3;const info=empireInfo[name]||{};return/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-card empire-info-page\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"empire-info-title\",children:name}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-owner\",children:[\"Owner: \",/*#__PURE__*/_jsx(\"span\",{children:getEmpireAccount(name)||/*#__PURE__*/_jsx(\"i\",{children:\"Unassigned\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-details\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Lore:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.lore||/*#__PURE__*/_jsx(\"i\",{children:\"No lore set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Stats:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.stats||/*#__PURE__*/_jsx(\"i\",{children:\"No stats set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Ethics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.ethics||/*#__PURE__*/_jsx(\"i\",{children:\"No ethics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Civics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.civics||/*#__PURE__*/_jsx(\"i\",{children:\"No civics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Special Info:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.special||/*#__PURE__*/_jsx(\"i\",{children:\"No special info set.\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setEmpirePage(null),children:\"Back to Empires\"}),canEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>setEditEmpire(name),children:\"Edit\"})]})]});}// Treaties: permissions\nfunction canEditTreaty(treaty){if(!account)return false;return account.username===treaty.owner||account.username===\"GameMaster\";}function canTransferTreaty(treaty){return account&&account.username===\"GameMaster\";}// Treaties: open new form\nfunction handleAddTreaty(){setTreatyDialog({open:true,mode:'new',data:null});setTreatyError('');}// Treaties: open edit\nfunction handleEditTreaty(treaty){setTreatyDialog({open:true,mode:'edit',data:treaty});setTreatyError('');}// Treaties: open view\nfunction handleViewTreaty(treaty){setTreatyDialog({open:true,mode:'view',data:treaty});setTreatyError('');}// Treaties: cancel form\nfunction handleCancelTreatyForm(){setTreatyDialog({open:false,mode:null,data:null});setTreatyError('');}// Treaties: save (create or update)\nfunction handleSaveTreaty(e){e.preventDefault();setTreatyError('');setTreatySaving(true);const isEdit=treatyEditId!=null;const form={...treatyForm};if(!form.title.trim()||!form.content.trim()||!form.participants.length){setTreatyError('Title, content, and at least one participant are required.');setTreatySaving(false);return;}if(!form.owner)form.owner=account?account.username:'';if(!form.status)form.status='discussion';if(!form.id)form.id=isEdit?treatyEditId:Date.now().toString();fetch('/api/treaties',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(form)}).then(res=>res.json()).then(data=>{if(data.success){// Always fetch the latest treaties from /treaties.json after save\nreturn fetch('/treaties.json?ts='+Date.now()).then(res=>res.json()).then(data2=>{setTreaties(Array.isArray(data2)?data2:[]);setTreatyForm(null);setTreatyEditId(null);setShowTreatyForm(false);setTreatyViewId(form.id);});}else{setTreatyError(data.error||'Failed to save treaty');}}).catch(()=>setTreatyError('Failed to save treaty')).finally(()=>setTreatySaving(false));}// Treaties: transfer ownership (GM only)\nfunction handleTransferTreatyOwner(treaty,newOwner){if(!canTransferTreaty(treaty))return;setTreatySaving(true);fetch('/api/treaties/transfer',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id:treaty.id,newOwner})}).then(res=>res.json()).then(data=>{if(data.success){return fetch('/treaties.json').then(res=>res.json()).then(data2=>setTreaties(Array.isArray(data2)?data2:[]));}}).finally(()=>setTreatySaving(false));}// Treaties: form field change\nfunction handleTreatyFormChange(e){const{name,value,type,options}=e.target;if(type==='select-multiple'){const vals=Array.from(options).filter(o=>o.selected).map(o=>o.value);setTreatyForm(f=>({...f,[name]:vals}));}else{setTreatyForm(f=>({...f,[name]:value}));}}// Treaties: render\nfunction renderTreatyForm(){if(!treatyForm)return null;return/*#__PURE__*/_jsxs(\"form\",{className:\"treaty-form card\",onSubmit:handleSaveTreaty,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-header\",children:[/*#__PURE__*/_jsx(\"input\",{name:\"title\",placeholder:\"Treaty Title\",value:treatyForm.title,onChange:handleTreatyFormChange,className:\"login-input\",required:true,disabled:treatySaving}),/*#__PURE__*/_jsx(\"select\",{name:\"status\",value:treatyForm.status,onChange:handleTreatyFormChange,className:\"login-input\",disabled:treatySaving,children:TREATY_STATUSES.map(s=>/*#__PURE__*/_jsx(\"option\",{value:s.value,children:s.label},s.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-participants\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"participants-select\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"participants-label\",children:\"Participants\"}),/*#__PURE__*/_jsx(\"select\",{name:\"participants\",value:treatyForm.participants,onChange:handleTreatyFormChange,className:\"login-input\",multiple:true,disabled:treatySaving,children:getEmpireNames().map(e=>/*#__PURE__*/_jsx(\"option\",{value:e,children:e},e))})]}),account&&account.username===\"GameMaster\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"owner-select\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"owner-label\",children:\"Owner:\"}),/*#__PURE__*/_jsx(\"select\",{name:\"owner\",value:treatyForm.owner,onChange:handleTreatyFormChange,className:\"login-input\",disabled:treatySaving,children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsx(\"option\",{value:acc,children:acc},acc))})]})]}),/*#__PURE__*/_jsx(\"label\",{className:\"treaty-content-label\",children:\"Treaty Content\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"content\",placeholder:\"Treaty Content\",value:treatyForm.content,onChange:handleTreatyFormChange,className:\"login-input\",rows:9,required:true,disabled:treatySaving}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:treatySaving,children:treatyEditId?\"Save Changes\":\"Create Treaty\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"empire-back-btn\",onClick:handleCancelTreatyForm,disabled:treatySaving,children:\"Cancel\"}),treatyError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error treaty-error\",children:treatyError})]})]});}function renderTreatyView(treaty){const statusObj=TREATY_STATUSES.find(s=>s.value===treaty.status);return/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"treaty-title\",children:treaty.title}),/*#__PURE__*/_jsx(\"span\",{className:\"treaty-status\",style:{color:statusObj.color},children:statusObj?statusObj.label:treaty.status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-owner\",children:[\"Owner: \",treaty.owner]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-participants\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Participants:\"}),\" \",treaty.participants&&treaty.participants.length>0?treaty.participants.join(', '):/*#__PURE__*/_jsx(\"i\",{children:\"None\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"treaty-content-static\",children:treaty.content}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setTreatyViewId(null),children:\"Back\"}),canEditTreaty(treaty)&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>handleEditTreaty(treaty),children:\"Edit\"}),canTransferTreaty(treaty)&&/*#__PURE__*/_jsx(\"select\",{value:treaty.owner,onChange:e=>handleTransferTreatyOwner(treaty,e.target.value),className:\"owner-transfer-select\",children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsx(\"option\",{value:acc,children:acc},acc))})]})]});}// Only show accounts tab for GameMaster\nconst showAccountsTab=account&&account.username===\"GameMaster\";const tabs=[{key:'channels',label:'Channels'},{key:'empires',label:'Empires'},{key:'treaties',label:'Treaties'}];if(showAccountsTab){tabs.push({key:'accounts',label:'Manage Accounts'});tabs.push({key:'manage-empires',label:'Manage Empires'});}// Ref for account edit panel\nconst accountEditPanelRef=useRef(null);// Scroll to edit panel when editAccount changes\nuseEffect(()=>{if(editAccount&&accountEditPanelRef.current){accountEditPanelRef.current.scrollIntoView({behavior:'smooth',block:'center'});}},[editAccount]);// --- MODIFIED: Only allow delete if GM and permission enabled ---\nfunction handleDeleteMessage(boardKey,msgIdx){if(!account||account.username!==\"GameMaster\"||!gmPermissions.canDeleteMessages)return;if(!window.confirm(\"Delete this message?\"))return;fetch('/api/messages/delete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({board:boardKey,index:Number(msgIdx)})}).then(res=>res.json()).then(()=>{fetch(`/api/messages?board=${encodeURIComponent(boardKey)}`).then(res=>res.json()).then(data=>{setMessages(prev=>({...prev,[boardKey]:data}));});});}// --- Treaties: filtered and sorted by search ---\nconst filteredTreaties=treatySearch.trim()?treaties.filter(t=>t.title&&t.title.toLowerCase().includes(treatySearch.toLowerCase())||t.content&&t.content.toLowerCase().includes(treatySearch.toLowerCase())||t.owner&&t.owner.toLowerCase().includes(treatySearch.toLowerCase())||Array.isArray(t.participants)&&t.participants.some(p=>p.toLowerCase().includes(treatySearch.toLowerCase()))):treaties;const sortedTreaties=[...filteredTreaties].sort((a,b)=>{if(treatySort==='title')return a.title.localeCompare(b.title);if(treatySort==='owner')return a.owner.localeCompare(b.owner);return 0;});// --- Empires: filtered and sorted by search ---\nconst filteredEmpires=empireSearch.trim()?getEmpireNames().filter(e=>e.toLowerCase().includes(empireSearch.toLowerCase())):getEmpireNames();const sortedEmpires=[...filteredEmpires].sort((a,b)=>{if(empireSort==='name')return a.localeCompare(b);return 0;});return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Stellaris RP Diplomatic Message Boards\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tabs-bar\",children:[tabs.map(tab=>/*#__PURE__*/_jsx(\"button\",{className:`tab-btn${activeTab===tab.key?' active':''}`,onClick:()=>{setActiveTab(tab.key);setEmpirePage(null);setEditEmpire(null);setEditAccount(null);setTreatyViewId&&setTreatyViewId(null);// Only if setTreatyViewId exists\nsetShowTreatyForm&&setShowTreatyForm(false);// Only if setShowTreatyForm exists\n},children:tab.label},tab.key)),/*#__PURE__*/_jsx(MenuDropdown,{showMenu:showMenu,showPermissions:showPermissions,handleMenuToggle:handleMenuToggle,handleLogout:handleLogout,account:account,handlePermissionsToggle:handlePermissionsToggle,gmPermissions:gmPermissions,handlePermissionChange:handlePermissionChange,menuDropdownRef:menuDropdownRef,permissionsDropdownRef:permissionsDropdownRef})]})]}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:activeTab==='treaties'?/*#__PURE__*/_jsxs(\"section\",{className:\"treaties-section card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaties-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Treaties, Contracts & Agreements\"}),account&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>openTreatyDialog('new'),children:\"+ Add New Treaty\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search treaties by title, content, owner, or participant...\",value:treatySearch,onChange:e=>setTreatySearch(e.target.value),className:\"treaty-search-input\"}),treatySearch&&/*#__PURE__*/_jsx(\"button\",{className:\"treaty-search-clear-btn\",onClick:()=>setTreatySearch(''),title:\"Clear search\",children:\"\\u2715\"}),/*#__PURE__*/_jsxs(\"select\",{value:treatySort,onChange:e=>setTreatySort(e.target.value),className:\"treaty-sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"title\",children:\"Sort by Title\"}),/*#__PURE__*/_jsx(\"option\",{value:\"owner\",children:\"Sort by Owner\"})]})]}),treatyDialog.open&&treatyDialog.mode!=='view'&&/*#__PURE__*/_jsx(TreatyDialog,{open:treatyDialog.open,mode:treatyDialog.mode,data:treatyDialog.data,onSave:handleTreatySave,onClose:closeTreatyDialog,error:treatyError,saving:treatySaving,empires:empires.map(e=>e.name),accounts:accounts,account:account}),treatyDialog.open&&treatyDialog.mode==='view'&&/*#__PURE__*/_jsx(TreatyView,{treaty:treatyDialog.data,onBack:closeTreatyDialog,onEdit:()=>openTreatyDialog('edit',treatyDialog.data),onTransfer:newOwner=>handleTreatyTransferOwner(treatyDialog.data.id,newOwner),canEdit:canEditTreaty(treatyDialog.data),canTransfer:canTransferTreaty(treatyDialog.data),accounts:accounts}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaties-list-container\",children:[!treatiesLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",children:\"Loading treaties...\"}),sortedTreaties.length===0&&treatiesLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"no-messages\",children:\"No treaties found.\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"treaties-list\",children:sortedTreaties.map(treaty=>{var _treaty$participants;return/*#__PURE__*/_jsxs(\"li\",{className:\"treaty-item\",onClick:()=>setTreatyDialog({open:true,mode:'view',data:treaty}),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"treaty-title\",children:treaty.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-meta\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-owner\",children:[\"Owner: \",treaty.owner]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-participants\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Participants:\"}),\" \",((_treaty$participants=treaty.participants)===null||_treaty$participants===void 0?void 0:_treaty$participants.join(', '))||/*#__PURE__*/_jsx(\"i\",{children:\"None\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"treaty-content\",children:treaty.content.length>180?treaty.content.slice(0,180)+'…':treaty.content})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-actions\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"treaty-status\",children:{discussion:'🗨️ In Discussion',active:'✅ Active',broken:'❌ Broken',expired:'⌛ Expired',other:'❓ Other'}[treaty.status]||treaty.status}),/*#__PURE__*/_jsxs(\"span\",{className:\"treaty-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-view-btn\",onClick:ev=>{ev.stopPropagation();setTreatyDialog({open:true,mode:'view',data:treaty});},children:\"View\"}),canEditTreaty(treaty)&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:ev=>{ev.stopPropagation();openTreatyDialog('edit',treaty);},children:\"Edit\"})]})]})]},treaty.id);})})]})]}):activeTab==='manage-empires'&&showAccountsTab?/*#__PURE__*/_jsxs(\"section\",{className:\"account-manage-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Empires\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleCreateEmpire,className:\"account-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"account-form-fields\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"New empire name\",value:newEmpireName,onChange:e=>setNewEmpireName(e.target.value),required:true,className:\"login-input\",disabled:newEmpireLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-btn\",disabled:newEmpireLoading,children:\"Create Empire\"})]})}),newEmpireError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:newEmpireError}),/*#__PURE__*/_jsx(\"h3\",{children:\"Empires & Account Assignment\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"accounts-list\",children:empires.map(emp=>/*#__PURE__*/_jsxs(\"li\",{className:\"account-item\",children:[/*#__PURE__*/_jsx(\"b\",{children:emp.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"account-actions\",children:[/*#__PURE__*/_jsxs(\"select\",{value:emp.account||'',onChange:e=>{const val=e.target.value;if(val)handleLinkAccount(emp.name,val);else handleUnlinkAccount(emp.name);},className:\"account-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",className:\"account-option\",children:\"Select account...\"}),Object.keys(accounts).map(accName=>/*#__PURE__*/_jsx(\"option\",{value:accName,className:\"account-option\",children:accName},accName))]}),/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-delete-btn\",onClick:()=>handleDeleteEmpire(emp.name),disabled:newEmpireLoading,children:\"Delete\"})]})]},emp.name))})]}):activeTab==='accounts'&&showAccountsTab?/*#__PURE__*/_jsxs(\"section\",{className:\"account-manage-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Accounts\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleCreateAccount,className:\"account-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"account-form-fields\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Account name\",value:newAccountName,onChange:e=>setNewAccountName(e.target.value),required:true,className:\"login-input\",disabled:accountsTabLoading}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:newAccountPass,onChange:e=>setNewAccountPass(e.target.value),required:true,className:\"login-input\",disabled:accountsTabLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-btn\",disabled:accountsTabLoading,children:\"Create\"})]})}),accountError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:accountError}),accountSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",style:{color:'limegreen'},children:accountSuccess}),/*#__PURE__*/_jsx(\"h3\",{children:\"All Accounts\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"accounts-list\",children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsxs(\"li\",{className:\"account-item\",children:[/*#__PURE__*/_jsx(\"b\",{children:acc}),acc!==\"GameMaster\"&&/*#__PURE__*/_jsxs(\"span\",{className:\"account-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-edit-btn\",onClick:()=>{setEditAccount(acc);setEditAccountName(acc);setEditAccountPass('');setEditAccountError('');},disabled:editAccountLoading,children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-delete-btn\",onClick:()=>handleDeleteAccount(acc),disabled:editAccountLoading,children:\"Delete\"})]})]},acc))}),editAccount&&/*#__PURE__*/_jsxs(\"div\",{className:\"account-edit-panel card\",ref:accountEditPanelRef,children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Edit Account: \",/*#__PURE__*/_jsx(\"b\",{children:editAccount})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRenameAccount,className:\"edit-account-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Rename to:\",/*#__PURE__*/_jsx(\"input\",{value:editAccountName,onChange:e=>setEditAccountName(e.target.value),className:\"login-input\",disabled:editAccountLoading})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:editAccountLoading,children:\"Rename\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleChangePassword,className:\"change-password-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"New Password:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:editAccountPass,onChange:e=>setEditAccountPass(e.target.value),className:\"login-input\",disabled:editAccountLoading})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:editAccountLoading,children:\"Change Password\"})]}),editAccountError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:editAccountError}),/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setEditAccount(null),disabled:editAccountLoading,children:\"Cancel\"})]})]}):activeTab==='empires'?editEmpire?/*#__PURE__*/_jsxs(\"section\",{className:\"empires-info-section card\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Edit \",editEmpire]}),/*#__PURE__*/_jsx(EmpireEditPanel,{name:editEmpire,onCancel:()=>setEditEmpire(null),empireInfo:empireInfo,saveEmpireInfo:saveEmpireInfo})]}):empirePage?/*#__PURE__*/_jsx(EmpirePanel,{name:empirePage,canEdit:account&&account.username===empirePage,empireInfo:empireInfo,getEmpireAccount:getEmpireAccount,setEmpirePage:setEmpirePage,setEditEmpire:setEditEmpire}):/*#__PURE__*/_jsxs(\"section\",{className:\"empires-info-section card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"empire-search-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Empires Overview\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"empire-total-count\",children:[\"Total Empires: \",/*#__PURE__*/_jsx(\"b\",{children:sortedEmpires.length})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-search-fields\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search empires by name...\",value:empireSearch,onChange:e=>setEmpireSearch(e.target.value),className:\"empire-search-input\"}),empireSearch&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-search-clear-btn\",onClick:()=>setEmpireSearch(''),title:\"Clear search\",children:\"\\u2715\"}),/*#__PURE__*/_jsx(\"select\",{value:empireSort,onChange:e=>setEmpireSort(e.target.value),className:\"empire-sort-select\",children:/*#__PURE__*/_jsx(\"option\",{value:\"name\",children:\"Sort by Name\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"empires-info-list\",style:{display:'flex',flexWrap:'wrap',gap:'1.5rem',justifyContent:'flex-start'},children:sortedEmpires.map(e=>{const linkedAccount=getEmpireAccount(e);const canEdit=account&&(account.username===linkedAccount||account.username===\"GameMaster\");return/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-card empire-list-card\",onClick:()=>setEmpirePage(e),children:[/*#__PURE__*/_jsx(\"h3\",{className:\"empire-info-title\",children:e}),/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-owner\",children:linkedAccount?/*#__PURE__*/_jsx(\"span\",{title:\"Assigned Account\",children:linkedAccount}):/*#__PURE__*/_jsx(\"i\",{children:\"Unassigned\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-view-btn\",onClick:ev=>{ev.stopPropagation();setEmpirePage(e);},children:\"View\"}),canEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:ev=>{ev.stopPropagation();setEditEmpire(e);},children:\"Edit\"})]})]},e);})})]}):/*#__PURE__*/_jsx(_Fragment,{children:!account?/*#__PURE__*/_jsxs(\"section\",{className:\"account-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"login-title\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"account-form login-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-fields\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Empire name\",value:loginUser,onChange:e=>setLoginUser(e.target.value),required:true,disabled:!accountsLoaded,className:\"login-input\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:loginPass,onChange:e=>setLoginPass(e.target.value),required:true,disabled:!accountsLoaded,className:\"login-input\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!accountsLoaded,className:\"login-btn\",children:\"Login\"})]}),!accountsLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",children:\"Loading accounts...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:error})]}):/*#__PURE__*/// Center the channels page\n_jsx(\"div\",{style:{display:'flex',justifyContent:'center',width:'100%'},children:/*#__PURE__*/_jsx(\"section\",{className:\"boards-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"channels-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"channels-sidebar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"boards-list card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:account&&account.username===\"GameMaster\"?\"All Boards\":\"Your Diplomatic Channels\"}),/*#__PURE__*/_jsx(\"div\",{className:\"boards-list-header\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"boards-list-count\",children:[filteredBoards.length,\" \",filteredBoards.length===1?\"channel\":\"channels\"]})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"boards-list-ul\",children:[filteredBoards.length===0&&/*#__PURE__*/_jsx(\"li\",{className:\"no-channels\",children:\"No channels available.\"}),filteredBoards.map(_ref4=>{let[a,b]=_ref4;const key=a+'|'+b;return/*#__PURE__*/_jsx(\"li\",{className:`boards-list-item${selected===key?' active':''}`,children:/*#__PURE__*/_jsxs(\"button\",{className:\"board-btn\",onClick:()=>handleBoardSelect([a,b]),children:[/*#__PURE__*/_jsx(\"span\",{className:\"board-nations\",children:a}),/*#__PURE__*/_jsx(\"span\",{className:\"board-arrow\",children:\"\\u2194\"}),/*#__PURE__*/_jsx(\"span\",{className:\"board-nations\",children:b})]})},key);})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"channels-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"board-messages card\",children:selected&&filteredBoards.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"board-messages-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-title-row\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"board-title\",children:selected.replace('|',' ↔ ')})}),/*#__PURE__*/_jsxs(\"div\",{className:\"messages-panel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages-list-container\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"messages-list\",children:[(messages[selected]||[]).length===0&&/*#__PURE__*/_jsx(\"li\",{className:\"no-messages\",children:\"No messages yet.\"}),(messages[selected]||[]).map((msg,i)=>{const[partnerA,partnerB]=selected.split('|');let partnerClass='';if(msg.author===partnerA)partnerClass='message-partnerA';else if(msg.author===partnerB)partnerClass='message-partnerB';return/*#__PURE__*/_jsxs(\"li\",{className:`message-item ${partnerClass}`,style:{display:'flex',alignItems:'stretch',justifyContent:'flex-start',gap:'0.7rem'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,minWidth:0,display:'flex',flexDirection:'column',gap:'0.15rem',justifyContent:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-meta\",style:{marginBottom:0},children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-author\",children:msg.author}),/*#__PURE__*/_jsx(\"small\",{className:\"message-date\",children:new Date(msg.timestamp).toLocaleString()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:msg.text})]}),account&&account.username===\"GameMaster\"&&gmPermissions.canDeleteMessages&&/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center',minWidth:'2.5em',paddingLeft:'0.5em'},children:/*#__PURE__*/_jsx(\"button\",{title:\"Delete message\",style:{background:'none',border:'none',color:'#ff4d4d',cursor:'pointer',fontSize:'1.3em',display:'flex',alignItems:'center',height:'2.2em'},onClick:e=>{e.stopPropagation();handleDeleteMessage(selected,i);},children:/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"Delete\",children:\"\\uD83D\\uDDD1\"})})})]},i);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:postMessage,className:\"message-form message-form-bottom\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Your empire\",value:account.username,disabled:true,required:true,className:\"author-input\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Message\",value:text,onChange:e=>setText(e.target.value),required:true,className:\"text-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-btn\",children:\"Send\"})]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"no-messages\",children:\"Select a channel to view messages.\"})})})]})})})})}),/*#__PURE__*/_jsx(\"footer\",{className:\"footer\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Stellaris RP Board \\xA9 \",new Date().getFullYear()]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","getNationPairs","TreatyDialog","TreatyView","EmpireEditPanel","EmpirePanel","MenuDropdown","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","empires","setEmpires","selected","setSelected","saved","localStorage","getItem","messages","setMessages","text","setText","pollingRef","messagesEndRef","accounts","setAccounts","accountsLoaded","setAccountsLoaded","account","setAccount","JSON","parse","loginUser","setLoginUser","loginPass","setLoginPass","error","setError","activeTab","setActiveTab","empirePage","setEmpirePage","editEmpire","setEditEmpire","empireInfo","setEmpireInfo","empireInfoLoaded","setEmpireInfoLoaded","newAccountName","setNewAccountName","newAccountPass","setNewAccountPass","accountError","setAccountError","accountSuccess","setAccountSuccess","accountsTabLoading","setAccountsTabLoading","editAccount","setEditAccount","editAccountName","setEditAccountName","editAccountPass","setEditAccountPass","editAccountError","setEditAccountError","editAccountLoading","setEditAccountLoading","newEmpireName","setNewEmpireName","newEmpireError","setNewEmpireError","newEmpireLoading","setNewEmpireLoading","treaties","setTreaties","treatiesLoaded","setTreatiesLoaded","treatyDialog","setTreatyDialog","open","mode","data","treatyError","setTreatyError","treatySaving","setTreatySaving","treatySearch","setTreatySearch","empireSearch","setEmpireSearch","treatySort","setTreatySort","empireSort","setEmpireSort","fetchTreaties","fetch","Date","now","then","res","json","Array","isArray","catch","openTreatyDialog","arguments","length","undefined","closeTreatyDialog","handleTreatySave","form","_payload$participants","payload","title","content","participants","owner","username","status","id","toString","method","headers","body","stringify","success","prev","idx","findIndex","t","updated","finally","handleTreatyTransferOwner","newOwner","canEditTreaty","treaty","canTransferTreaty","showMenu","setShowMenu","showPermissions","setShowPermissions","gmPermissions","setGmPermissions","canDeleteMessages","setItem","handleMenuToggle","v","handleMenuClose","menuDropdownRef","permissionsDropdownRef","handleMouseMove","e","current","contains","target","document","addEventListener","removeEventListener","handlePermissionsToggle","handlePermissionChange","key","value","getEmpireNames","map","name","getLinkedBoards","names","getEmpireAccount","empireName","emp","find","filteredBoards","filter","_ref","a","b","handleLinkAccount","accountName","handleUnlinkAccount","handleBoardSelect","pair","join","clearInterval","fetchMessages","encodeURIComponent","ok","Error","err","console","setInterval","prevMessagesLengthRef","currentMessages","scrollIntoView","behavior","postMessage","preventDefault","trim","msg","board","author","timestamp","handleLogin","password","handleLogout","removeItem","saveEmpireInfo","info","_ref2","onCancel","edit","setEdit","handleChange","handleSave","className","onSubmit","children","lore","onChange","rows","stats","ethics","civics","special","style","display","gap","marginTop","type","onClick","_ref3","canEdit","handleAddTreaty","handleEditTreaty","handleViewTreaty","handleCancelTreatyForm","handleSaveTreaty","isEdit","treatyEditId","treatyForm","data2","setTreatyForm","setTreatyEditId","setShowTreatyForm","setTreatyViewId","handleTransferTreatyOwner","handleTreatyFormChange","options","vals","from","o","f","renderTreatyForm","placeholder","required","disabled","TREATY_STATUSES","s","label","multiple","Object","keys","acc","renderTreatyView","statusObj","color","showAccountsTab","tabs","push","accountEditPanelRef","block","handleDeleteMessage","boardKey","msgIdx","window","confirm","index","Number","filteredTreaties","toLowerCase","includes","some","p","sortedTreaties","sort","localeCompare","filteredEmpires","sortedEmpires","tab","onSave","onClose","saving","onBack","onEdit","onTransfer","canTransfer","_treaty$participants","slice","discussion","active","broken","expired","other","ev","stopPropagation","handleCreateEmpire","val","accName","handleDeleteEmpire","handleCreateAccount","handleDeleteAccount","ref","handleRenameAccount","handleChangePassword","flexWrap","justifyContent","linkedAccount","width","_ref4","replace","i","partnerA","partnerB","split","partnerClass","alignItems","flex","minWidth","flexDirection","marginBottom","toLocaleString","paddingLeft","background","border","cursor","fontSize","height","role","getFullYear"],"sources":["C:/Users/Admin/Dokumente/Stellaris/project/StellarisRP-Site/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport './Treaties.css';\r\nimport './Empires.css';\r\nimport './Boards.css';\r\nimport './Accounts.css';\r\nimport { getNationPairs } from './utils/getNationPairs';\r\nimport TreatyDialog from './components/TreatyDialog';\r\nimport TreatyView from './components/TreatyView';\r\nimport EmpireEditPanel from './components/EmpireEditPanel';\r\nimport EmpirePanel from './components/EmpirePanel';\r\nimport MenuDropdown from './components/MenuDropdown';\r\n\r\nfunction App() {\r\n    const [empires, setEmpires] = useState([]);\r\n    const [selected, setSelected] = useState(() => {\r\n        const saved = localStorage.getItem('stellarisSelectedBoard');\r\n        return saved ? saved : null;\r\n    });\r\n    const [messages, setMessages] = useState({});\r\n    const [text, setText] = useState('');\r\n    const pollingRef = useRef();\r\n    const messagesEndRef = useRef(null);\r\n    const [accounts, setAccounts] = useState({});\r\n    const [accountsLoaded, setAccountsLoaded] = useState(false);\r\n    const [account, setAccount] = useState(() => {\r\n        const saved = localStorage.getItem('stellarisAccount');\r\n        return saved ? JSON.parse(saved) : null;\r\n    });\r\n    const [loginUser, setLoginUser] = useState('');\r\n    const [loginPass, setLoginPass] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [activeTab, setActiveTab] = useState('channels');\r\n    const [empirePage, setEmpirePage] = useState(null);\r\n    const [editEmpire, setEditEmpire] = useState(null);\r\n    const [empireInfo, setEmpireInfo] = useState({});\r\n    const [empireInfoLoaded, setEmpireInfoLoaded] = useState(false);\r\n\r\n    // Account creation and management\r\n    const [newAccountName, setNewAccountName] = useState('');\r\n    const [newAccountPass, setNewAccountPass] = useState('');\r\n    const [accountError, setAccountError] = useState('');\r\n    const [accountSuccess, setAccountSuccess] = useState('');\r\n    const [accountsTabLoading, setAccountsTabLoading] = useState(false);\r\n    const [editAccount, setEditAccount] = useState(null);\r\n    const [editAccountName, setEditAccountName] = useState('');\r\n    const [editAccountPass, setEditAccountPass] = useState('');\r\n    const [editAccountError, setEditAccountError] = useState('');\r\n    const [editAccountLoading, setEditAccountLoading] = useState(false);\r\n\r\n    // Manage Empires tab\r\n    const [newEmpireName, setNewEmpireName] = useState('');\r\n    const [newEmpireError, setNewEmpireError] = useState('');\r\n    const [newEmpireLoading, setNewEmpireLoading] = useState(false);\r\n\r\n    // --- Treaties State (NEW IMPLEMENTATION) ---\r\n    const [treaties, setTreaties] = useState([]);\r\n    const [treatiesLoaded, setTreatiesLoaded] = useState(false);\r\n    const [treatyDialog, setTreatyDialog] = useState({ open: false, mode: null, data: null });\r\n    const [treatyError, setTreatyError] = useState('');\r\n    const [treatySaving, setTreatySaving] = useState(false);\r\n\r\n    // --- Add search states ---\r\n    const [treatySearch, setTreatySearch] = useState(() => localStorage.getItem('treatySearch') || '');\r\n    const [empireSearch, setEmpireSearch] = useState(() => localStorage.getItem('empireSearch') || '');\r\n    // --- Add sort states ---\r\n    const [treatySort, setTreatySort] = useState('title');\r\n    const [empireSort, setEmpireSort] = useState('name');\r\n    // --- End states ---\r\n\r\n    // --- Fetch treaties ---\r\n    function fetchTreaties() {\r\n        fetch('/treaties.json?ts=' + Date.now())\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTreaties(Array.isArray(data) ? data : []);\r\n                setTreatiesLoaded(true);\r\n            })\r\n            .catch(() => setTreatiesLoaded(true));\r\n    }\r\n    useEffect(() => { fetchTreaties(); }, []);\r\n\r\n    // --- Treaty CRUD ---\r\n    function openTreatyDialog(mode, data = null) {\r\n        setTreatyDialog({ open: true, mode, data });\r\n        setTreatyError('');\r\n    }\r\n    function closeTreatyDialog() {\r\n        setTreatyDialog({ open: false, mode: null, data: null });\r\n        setTreatyError('');\r\n    }\r\n    function handleTreatySave(form) {\r\n        setTreatySaving(true);\r\n        setTreatyError('');\r\n        const payload = { ...form };\r\n        if (!payload.title || !payload.content || !payload.participants?.length) {\r\n            setTreatyError('Title, content, and at least one participant are required.');\r\n            setTreatySaving(false);\r\n            return;\r\n        }\r\n        if (!payload.owner) payload.owner = account?.username || '';\r\n        if (!payload.status) payload.status = 'discussion';\r\n        if (!payload.id) payload.id = Date.now().toString();\r\n\r\n        fetch('/api/treaties', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                // --- FIX: update treaties state locally, just like accounts ---\r\n                setTreaties(prev => {\r\n                    // If editing, replace; if new, add\r\n                    const idx = prev.findIndex(t => t.id === payload.id);\r\n                    if (idx !== -1) {\r\n                        const updated = [...prev];\r\n                        updated[idx] = { ...prev[idx], ...payload };\r\n                        return updated;\r\n                    } else {\r\n                        return [...prev, payload];\r\n                    }\r\n                });\r\n                closeTreatyDialog();\r\n            } else {\r\n                setTreatyError(data.error || 'Failed to save treaty');\r\n            }\r\n        })\r\n        .catch(() => setTreatyError('Failed to save treaty'))\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n    function handleTreatyTransferOwner(id, newOwner) {\r\n        setTreatySaving(true);\r\n        fetch('/api/treaties/transfer', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id, newOwner })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) fetchTreaties();\r\n        })\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n\r\n    // --- Treaty Permissions ---\r\n    function canEditTreaty(treaty) {\r\n        if (!account) return false;\r\n        return account.username === treaty.owner || account.username === \"GameMaster\";\r\n    }\r\n    function canTransferTreaty(treaty) {\r\n        return account && account.username === \"GameMaster\";\r\n    }\r\n\r\n    // --- NEW: Permissions state for GameMaster ---\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showPermissions, setShowPermissions] = useState(false);\r\n    const [gmPermissions, setGmPermissions] = useState(() => {\r\n        // Persist in localStorage\r\n        const saved = localStorage.getItem('stellarisGmPermissions');\r\n        return saved ? JSON.parse(saved) : { canDeleteMessages: true };\r\n    });\r\n\r\n    // Save GM permissions to localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('stellarisGmPermissions', JSON.stringify(gmPermissions));\r\n    }, [gmPermissions]);\r\n\r\n    // --- NEW: Menu handlers ---\r\n    function handleMenuToggle() {\r\n        setShowMenu(v => !v);\r\n        setShowPermissions(false);\r\n    }\r\n    function handleMenuClose() {\r\n        setShowMenu(false);\r\n        setShowPermissions(false);\r\n    }\r\n    // Keep menu open when hovering either dropdown or permissions\r\n    const menuDropdownRef = useRef(null);\r\n    const permissionsDropdownRef = useRef(null);\r\n\r\n    // Close menu only if mouse leaves both dropdowns\r\n    useEffect(() => {\r\n        if (!showMenu && !showPermissions) return;\r\n        function handleMouseMove(e) {\r\n            if (\r\n                menuDropdownRef.current &&\r\n                permissionsDropdownRef.current &&\r\n                !menuDropdownRef.current.contains(e.target) &&\r\n                !permissionsDropdownRef.current.contains(e.target)\r\n            ) {\r\n                setShowMenu(false);\r\n                setShowPermissions(false);\r\n            }\r\n        }\r\n        document.addEventListener('mousedown', handleMouseMove);\r\n        return () => document.removeEventListener('mousedown', handleMouseMove);\r\n    }, [showMenu, showPermissions]);\r\n    function handlePermissionsToggle() {\r\n        setShowPermissions(v => !v);\r\n    }\r\n    function handlePermissionChange(key, value) {\r\n        setGmPermissions(prev => ({ ...prev, [key]: value }));\r\n    }\r\n\r\n    // Only load empireInfo when switching to the Empires tab and not viewing/editing any empire.\r\n    // This prevents any reloads while editing or viewing an empire.\r\n    useEffect(() => {\r\n        if (\r\n            activeTab === 'empires' &&\r\n            !editEmpire &&\r\n            !empirePage\r\n        ) {\r\n            // Add cache-busting query param\r\n            fetch(`/empireInfo.json?ts=${Date.now()}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setEmpireInfo(data && typeof data === 'object' ? data : {});\r\n                    setEmpireInfoLoaded(true);\r\n                })\r\n                .catch(() => setEmpireInfoLoaded(true));\r\n        }\r\n    // Only run when switching tabs, or leaving view/edit mode\r\n    }, [activeTab, editEmpire, empirePage]);\r\n\r\n    // Helper: get empire names\r\n    function getEmpireNames() {\r\n        // Only include empires that exist (already the case)\r\n        return empires.map(e => e.name);\r\n    }\r\n\r\n    // Helper: get boards from linked empires\r\n    function getLinkedBoards() {\r\n        const names = getEmpireNames();\r\n        return getNationPairs(names);\r\n    }\r\n\r\n    // Helper: get account linked to empire\r\n    function getEmpireAccount(empireName) {\r\n        const emp = empires.find(e => e.name === empireName);\r\n        return emp && emp.account ? emp.account : null;\r\n    }\r\n\r\n    // Only show boards for the empire assigned to the logged-in account, except GameMaster sees all\r\n    const filteredBoards = account\r\n        ? account.username === \"GameMaster\"\r\n            ? getLinkedBoards()\r\n            : getLinkedBoards().filter(([a, b]) =>\r\n                getEmpireAccount(a) === account.username || getEmpireAccount(b) === account.username\r\n            )\r\n        : [];\r\n\r\n    // GameMaster: link/unlink accounts to empires\r\n    function handleLinkAccount(empireName, accountName) {\r\n        fetch('/api/empires/link', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ empireName, accountName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev =>\r\n                    prev.map(e => e.name === empireName ? { ...e, account: accountName } : e)\r\n                );\r\n            }\r\n        });\r\n    }\r\n    function handleUnlinkAccount(empireName) {\r\n        fetch('/api/empires/unlink', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ empireName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev =>\r\n                    prev.map(e => e.name === empireName ? { ...e, account: null } : e)\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    // Save selected board to localStorage\r\n    function handleBoardSelect(pair) {\r\n        const key = pair.join('|');\r\n        setSelected(key);\r\n        localStorage.setItem('stellarisSelectedBoard', key);\r\n    }\r\n\r\n    // Fetch messages for the selected board from the server\r\n    useEffect(() => {\r\n        // Only poll messages if on channels tab and not editing/viewing empire\r\n        if (\r\n            !selected ||\r\n            activeTab !== 'channels' ||\r\n            editEmpire ||\r\n            empirePage\r\n        ) {\r\n            // Stop polling if not in correct state\r\n            if (pollingRef.current) {\r\n                clearInterval(pollingRef.current);\r\n                pollingRef.current = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Use selected as key\r\n        const key = selected;\r\n\r\n        // Function to fetch messages\r\n        const fetchMessages = () => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(key)}`)\r\n                .then(res => {\r\n                    if (!res.ok) throw new Error('Network response was not ok');\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: data\r\n                    }));\r\n                })\r\n                .catch((err) => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: []\r\n                    }));\r\n                    console.error('Failed to fetch messages:', err);\r\n                });\r\n        };\r\n\r\n        // Initial fetch\r\n        fetchMessages();\r\n\r\n        // Set up polling\r\n        pollingRef.current = setInterval(fetchMessages, 2000);\r\n\r\n        // Cleanup on unmount or when selected/activeTab/editEmpire/empirePage changes\r\n        return () => {\r\n            if (pollingRef.current) {\r\n                clearInterval(pollingRef.current);\r\n                pollingRef.current = null;\r\n            }\r\n        };\r\n    }, [selected, activeTab, editEmpire, empirePage]);\r\n\r\n    // Scroll to bottom only when messages actually change for the selected board\r\n    const prevMessagesLengthRef = useRef(0);\r\n    useEffect(() => {\r\n        if (!selected) return;\r\n        const currentMessages = messages[selected] || [];\r\n        if (currentMessages.length !== prevMessagesLengthRef.current) {\r\n            if (messagesEndRef.current) {\r\n                messagesEndRef.current.scrollIntoView({ behavior: 'auto' });\r\n            }\r\n            prevMessagesLengthRef.current = currentMessages.length;\r\n        }\r\n    }, [messages, selected]);\r\n\r\n    // When posting, always use the logged-in account's empire name\r\n    function postMessage(e) {\r\n        e.preventDefault();\r\n        if (!selected || !account || !text.trim()) return;\r\n        const key = selected;\r\n        const msg = {\r\n            board: key,\r\n            author: account.username,\r\n            text,\r\n            timestamp: Date.now()\r\n        };\r\n        fetch('/api/messages', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(msg)\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(key)}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: data\r\n                    }));\r\n                });\r\n        });\r\n        setText('');\r\n    }\r\n\r\n    // Fetch accounts from server (accounts.json)\r\n    useEffect(() => {\r\n        fetch('/accounts.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAccounts(data);\r\n                setAccountsLoaded(true);\r\n            })\r\n            .catch(() => setAccountsLoaded(true));\r\n    }, []);\r\n\r\n    // Load empires from empires.json\r\n    useEffect(() => {\r\n        fetch('/empires.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setEmpires(Array.isArray(data) ? data : []);\r\n            });\r\n    }, []);\r\n\r\n    // Fetch treaties from backend\r\n    useEffect(() => {\r\n        fetch('/treaties.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTreaties(Array.isArray(data) ? data : []);\r\n                setTreatiesLoaded(true);\r\n            })\r\n            .catch(() => setTreatiesLoaded(true));\r\n    }, []);\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault();\r\n        // Wait until accounts are loaded\r\n        if (!accountsLoaded) {\r\n            setError('Accounts are still loading, please wait...');\r\n            return;\r\n        }\r\n        const username = loginUser.trim();\r\n        const password = loginPass.trim();\r\n        if (!accounts[username]) {\r\n            setError('Invalid credentials');\r\n            return;\r\n        }\r\n        if (accounts[username] !== password) {\r\n            setError('Invalid credentials');\r\n            return;\r\n        }\r\n        setAccount({ username });\r\n        localStorage.setItem('stellarisAccount', JSON.stringify({ username }));\r\n        setError('');\r\n    }\r\n\r\n    function handleLogout() {\r\n        setAccount(null);\r\n        localStorage.removeItem('stellarisAccount');\r\n    }\r\n\r\n    // Save empire info to backend and update local state\r\n    function saveEmpireInfo(name, info) {\r\n        return fetch('/api/empireInfo', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, info })\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            // After saving, reload from backend with cache-busting param\r\n            return fetch(`/empireInfo.json?ts=${Date.now()}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setEmpireInfo(data && typeof data === 'object' ? data : {});\r\n                });\r\n        });\r\n    }\r\n\r\n    // Edit panel for empire info\r\n    function EmpireEditPanel({ name, onCancel }) {\r\n        // Only initialize edit state from empireInfo[name] when the component mounts\r\n        const info = empireInfo[name] || {};\r\n        const [edit, setEdit] = useState(info);\r\n\r\n        // Do NOT use useEffect to update edit state from empireInfo.\r\n        // This ensures the text fields are not reset while editing.\r\n\r\n        function handleChange(e) {\r\n            setEdit({ ...edit, [e.target.name]: e.target.value });\r\n        }\r\n        function handleSave(e) {\r\n            e.preventDefault();\r\n            saveEmpireInfo(name, edit).then(() => {\r\n                onCancel();\r\n            });\r\n        }\r\n\r\n        return (\r\n            <form className=\"empire-edit-form\" onSubmit={handleSave}>\r\n                <label>\r\n                    Lore:\r\n                    <textarea\r\n                        name=\"lore\"\r\n                        value={edit.lore || ''}\r\n                        onChange={handleChange}\r\n                        rows={3}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Stats:\r\n                    <input name=\"stats\" value={edit.stats || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Ethics:\r\n                    <input name=\"ethics\" value={edit.ethics || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Civics:\r\n                    <input name=\"civics\" value={edit.civics || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Special Info:\r\n                    <input name=\"special\" value={edit.special || ''} onChange={handleChange} />\r\n                </label>\r\n                <div style={{display: 'flex', gap: '1rem', marginTop: '1rem'}}>\r\n                    <button type=\"submit\" className=\"empire-save-btn\">Save</button>\r\n                    <button type=\"button\" className=\"empire-back-btn\" onClick={onCancel}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    // View panel for empire info\r\n    function EmpirePanel({ name, canEdit }) {\r\n        const info = empireInfo[name] || {};\r\n        return (\r\n            <div\r\n                className=\"empire-info-card empire-info-page\"\r\n            >\r\n                <h2 className=\"empire-info-title\">{name}</h2>\r\n                <div className=\"empire-info-owner\">\r\n                    Owner: <span>{getEmpireAccount(name) || <i>Unassigned</i>}</span>\r\n                </div>\r\n                <div className=\"empire-info-details\">\r\n                    <div><b>Lore:</b> <div className=\"empire-info-field\">{info.lore || <i>No lore set.</i>}</div></div>\r\n                    <div><b>Stats:</b> <div className=\"empire-info-field\">{info.stats || <i>No stats set.</i>}</div></div>\r\n                    <div><b>Ethics:</b> <div className=\"empire-info-field\">{info.ethics || <i>No ethics set.</i>}</div></div>\r\n                    <div><b>Civics:</b> <div className=\"empire-info-field\">{info.civics || <i>No civics set.</i>}</div></div>\r\n                    <div><b>Special Info:</b> <div className=\"empire-info-field\">{info.special || <i>No special info set.</i>}</div></div>\r\n                </div>\r\n                <div className=\"empire-actions\">\r\n                    <button className=\"empire-back-btn\" onClick={() => setEmpirePage(null)}>Back to Empires</button>\r\n                    {canEdit && (\r\n                        <button className=\"empire-save-btn\" onClick={() => setEditEmpire(name)}>Edit</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Treaties: permissions\r\n    function canEditTreaty(treaty) {\r\n        if (!account) return false;\r\n        return account.username === treaty.owner || account.username === \"GameMaster\";\r\n    }\r\n    function canTransferTreaty(treaty) {\r\n        return account && account.username === \"GameMaster\";\r\n    }\r\n\r\n    // Treaties: open new form\r\n    function handleAddTreaty() {\r\n        setTreatyDialog({\r\n            open: true,\r\n            mode: 'new',\r\n            data: null\r\n        });\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: open edit\r\n    function handleEditTreaty(treaty) {\r\n        setTreatyDialog({\r\n            open: true,\r\n            mode: 'edit',\r\n            data: treaty\r\n        });\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: open view\r\n    function handleViewTreaty(treaty) {\r\n        setTreatyDialog({\r\n            open: true,\r\n            mode: 'view',\r\n            data: treaty\r\n        });\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: cancel form\r\n    function handleCancelTreatyForm() {\r\n        setTreatyDialog({\r\n            open: false,\r\n            mode: null,\r\n            data: null\r\n        });\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: save (create or update)\r\n    function handleSaveTreaty(e) {\r\n        e.preventDefault();\r\n        setTreatyError('');\r\n        setTreatySaving(true);\r\n        const isEdit = treatyEditId != null;\r\n        const form = { ...treatyForm };\r\n        if (!form.title.trim() || !form.content.trim() || !form.participants.length) {\r\n            setTreatyError('Title, content, and at least one participant are required.');\r\n            setTreatySaving(false);\r\n            return;\r\n        }\r\n        if (!form.owner) form.owner = account ? account.username : '';\r\n        if (!form.status) form.status = 'discussion';\r\n        if (!form.id) form.id = isEdit ? treatyEditId : Date.now().toString();\r\n\r\n        fetch('/api/treaties', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(form)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                // Always fetch the latest treaties from /treaties.json after save\r\n                return fetch('/treaties.json?ts=' + Date.now())\r\n                    .then(res => res.json())\r\n                    .then(data2 => {\r\n                        setTreaties(Array.isArray(data2) ? data2 : []);\r\n                        setTreatyForm(null);\r\n                        setTreatyEditId(null);\r\n                        setShowTreatyForm(false);\r\n                        setTreatyViewId(form.id);\r\n                    });\r\n            } else {\r\n                setTreatyError(data.error || 'Failed to save treaty');\r\n            }\r\n        })\r\n        .catch(() => setTreatyError('Failed to save treaty'))\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n\r\n    // Treaties: transfer ownership (GM only)\r\n    function handleTransferTreatyOwner(treaty, newOwner) {\r\n        if (!canTransferTreaty(treaty)) return;\r\n        setTreatySaving(true);\r\n        fetch('/api/treaties/transfer', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: treaty.id, newOwner })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                return fetch('/treaties.json')\r\n                    .then(res => res.json())\r\n                    .then(data2 => setTreaties(Array.isArray(data2) ? data2 : []));\r\n            }\r\n        })\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n\r\n    // Treaties: form field change\r\n    function handleTreatyFormChange(e) {\r\n        const { name, value, type, options } = e.target;\r\n        if (type === 'select-multiple') {\r\n            const vals = Array.from(options).filter(o => o.selected).map(o => o.value);\r\n            setTreatyForm(f => ({ ...f, [name]: vals }));\r\n        } else {\r\n            setTreatyForm(f => ({ ...f, [name]: value }));\r\n        }\r\n    }\r\n\r\n    // Treaties: render\r\n    function renderTreatyForm() {\r\n        if (!treatyForm) return null;\r\n        return (\r\n            <form className=\"treaty-form card\" onSubmit={handleSaveTreaty}>\r\n                <div className=\"treaty-form-header\">\r\n                    <input\r\n                        name=\"title\"\r\n                        placeholder=\"Treaty Title\"\r\n                        value={treatyForm.title}\r\n                        onChange={handleTreatyFormChange}\r\n                        className=\"login-input\"\r\n                        required\r\n                        disabled={treatySaving}\r\n                    />\r\n                    <select\r\n                        name=\"status\"\r\n                        value={treatyForm.status}\r\n                        onChange={handleTreatyFormChange}\r\n                        className=\"login-input\"\r\n                        disabled={treatySaving}\r\n                    >\r\n                        {TREATY_STATUSES.map(s => (\r\n                            <option key={s.value} value={s.value}>{s.label}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"treaty-form-participants\">\r\n                    <div className=\"participants-select\">\r\n                        <label className=\"participants-label\">Participants</label>\r\n                        <select\r\n                            name=\"participants\"\r\n                            value={treatyForm.participants}\r\n                            onChange={handleTreatyFormChange}\r\n                            className=\"login-input\"\r\n                            multiple\r\n                            disabled={treatySaving}\r\n                        >\r\n                            {getEmpireNames().map(e => (\r\n                                <option key={e} value={e}>{e}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {account && account.username === \"GameMaster\" && (\r\n                        <div className=\"owner-select\">\r\n                            <label className=\"owner-label\">Owner:</label>\r\n                            <select\r\n                                name=\"owner\"\r\n                                value={treatyForm.owner}\r\n                                onChange={handleTreatyFormChange}\r\n                                className=\"login-input\"\r\n                                disabled={treatySaving}\r\n                            >\r\n                                {Object.keys(accounts).map(acc => (\r\n                                    <option key={acc} value={acc}>{acc}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <label className=\"treaty-content-label\">Treaty Content</label>\r\n                <textarea\r\n                    name=\"content\"\r\n                    placeholder=\"Treaty Content\"\r\n                    value={treatyForm.content}\r\n                    onChange={handleTreatyFormChange}\r\n                    className=\"login-input\"\r\n                    rows={9}\r\n                    required\r\n                    disabled={treatySaving}\r\n                />\r\n                <div className=\"treaty-form-actions\">\r\n                    <button type=\"submit\" className=\"empire-save-btn\" disabled={treatySaving}>\r\n                        {treatyEditId ? \"Save Changes\" : \"Create Treaty\"}\r\n                    </button>\r\n                    <button type=\"button\" className=\"empire-back-btn\" onClick={handleCancelTreatyForm} disabled={treatySaving}>Cancel</button>\r\n                    {treatyError && <div className=\"login-error treaty-error\">{treatyError}</div>}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    function renderTreatyView(treaty) {\r\n        const statusObj = TREATY_STATUSES.find(s => s.value === treaty.status);\r\n        return (\r\n            <div className=\"treaty-view card\">\r\n                <div className=\"treaty-view-header\">\r\n                    <h2 className=\"treaty-title\">{treaty.title}</h2>\r\n                    <span className=\"treaty-status\" style={{color: statusObj.color}}>{statusObj ? statusObj.label : treaty.status}</span>\r\n                </div>\r\n                <div className=\"treaty-view-owner\">\r\n                    Owner: {treaty.owner}\r\n                </div>\r\n                <div className=\"treaty-view-participants\">\r\n                    <b>Participants:</b> {treaty.participants && treaty.participants.length > 0 ? treaty.participants.join(', ') : <i>None</i>}\r\n                </div>\r\n                <div className=\"treaty-content-static\">\r\n                    {treaty.content}\r\n                </div>\r\n                <div className=\"treaty-view-actions\">\r\n                    <button className=\"empire-back-btn\" onClick={() => setTreatyViewId(null)}>Back</button>\r\n                    {canEditTreaty(treaty) && (\r\n                        <button className=\"empire-save-btn\" onClick={() => handleEditTreaty(treaty)}>Edit</button>\r\n                    )}\r\n                    {canTransferTreaty(treaty) && (\r\n                        <select\r\n                            value={treaty.owner}\r\n                            onChange={e => handleTransferTreatyOwner(treaty, e.target.value)}\r\n                            className=\"owner-transfer-select\"\r\n                        >\r\n                            {Object.keys(accounts).map(acc => (\r\n                                <option key={acc} value={acc}>{acc}</option>\r\n                            ))}\r\n                        </select>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Only show accounts tab for GameMaster\r\n    const showAccountsTab = account && account.username === \"GameMaster\";\r\n    const tabs = [\r\n        { key: 'channels', label: 'Channels' },\r\n        { key: 'empires', label: 'Empires' },\r\n        { key: 'treaties', label: 'Treaties' }\r\n    ];\r\n    if (showAccountsTab) {\r\n        tabs.push({ key: 'accounts', label: 'Manage Accounts' });\r\n        tabs.push({ key: 'manage-empires', label: 'Manage Empires' });\r\n    }\r\n\r\n    // Ref for account edit panel\r\n    const accountEditPanelRef = useRef(null);\r\n\r\n    // Scroll to edit panel when editAccount changes\r\n    useEffect(() => {\r\n        if (editAccount && accountEditPanelRef.current) {\r\n            accountEditPanelRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    }, [editAccount]);\r\n\r\n    // --- MODIFIED: Only allow delete if GM and permission enabled ---\r\n    function handleDeleteMessage(boardKey, msgIdx) {\r\n        if (!account || account.username !== \"GameMaster\" || !gmPermissions.canDeleteMessages) return;\r\n        if (!window.confirm(\"Delete this message?\")) return;\r\n        fetch('/api/messages/delete', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ board: boardKey, index: Number(msgIdx) })\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(boardKey)}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [boardKey]: data\r\n                    }));\r\n                });\r\n        });\r\n    }\r\n\r\n    // --- Treaties: filtered and sorted by search ---\r\n    const filteredTreaties = treatySearch.trim()\r\n        ? treaties.filter(t =>\r\n            (t.title && t.title.toLowerCase().includes(treatySearch.toLowerCase())) ||\r\n            (t.content && t.content.toLowerCase().includes(treatySearch.toLowerCase())) ||\r\n            (t.owner && t.owner.toLowerCase().includes(treatySearch.toLowerCase())) ||\r\n            (Array.isArray(t.participants) && t.participants.some(p => p.toLowerCase().includes(treatySearch.toLowerCase())))\r\n        )\r\n        : treaties;\r\n    const sortedTreaties = [...filteredTreaties].sort((a, b) => {\r\n        if (treatySort === 'title') return a.title.localeCompare(b.title);\r\n        if (treatySort === 'owner') return a.owner.localeCompare(b.owner);\r\n        return 0;\r\n    });\r\n\r\n    // --- Empires: filtered and sorted by search ---\r\n    const filteredEmpires = empireSearch.trim()\r\n        ? getEmpireNames().filter(e => e.toLowerCase().includes(empireSearch.toLowerCase()))\r\n        : getEmpireNames();\r\n    const sortedEmpires = [...filteredEmpires].sort((a, b) => {\r\n        if (empireSort === 'name') return a.localeCompare(b);\r\n        return 0;\r\n    });\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <header className=\"header\">\r\n                <h1>Stellaris RP Diplomatic Message Boards</h1>\r\n                <div className=\"tabs-bar\">\r\n                    {tabs.map(tab => (\r\n                        <button\r\n                            key={tab.key}\r\n                            className={`tab-btn${activeTab === tab.key ? ' active' : ''}`}\r\n                            onClick={() => {\r\n                                setActiveTab(tab.key);\r\n                                setEmpirePage(null);\r\n                                setEditEmpire(null);\r\n                                setEditAccount(null);\r\n                                setTreatyViewId && setTreatyViewId(null); // Only if setTreatyViewId exists\r\n                                setShowTreatyForm && setShowTreatyForm(false); // Only if setShowTreatyForm exists\r\n                            }}\r\n                        >\r\n                            {tab.label}\r\n                        </button>\r\n                    ))}\r\n                    <MenuDropdown\r\n                        showMenu={showMenu}\r\n                        showPermissions={showPermissions}\r\n                        handleMenuToggle={handleMenuToggle}\r\n                        handleLogout={handleLogout}\r\n                        account={account}\r\n                        handlePermissionsToggle={handlePermissionsToggle}\r\n                        gmPermissions={gmPermissions}\r\n                        handlePermissionChange={handlePermissionChange}\r\n                        menuDropdownRef={menuDropdownRef}\r\n                        permissionsDropdownRef={permissionsDropdownRef}\r\n                    />\r\n                </div>\r\n            </header>\r\n            <main className=\"main-content\">\r\n                {activeTab === 'treaties' ? (\r\n                    <section className=\"treaties-section card\">\r\n                        <div className=\"treaties-header\">\r\n                            <h2>Treaties, Contracts & Agreements</h2>\r\n                            {account && (\r\n                                <button\r\n                                    className=\"empire-save-btn\"\r\n                                    onClick={() => openTreatyDialog('new')}\r\n                                >\r\n                                    + Add New Treaty\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                        {/* --- Treaty Search Input & Sort --- */}\r\n                        <div className=\"treaty-search-container\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search treaties by title, content, owner, or participant...\"\r\n                                value={treatySearch}\r\n                                onChange={e => setTreatySearch(e.target.value)}\r\n                                className=\"treaty-search-input\"\r\n                            />\r\n                            {treatySearch && (\r\n                                <button\r\n                                    className=\"treaty-search-clear-btn\"\r\n                                    onClick={() => setTreatySearch('')}\r\n                                    title=\"Clear search\"\r\n                                >✕</button>\r\n                            )}\r\n                            <select\r\n                                value={treatySort}\r\n                                onChange={e => setTreatySort(e.target.value)}\r\n                                className=\"treaty-sort-select\"\r\n                            >\r\n                                <option value=\"title\">Sort by Title</option>\r\n                                <option value=\"owner\">Sort by Owner</option>\r\n                            </select>\r\n                        </div>\r\n                        {/* Dialogs */}\r\n                        {treatyDialog.open && treatyDialog.mode !== 'view' && (\r\n                            <TreatyDialog\r\n                                open={treatyDialog.open}\r\n                                mode={treatyDialog.mode}\r\n                                data={treatyDialog.data}\r\n                                onSave={handleTreatySave}\r\n                                onClose={closeTreatyDialog}\r\n                                error={treatyError}\r\n                                saving={treatySaving}\r\n                                empires={empires.map(e => e.name)}\r\n                                accounts={accounts}\r\n                                account={account}\r\n                            />\r\n                        )}\r\n                        {treatyDialog.open && treatyDialog.mode === 'view' && (\r\n                            <TreatyView\r\n                                treaty={treatyDialog.data}\r\n                                onBack={closeTreatyDialog}\r\n                                onEdit={() => openTreatyDialog('edit', treatyDialog.data)}\r\n                                onTransfer={newOwner => handleTreatyTransferOwner(treatyDialog.data.id, newOwner)}\r\n                                canEdit={canEditTreaty(treatyDialog.data)}\r\n                                canTransfer={canTransferTreaty(treatyDialog.data)}\r\n                                accounts={accounts}\r\n                            />\r\n                        )}\r\n                        {/* List */}\r\n                        <div className=\"treaties-list-container\">\r\n                            {!treatiesLoaded && <div className=\"login-loading\">Loading treaties...</div>}\r\n                            {sortedTreaties.length === 0 && treatiesLoaded && (\r\n                                <div className=\"no-messages\">No treaties found.</div>\r\n                            )}\r\n                            <ul className=\"treaties-list\">\r\n                                {sortedTreaties.map(treaty => (\r\n                                    <li\r\n                                        key={treaty.id}\r\n                                        className=\"treaty-item\"\r\n                                        onClick={() => setTreatyDialog({ open: true, mode: 'view', data: treaty })}\r\n                                    >\r\n                                        <div className=\"treaty-info\">\r\n                                            <div className=\"treaty-title\">{treaty.title}</div>\r\n                                            <div className=\"treaty-meta\">\r\n                                                <div className=\"treaty-owner\">Owner: {treaty.owner}</div>\r\n                                                <div className=\"treaty-participants\">\r\n                                                    <b>Participants:</b> {treaty.participants?.join(', ') || <i>None</i>}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"treaty-content\">\r\n                                                {treaty.content.length > 180 ? treaty.content.slice(0,180) + '…' : treaty.content}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"treaty-actions\">\r\n                                            <span className=\"treaty-status\">\r\n                                                {({\r\n                                                    discussion: '🗨️ In Discussion',\r\n                                                    active: '✅ Active',\r\n                                                    broken: '❌ Broken',\r\n                                                    expired: '⌛ Expired',\r\n                                                    other: '❓ Other'\r\n                                                })[treaty.status] || treaty.status}\r\n                                            </span>\r\n                                            <span className=\"treaty-buttons\">\r\n                                                <button\r\n                                                    className=\"empire-view-btn\"\r\n                                                    onClick={ev => { ev.stopPropagation(); setTreatyDialog({ open: true, mode: 'view', data: treaty }); }}\r\n                                                >View</button>\r\n                                                {canEditTreaty(treaty) && (\r\n                                                    <button\r\n                                                        className=\"empire-save-btn\"\r\n                                                        onClick={ev => { ev.stopPropagation(); openTreatyDialog('edit', treaty); }}\r\n                                                    >Edit</button>\r\n                                                )}\r\n                                            </span>\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n                ) : activeTab === 'manage-empires' && showAccountsTab ? (\r\n                    <section className=\"account-manage-section card\">\r\n                        <h2>Manage Empires</h2>\r\n                        <form onSubmit={handleCreateEmpire} className=\"account-form\">\r\n                            <div className=\"account-form-fields\">\r\n                                <input\r\n                                    placeholder=\"New empire name\"\r\n                                    value={newEmpireName}\r\n                                    onChange={e => setNewEmpireName(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={newEmpireLoading}\r\n                                />\r\n                                <button type=\"submit\" className=\"login-btn\" disabled={newEmpireLoading}>Create Empire</button>\r\n                            </div>\r\n                        </form>\r\n                        {newEmpireError && <div className=\"login-error\">{newEmpireError}</div>}\r\n                        <h3>Empires & Account Assignment</h3>\r\n                        <ul className=\"accounts-list\">\r\n                            {empires.map(emp => (\r\n                                <li\r\n                                    key={emp.name}\r\n                                    className=\"account-item\"\r\n                                >\r\n                                    <b>{emp.name}</b>\r\n                                    <span className=\"account-actions\">\r\n                                        <select\r\n                                            value={emp.account || ''}\r\n                                            onChange={e => {\r\n                                                const val = e.target.value;\r\n                                                if (val) handleLinkAccount(emp.name, val);\r\n                                                else handleUnlinkAccount(emp.name);\r\n                                            }}\r\n                                            className=\"account-select\"\r\n                                        >\r\n                                            <option value=\"\" className=\"account-option\">Select account...</option>\r\n                                            {Object.keys(accounts).map(accName => (\r\n                                                <option key={accName} value={accName} className=\"account-option\">\r\n                                                    {accName}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <button\r\n                                            className=\"account-manage-btn account-delete-btn\"\r\n                                            onClick={() => handleDeleteEmpire(emp.name)}\r\n                                            disabled={newEmpireLoading}\r\n                                        >Delete</button>\r\n                                    </span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </section>\r\n                ) : activeTab === 'accounts' && showAccountsTab ? (\r\n                    <section className=\"account-manage-section card\">\r\n                        <h2>Manage Accounts</h2>\r\n                        <form onSubmit={handleCreateAccount} className=\"account-form\">\r\n                            <div className=\"account-form-fields\">\r\n                                <input\r\n                                    placeholder=\"Account name\"\r\n                                    value={newAccountName}\r\n                                    onChange={e => setNewAccountName(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={accountsTabLoading}\r\n                                />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={newAccountPass}\r\n                                    onChange={e => setNewAccountPass(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={accountsTabLoading}\r\n                                />\r\n                                <button type=\"submit\" className=\"login-btn\" disabled={accountsTabLoading}>Create</button>\r\n                            </div>\r\n                        </form>\r\n                        {accountError && <div className=\"login-error\">{accountError}</div>}\r\n                        {accountSuccess && <div className=\"login-loading\" style={{color:'limegreen'}}>{accountSuccess}</div>}\r\n\r\n                        {/* Restore account list with Edit/Delete buttons */}\r\n                        <h3>All Accounts</h3>\r\n                        <ul className=\"accounts-list\">\r\n                            {Object.keys(accounts).map(acc => (\r\n                                <li\r\n                                    key={acc}\r\n                                    className=\"account-item\"\r\n                                >\r\n                                    <b>{acc}</b>\r\n                                    {acc !== \"GameMaster\" && (\r\n                                        <span className=\"account-actions\">\r\n                                            <button\r\n                                                className=\"account-manage-btn account-edit-btn\"\r\n                                                onClick={() => {\r\n                                                    setEditAccount(acc);\r\n                                                    setEditAccountName(acc);\r\n                                                    setEditAccountPass('');\r\n                                                    setEditAccountError('');\r\n                                                }}\r\n                                                disabled={editAccountLoading}\r\n                                            >Edit</button>\r\n                                            <button\r\n                                                className=\"account-manage-btn account-delete-btn\"\r\n                                                onClick={() => handleDeleteAccount(acc)}\r\n                                                disabled={editAccountLoading}\r\n                                            >Delete</button>\r\n                                        </span>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        {editAccount && (\r\n                            <div\r\n                                className=\"account-edit-panel card\"\r\n                                ref={accountEditPanelRef}\r\n                            >\r\n                                <h3>Edit Account: <b>{editAccount}</b></h3>\r\n                                <form onSubmit={handleRenameAccount} className=\"edit-account-form\">\r\n                                    <label>\r\n                                        Rename to:\r\n                                        <input\r\n                                            value={editAccountName}\r\n                                            onChange={e => setEditAccountName(e.target.value)}\r\n                                            className=\"login-input\"\r\n                                            disabled={editAccountLoading}\r\n                                        />\r\n                                    </label>\r\n                                    <button type=\"submit\" className=\"empire-save-btn\" disabled={editAccountLoading}>Rename</button>\r\n                                </form>\r\n                                <form onSubmit={handleChangePassword} className=\"change-password-form\">\r\n                                    <label>\r\n                                        New Password:\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            value={editAccountPass}\r\n                                            onChange={e => setEditAccountPass(e.target.value)}\r\n                                            className=\"login-input\"\r\n                                            disabled={editAccountLoading}\r\n                                        />\r\n                                    </label>\r\n                                    <button type=\"submit\" className=\"empire-save-btn\" disabled={editAccountLoading}>Change Password</button>\r\n                                </form>\r\n                                {editAccountError && <div className=\"login-error\">{editAccountError}</div>}\r\n                                <button className=\"empire-back-btn\" onClick={() => setEditAccount(null)} disabled={editAccountLoading}>Cancel</button>\r\n                            </div>\r\n                        )}\r\n                    </section>\r\n                ) : activeTab === 'empires' ? (\r\n                    editEmpire ? (\r\n                        <section className=\"empires-info-section card\">\r\n                            <h2>Edit {editEmpire}</h2>\r\n                            <EmpireEditPanel\r\n                                name={editEmpire}\r\n                                onCancel={() => setEditEmpire(null)}\r\n                                empireInfo={empireInfo}\r\n                                saveEmpireInfo={saveEmpireInfo}\r\n                            />\r\n                        </section>\r\n                    ) : empirePage ? (\r\n                        <EmpirePanel\r\n                            name={empirePage}\r\n                            canEdit={account && account.username === empirePage}\r\n                            empireInfo={empireInfo}\r\n                            getEmpireAccount={getEmpireAccount}\r\n                            setEmpirePage={setEmpirePage}\r\n                            setEditEmpire={setEditEmpire}\r\n                        />\r\n                    ) : (\r\n                        <section className=\"empires-info-section card\">\r\n                            {/* --- Empire Search Input & Sort --- */}\r\n                            <div className=\"empire-search-container\">\r\n                                <h2 className=\"section-title\">Empires Overview</h2>\r\n                                <span className=\"empire-total-count\">\r\n                                    Total Empires: <b>{sortedEmpires.length}</b>\r\n                                </span>\r\n                                <div className=\"empire-search-fields\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search empires by name...\"\r\n                                        value={empireSearch}\r\n                                        onChange={e => setEmpireSearch(e.target.value)}\r\n                                        className=\"empire-search-input\"\r\n                                    />\r\n                                    {empireSearch && (\r\n                                        <button\r\n                                            className=\"empire-search-clear-btn\"\r\n                                            onClick={() => setEmpireSearch('')}\r\n                                            title=\"Clear search\"\r\n                                        >✕</button>\r\n                                    )}\r\n                                    <select\r\n                                        value={empireSort}\r\n                                        onChange={e => setEmpireSort(e.target.value)}\r\n                                        className=\"empire-sort-select\"\r\n                                    >\r\n                                        <option value=\"name\">Sort by Name</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"empires-info-list\" style={{display: 'flex', flexWrap: 'wrap', gap: '1.5rem', justifyContent: 'flex-start'}}>\r\n                                {sortedEmpires.map(e => {\r\n                                    const linkedAccount = getEmpireAccount(e);\r\n                                    const canEdit = account && (account.username === linkedAccount || account.username === \"GameMaster\");\r\n                                    return (\r\n                                        <div\r\n                                            key={e}\r\n                                            className=\"empire-info-card empire-list-card\"\r\n                                            onClick={() => setEmpirePage(e)}\r\n                                        >\r\n                                            <h3 className=\"empire-info-title\">{e}</h3>\r\n                                            <div className=\"empire-info-owner\">\r\n                                                {linkedAccount ? <span title=\"Assigned Account\">{linkedAccount}</span> : <i>Unassigned</i>}\r\n                                            </div>\r\n                                            <div className=\"empire-actions\">\r\n                                                <button\r\n                                                    className=\"empire-view-btn\"\r\n                                                    onClick={ev => {ev.stopPropagation(); setEmpirePage(e);}}\r\n                                                >View</button>\r\n                                                {canEdit && (\r\n                                                    <button\r\n                                                        className=\"empire-save-btn\"\r\n                                                        onClick={ev => {ev.stopPropagation(); setEditEmpire(e);}}\r\n                                                    >Edit</button>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </section>\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        {!account ? (\r\n                            <section className=\"account-section card\">\r\n                                <h2 className=\"login-title\">Login</h2>\r\n                                <form onSubmit={handleLogin} className=\"account-form login-form\">\r\n                                    <div className=\"login-fields\">\r\n                                        <input\r\n                                            placeholder=\"Empire name\"\r\n                                            value={loginUser}\r\n                                            onChange={e => setLoginUser(e.target.value)}\r\n                                            required\r\n                                            disabled={!accountsLoaded}\r\n                                            className=\"login-input\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={loginPass}\r\n                                            onChange={e => setLoginPass(e.target.value)}\r\n                                            required\r\n                                            disabled={!accountsLoaded}\r\n                                            className=\"login-input\"\r\n                                        />\r\n                                    </div>\r\n                                    <button type=\"submit\" disabled={!accountsLoaded} className=\"login-btn\">Login</button>\r\n                                </form>\r\n                                {!accountsLoaded && <div className=\"login-loading\">Loading accounts...</div>}\r\n                                {error && <div className=\"login-error\">{error}</div>}\r\n                            </section>\r\n                        ) : (\r\n                            // Center the channels page\r\n                            <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n                                <section className=\"boards-section\">\r\n                                    {/* Logout button at top right */}\r\n                                    {/* <div className=\"channels-header\">\r\n                                        <span style={{marginRight: 'auto', color: '#aaa', fontWeight: 500}}>\r\n                                            Logged in as <b>{account.username}</b>\r\n                                        </span>\r\n                                        <button\r\n                                            className=\"logout-btn\"\r\n                                            onClick={handleLogout}\r\n                                            title=\"Logout\"\r\n                                        >\r\n                                            <span className=\"logout-icon\">&#x1F511;</span> Logout\r\n                                        </button>\r\n                                    </div> */}\r\n                                    {/* Main area: boards/channels list left, text channel right */}\r\n                                    <div className=\"channels-main\">\r\n                                        <div className=\"channels-sidebar\">\r\n                                            <div className=\"boards-list card\">\r\n                                                <h2>\r\n                                                    {account && account.username === \"GameMaster\"\r\n                                                        ? \"All Boards\"\r\n                                                        : \"Your Diplomatic Channels\"}\r\n                                                </h2>\r\n                                                <div className=\"boards-list-header\">\r\n                                                    <span className=\"boards-list-count\">\r\n                                                        {filteredBoards.length} {filteredBoards.length === 1 ? \"channel\" : \"channels\"}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <ul className=\"boards-list-ul\">\r\n                                                    {filteredBoards.length === 0 && (\r\n                                                        <li className=\"no-channels\">No channels available.</li>\r\n                                                    )}\r\n                                                    {filteredBoards.map(([a, b]) => {\r\n                                                        const key = a + '|' + b;\r\n                                                        return (\r\n                                                            <li key={key} className={`boards-list-item${selected === key ? ' active' : ''}`}>\r\n                                                                <button\r\n                                                                    className=\"board-btn\"\r\n                                                                    onClick={() => handleBoardSelect([a, b])}\r\n                                                                >\r\n                                                                    <span className=\"board-nations\">{a}</span>\r\n                                                                    <span className=\"board-arrow\">↔</span>\r\n                                                                    <span className=\"board-nations\">{b}</span>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                        );\r\n                                                    })}\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"channels-content\">\r\n                                            <div className=\"board-messages card\">\r\n                                                {(selected && filteredBoards.length > 0) ? (\r\n                                                    <div className=\"board-messages-inner\">\r\n                                                        <div className=\"board-title-row\">\r\n                                                            <h2 className=\"board-title\">{selected.replace('|', ' ↔ ')}</h2>\r\n                                                        </div>\r\n                                                        <div className=\"messages-panel\">\r\n                                                            <div className=\"messages-list-container\">\r\n                                                                <ul className=\"messages-list\">\r\n                                                                    {(messages[selected] || []).length === 0 && <li className=\"no-messages\">No messages yet.</li>}\r\n                                                                    {(messages[selected] || []).map((msg, i) => {\r\n                                                                        const [partnerA, partnerB] = selected.split('|');\r\n                                                                        let partnerClass = '';\r\n                                                                        if (msg.author === partnerA) partnerClass = 'message-partnerA';\r\n                                                                        else if (msg.author === partnerB) partnerClass = 'message-partnerB';\r\n                                                                        return (\r\n                                                                            <li\r\n                                                                                key={i}\r\n                                                                                className={`message-item ${partnerClass}`}\r\n                                                                                style={{\r\n                                                                                    display: 'flex',\r\n                                                                                    alignItems: 'stretch',\r\n                                                                                    justifyContent: 'flex-start',\r\n                                                                                    gap: '0.7rem'\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <div style={{\r\n                                                                                    flex: 1,\r\n                                                                                    minWidth: 0,\r\n                                                                                    display: 'flex',\r\n                                                                                    flexDirection: 'column',\r\n                                                                                    gap: '0.15rem',\r\n                                                                                    justifyContent: 'center'\r\n                                                                                }}>\r\n                                                                                    <div className=\"message-meta\" style={{marginBottom: 0}}>\r\n                                                                                        <span className=\"message-author\">{msg.author}</span>\r\n                                                                                        <small className=\"message-date\">{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                                                                    </div>\r\n                                                                                    <div className=\"message-text\">{msg.text}</div>\r\n                                                                                </div>\r\n                                                                                {account && account.username === \"GameMaster\" && gmPermissions.canDeleteMessages && (\r\n                                                                                    <div style={{\r\n                                                                                        display: 'flex',\r\n                                                                                        alignItems: 'center',\r\n                                                                                        justifyContent: 'center',\r\n                                                                                        minWidth: '2.5em',\r\n                                                                                        paddingLeft: '0.5em'\r\n                                                                                    }}>\r\n                                                                                        <button\r\n                                                                                            title=\"Delete message\"\r\n                                                                                            style={{\r\n                                                                                                background: 'none',\r\n                                                                                                border: 'none',\r\n                                                                                                color: '#ff4d4d',\r\n                                                                                                cursor: 'pointer',\r\n                                                                                                fontSize: '1.3em',\r\n                                                                                                display: 'flex',\r\n                                                                                                alignItems: 'center',\r\n                                                                                                height: '2.2em'\r\n                                                                                            }}\r\n                                                                                            onClick={e => {\r\n                                                                                                e.stopPropagation();\r\n                                                                                                handleDeleteMessage(selected, i);\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <span role=\"img\" aria-label=\"Delete\">&#128465;</span>\r\n                                                                                        </button>\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                    <div ref={messagesEndRef} />\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                            <form onSubmit={postMessage} className=\"message-form message-form-bottom\">\r\n                                                                <input\r\n                                                                    placeholder=\"Your empire\"\r\n                                                                    value={account.username}\r\n                                                                    disabled\r\n                                                                    required\r\n                                                                    className=\"author-input\"\r\n                                                                />\r\n                                                                <input\r\n                                                                    placeholder=\"Message\"\r\n                                                                    value={text}\r\n                                                                    onChange={e => setText(e.target.value)}\r\n                                                                    required\r\n                                                                    className=\"text-input\"\r\n                                                                />\r\n                                                                <button type=\"submit\" className=\"send-btn\">Send</button>\r\n                                                            </form>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <div className=\"no-messages\">Select a channel to view messages.</div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </main>\r\n            <footer className=\"footer\">\r\n                <span>Stellaris RP Board &copy; {new Date().getFullYear()}</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}