{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function getNationPairs(nations){const pairs=[];for(let i=0;i<nations.length;i++){for(let j=i+1;j<nations.length;j++){pairs.push([nations[i],nations[j]]);}}return pairs;}function App(){// Remove hardcoded exampleEmpires\n// Add state for empires loaded from JSON\nconst[empires,setEmpires]=useState([]);const[empireInput,setEmpireInput]=useState('');// Persist selected nation and board in localStorage\nconst[selectedNation,setSelectedNation]=useState(()=>localStorage.getItem('stellarisSelectedNation')||'');// Change selected to be a string key\nconst[selected,setSelected]=useState(()=>{const saved=localStorage.getItem('stellarisSelectedBoard');return saved?saved:null;});const[messages,setMessages]=useState({});const[author,setAuthor]=useState('');const[text,setText]=useState('');const pollingRef=useRef();const messagesEndRef=useRef(null);const[accounts,setAccounts]=useState({});const[accountsLoaded,setAccountsLoaded]=useState(false);const[account,setAccount]=useState(()=>{const saved=localStorage.getItem('stellarisAccount');return saved?JSON.parse(saved):null;});const[loginUser,setLoginUser]=useState('');const[loginPass,setLoginPass]=useState('');const[error,setError]=useState('');const[showEmpiresPage,setShowEmpiresPage]=useState(false);const[activeTab,setActiveTab]=useState('channels');const[empirePage,setEmpirePage]=useState(null);const[editEmpire,setEditEmpire]=useState(null);const[empireInfo,setEmpireInfo]=useState({});const[empireInfoLoaded,setEmpireInfoLoaded]=useState(false);// Add state for new account creation\nconst[newAccountName,setNewAccountName]=useState('');const[newAccountPass,setNewAccountPass]=useState('');const[accountError,setAccountError]=useState('');const[accountSuccess,setAccountSuccess]=useState('');const[accountsTabLoading,setAccountsTabLoading]=useState(false);// State for account management\nconst[editAccount,setEditAccount]=useState(null);const[editAccountName,setEditAccountName]=useState('');const[editAccountPass,setEditAccountPass]=useState('');const[editAccountError,setEditAccountError]=useState('');const[editAccountLoading,setEditAccountLoading]=useState(false);// State for Manage Empires tab (GameMaster only)\nconst[newEmpireName,setNewEmpireName]=useState('');const[newEmpireError,setNewEmpireError]=useState('');const[newEmpireLoading,setNewEmpireLoading]=useState(false);// Remove state for editing empire name in Manage Empires\n// const [editEmpireName, setEditEmpireName] = useState(null);\n// const [editEmpireNewName, setEditEmpireNewName] = useState('');\n// const [editEmpireNameError, setEditEmpireNameError] = useState('');\n// const [editEmpireNameLoading, setEditEmpireNameLoading] = useState(false);\n// Remove any empireInfo loading while viewing or editing an empire.\n// Only load empireInfo when switching to the Empires tab and not viewing/editing any empire.\n// This prevents any reloads while editing or viewing an empire.\nuseEffect(()=>{if(activeTab==='empires'&&!editEmpire&&!empirePage){// Add cache-busting query param\nfetch(`/empireInfo.json?ts=${Date.now()}`).then(res=>res.json()).then(data=>{setEmpireInfo(data&&typeof data==='object'?data:{});setEmpireInfoLoaded(true);}).catch(()=>setEmpireInfoLoaded(true));}// Only run when switching tabs, or leaving view/edit mode\n},[activeTab,editEmpire,empirePage]);// Helper: get empire names\nfunction getEmpireNames(){// Only include empires that exist (already the case)\nreturn empires.map(e=>e.name);}// Helper: get boards from linked empires\nfunction getLinkedBoards(){const names=getEmpireNames();return getNationPairs(names);}// Helper: get account linked to empire\nfunction getEmpireAccount(empireName){const emp=empires.find(e=>e.name===empireName);return emp&&emp.account?emp.account:null;}// Only show boards for the empire assigned to the logged-in account, except GameMaster sees all\nconst filteredBoards=account?account.username===\"GameMaster\"?getLinkedBoards():getLinkedBoards().filter(_ref=>{let[a,b]=_ref;return getEmpireAccount(a)===account.username||getEmpireAccount(b)===account.username;}):[];// GameMaster: link/unlink accounts to empires\nfunction handleLinkAccount(empireName,accountName){fetch('/api/empires/link',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({empireName,accountName})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>prev.map(e=>e.name===empireName?{...e,account:accountName}:e));}});}function handleUnlinkAccount(empireName){fetch('/api/empires/unlink',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({empireName})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>prev.map(e=>e.name===empireName?{...e,account:null}:e));}});}// Save selected board to localStorage\nfunction handleBoardSelect(pair){const key=pair.join('|');setSelected(key);localStorage.setItem('stellarisSelectedBoard',key);}// Fetch messages for the selected board from the server\nuseEffect(()=>{// Only poll messages if on channels tab and not editing/viewing empire\nif(!selected||activeTab!=='channels'||editEmpire||empirePage){// Stop polling if not in correct state\nif(pollingRef.current){clearInterval(pollingRef.current);pollingRef.current=null;}return;}// Use selected as key\nconst key=selected;// Function to fetch messages\nconst fetchMessages=()=>{fetch(`/api/messages?board=${encodeURIComponent(key)}`).then(res=>{if(!res.ok)throw new Error('Network response was not ok');return res.json();}).then(data=>{setMessages(prev=>({...prev,[key]:data}));}).catch(err=>{setMessages(prev=>({...prev,[key]:[]}));console.error('Failed to fetch messages:',err);});};// Initial fetch\nfetchMessages();// Set up polling\npollingRef.current=setInterval(fetchMessages,2000);// Cleanup on unmount or when selected/activeTab/editEmpire/empirePage changes\nreturn()=>{if(pollingRef.current){clearInterval(pollingRef.current);pollingRef.current=null;}};},[selected,activeTab,editEmpire,empirePage]);// Scroll to bottom only when messages actually change for the selected board\nconst prevMessagesLengthRef=useRef(0);useEffect(()=>{if(!selected)return;const currentMessages=messages[selected]||[];if(currentMessages.length!==prevMessagesLengthRef.current){if(messagesEndRef.current){messagesEndRef.current.scrollIntoView({behavior:'auto'});}prevMessagesLengthRef.current=currentMessages.length;}},[messages,selected]);// When posting, always use the logged-in account's empire name\nfunction postMessage(e){e.preventDefault();if(!selected||!account||!text.trim())return;const key=selected;const msg={board:key,author:account.username,text,timestamp:Date.now()};fetch('/api/messages',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(msg)}).then(res=>res.json()).then(()=>{fetch(`/api/messages?board=${encodeURIComponent(key)}`).then(res=>res.json()).then(data=>{setMessages(prev=>({...prev,[key]:data}));});});setText('');}// Fetch accounts from server (accounts.json)\nuseEffect(()=>{fetch('/accounts.json').then(res=>res.json()).then(data=>{setAccounts(data);setAccountsLoaded(true);}).catch(()=>setAccountsLoaded(true));},[]);// Load empires from empires.json\nuseEffect(()=>{fetch('/empires.json').then(res=>res.json()).then(data=>{setEmpires(Array.isArray(data)?data:[]);});},[]);function handleLogin(e){e.preventDefault();// Wait until accounts are loaded\nif(!accountsLoaded){setError('Accounts are still loading, please wait...');return;}const username=loginUser.trim();const password=loginPass.trim();if(!accounts[username]){setError('Invalid credentials');return;}if(accounts[username]!==password){setError('Invalid credentials');return;}setAccount({username});localStorage.setItem('stellarisAccount',JSON.stringify({username}));setError('');}function handleLogout(){setAccount(null);localStorage.removeItem('stellarisAccount');}// Save empire info to backend and update local state\nfunction saveEmpireInfo(name,info){return fetch('/api/empireInfo',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,info})}).then(res=>res.json()).then(()=>{// After saving, reload from backend with cache-busting param\nreturn fetch(`/empireInfo.json?ts=${Date.now()}`).then(res=>res.json()).then(data=>{setEmpireInfo(data&&typeof data==='object'?data:{});});});}// Edit panel for empire info\nfunction EmpireEditPanel(_ref2){let{name,onCancel}=_ref2;// Only initialize edit state from empireInfo[name] when the component mounts\nconst info=empireInfo[name]||{};const[edit,setEdit]=useState(info);// Do NOT use useEffect to update edit state from empireInfo.\n// This ensures the text fields are not reset while editing.\nfunction handleChange(e){setEdit({...edit,[e.target.name]:e.target.value});}function handleSave(e){e.preventDefault();saveEmpireInfo(name,edit).then(()=>{onCancel();});}return/*#__PURE__*/_jsxs(\"form\",{className:\"empire-edit-form\",onSubmit:handleSave,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Lore:\",/*#__PURE__*/_jsx(\"textarea\",{name:\"lore\",value:edit.lore||'',onChange:handleChange,rows:3})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Stats:\",/*#__PURE__*/_jsx(\"input\",{name:\"stats\",value:edit.stats||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Ethics:\",/*#__PURE__*/_jsx(\"input\",{name:\"ethics\",value:edit.ethics||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Civics:\",/*#__PURE__*/_jsx(\"input\",{name:\"civics\",value:edit.civics||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Special Info:\",/*#__PURE__*/_jsx(\"input\",{name:\"special\",value:edit.special||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'1rem',marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"empire-back-btn\",onClick:onCancel,children:\"Cancel\"})]})]});}// View panel for empire info\nfunction EmpirePanel(_ref3){let{name,canEdit}=_ref3;const info=empireInfo[name]||{};return/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-card empire-info-page\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"empire-info-title\",children:name}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-details\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Account:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:name})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Lore:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.lore||/*#__PURE__*/_jsx(\"i\",{children:\"No lore set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Stats:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.stats||/*#__PURE__*/_jsx(\"i\",{children:\"No stats set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Ethics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.ethics||/*#__PURE__*/_jsx(\"i\",{children:\"No ethics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Civics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.civics||/*#__PURE__*/_jsx(\"i\",{children:\"No civics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Special Info:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.special||/*#__PURE__*/_jsx(\"i\",{children:\"No special info set.\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'1rem',marginTop:'1.5rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setEmpirePage(null),children:\"Back to Empires\"}),canEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>setEditEmpire(name),children:\"Edit\"})]})]});}// Defensive: ensure empireInfo is always an object and not null/undefined\nuseEffect(()=>{if(!empireInfo||typeof empireInfo!=='object'||Array.isArray(empireInfo)){setEmpireInfo({});}},[empireInfo]);// Defensive: ensure accounts is always an object and not null/undefined\nuseEffect(()=>{if(!accounts||typeof accounts!=='object'||Array.isArray(accounts)){setAccounts({});}},[accounts]);// Add API to create new account\nfunction handleCreateAccount(e){e.preventDefault();setAccountError('');setAccountSuccess('');const name=newAccountName.trim();const pass=newAccountPass.trim();if(!name||!pass){setAccountError('Name and password required');return;}if(accounts[name]){setAccountError('Account already exists');return;}setAccountsTabLoading(true);fetch('/api/accounts',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,pass})}).then(res=>res.json()).then(data=>{if(data.success){setAccounts(prev=>({...prev,[name]:pass}));// Remove: setEmpires(prev => prev.includes(name) ? prev : [...prev, name]);\nsetAccountSuccess('Account created');setNewAccountName('');setNewAccountPass('');}else{setAccountError(data.error||'Failed to create account');}}).catch(()=>setAccountError('Failed to create account')).finally(()=>setAccountsTabLoading(false));}// API: Rename account\nfunction handleRenameAccount(e){e.preventDefault();setEditAccountError('');setEditAccountLoading(true);const oldName=editAccount;const newName=editAccountName.trim();if(!newName||newName===oldName){setEditAccountError('Enter a new name');setEditAccountLoading(false);return;}fetch('/api/accounts/rename',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({oldName,newName})}).then(res=>res.json()).then(data=>{if(data.success){// Update local state\nsetAccounts(prev=>{const updated={...prev};updated[newName]=updated[oldName];delete updated[oldName];return updated;});setEmpires(prev=>prev.map(e=>e===oldName?newName:e));setEditAccount(null);}else{setEditAccountError(data.error||'Rename failed');}}).catch(()=>setEditAccountError('Rename failed')).finally(()=>setEditAccountLoading(false));}// API: Change password\nfunction handleChangePassword(e){e.preventDefault();setEditAccountError('');setEditAccountLoading(true);const name=editAccount;const pass=editAccountPass.trim();if(!pass){setEditAccountError('Enter a new password');setEditAccountLoading(false);return;}fetch('/api/accounts/password',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,pass})}).then(res=>res.json()).then(data=>{if(data.success){setAccounts(prev=>({...prev,[name]:pass}));setEditAccount(null);}else{setEditAccountError(data.error||'Password change failed');}}).catch(()=>setEditAccountError('Password change failed')).finally(()=>setEditAccountLoading(false));}// API: Delete account\nfunction handleDeleteAccount(name){if(!window.confirm(`Delete account \"${name}\"? This cannot be undone.`))return;setEditAccountLoading(true);fetch('/api/accounts/delete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name})}).then(res=>res.json()).then(data=>{if(data.success){setAccounts(prev=>{const updated={...prev};delete updated[name];return updated;});setEmpires(prev=>prev.filter(e=>e!==name));setEditAccount(null);}else{alert(data.error||'Delete failed');}}).catch(()=>alert('Delete failed')).finally(()=>setEditAccountLoading(false));}// API: Create new empire\nfunction handleCreateEmpire(e){e.preventDefault();setNewEmpireError('');setNewEmpireLoading(true);const name=newEmpireName.trim();if(!name){setNewEmpireError('Empire name required');setNewEmpireLoading(false);return;}if(empires.some(e=>e.name===name)){setNewEmpireError('Empire already exists');setNewEmpireLoading(false);return;}fetch('/api/empires/create',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>[...prev,{name,account:null}]);setNewEmpireName('');}else{setNewEmpireError(data.error||'Failed to create empire');}}).catch(()=>setNewEmpireError('Failed to create empire')).finally(()=>setNewEmpireLoading(false));}// API: Delete empire\nfunction handleDeleteEmpire(name){if(!window.confirm(`Delete empire \"${name}\"? This cannot be undone.`))return;setNewEmpireLoading(true);fetch('/api/empires/delete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>{const updated=prev.filter(e=>e.name!==name);// If the selected board involves the deleted empire, clear selection\nif(selected){const[a,b]=selected.split('|');if(a===name||b===name){setSelected(null);localStorage.removeItem('stellarisSelectedBoard');}}return updated;});}else{setNewEmpireError(data.error||'Failed to delete empire');}}).catch(()=>setNewEmpireError('Failed to delete empire')).finally(()=>setNewEmpireLoading(false));}// Add tab for GameMaster\nconst showAccountsTab=account&&account.username===\"GameMaster\";const tabs=[{key:'channels',label:'Channels'},{key:'empires',label:'Empires'}];if(showAccountsTab){tabs.push({key:'accounts',label:'Manage Accounts'});tabs.push({key:'manage-empires',label:'Manage Empires'});}// Ref for account edit panel\nconst accountEditPanelRef=useRef(null);// Scroll to edit panel when editAccount changes\nuseEffect(()=>{if(editAccount&&accountEditPanelRef.current){accountEditPanelRef.current.scrollIntoView({behavior:'smooth',block:'center'});}},[editAccount]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Stellaris RP Diplomatic Message Boards\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tabs-bar\",children:tabs.map(tab=>/*#__PURE__*/_jsx(\"button\",{className:`tab-btn${activeTab===tab.key?' active':''}`,onClick:()=>{setActiveTab(tab.key);setEmpirePage(null);setEditEmpire(null);setEditAccount(null);},children:tab.label},tab.key))})]}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:activeTab==='manage-empires'&&showAccountsTab?/*#__PURE__*/_jsxs(\"section\",{className:\"manage-empires-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Empires\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCreateEmpire,style:{display:'flex',gap:'1rem',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"New empire name\",value:newEmpireName,onChange:e=>setNewEmpireName(e.target.value),required:true,className:\"login-input\",disabled:newEmpireLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-btn\",disabled:newEmpireLoading,children:\"Create Empire\"})]}),newEmpireError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:newEmpireError}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:'2rem'},children:\"Empires & Account Assignment\"}),/*#__PURE__*/_jsx(\"ul\",{style:{marginTop:'1rem',paddingLeft:0,listStyle:'none'},children:empires.map(emp=>/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'0.5rem',display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"b\",{children:emp.name})}),/*#__PURE__*/_jsxs(\"span\",{style:{display:'flex',gap:'0.5rem',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"select\",{value:emp.account||'',onChange:e=>{const val=e.target.value;if(val)handleLinkAccount(emp.name,val);else handleUnlinkAccount(emp.name);},style:{minWidth:'160px',padding:'0.4rem 0.7rem',borderRadius:'8px',border:'1.5px solid #00bfff',background:'#181f2a',color:'#00bfff',fontWeight:'bold',fontSize:'1rem',outline:'none'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",style:{color:'#aaa'},children:\"Select account...\"}),Object.keys(accounts).map(accName=>/*#__PURE__*/_jsx(\"option\",{value:accName,style:{color:'#232b3a'},children:accName},accName))]}),/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-delete-btn\",onClick:()=>handleDeleteEmpire(emp.name),style:{minWidth:'80px'},disabled:newEmpireLoading,children:\"Delete\"})]})]},emp.name))})]}):activeTab==='accounts'&&showAccountsTab?/*#__PURE__*/_jsxs(\"section\",{className:\"account-manage-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Accounts\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleCreateAccount,className:\"account-form\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'1rem',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Account name\",value:newAccountName,onChange:e=>setNewAccountName(e.target.value),required:true,className:\"login-input\",disabled:accountsTabLoading}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:newAccountPass,onChange:e=>setNewAccountPass(e.target.value),required:true,className:\"login-input\",disabled:accountsTabLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-btn\",disabled:accountsTabLoading,children:\"Create\"})]})}),accountError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:accountError}),accountSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",style:{color:'limegreen'},children:accountSuccess}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:'2rem'},children:\"All Accounts\"}),/*#__PURE__*/_jsx(\"ul\",{style:{marginTop:'1rem',paddingLeft:0,listStyle:'none'},children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'0.5rem',display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"b\",{children:acc}),acc!==\"GameMaster\"&&/*#__PURE__*/_jsxs(\"span\",{style:{display:'flex',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-edit-btn\",onClick:()=>{setEditAccount(acc);setEditAccountName(acc);setEditAccountPass('');setEditAccountError('');},disabled:editAccountLoading,children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-delete-btn\",onClick:()=>handleDeleteAccount(acc),disabled:editAccountLoading,children:\"Delete\"})]})]},acc))}),editAccount&&/*#__PURE__*/_jsxs(\"div\",{className:\"account-edit-panel card\",style:{marginTop:'2rem'},ref:accountEditPanelRef,children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Edit Account: \",/*#__PURE__*/_jsx(\"b\",{children:editAccount})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRenameAccount,style:{marginBottom:'1rem'},children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Rename to:\",/*#__PURE__*/_jsx(\"input\",{value:editAccountName,onChange:e=>setEditAccountName(e.target.value),className:\"login-input\",disabled:editAccountLoading})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:editAccountLoading,children:\"Rename\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleChangePassword,style:{marginBottom:'1rem'},children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"New Password:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:editAccountPass,onChange:e=>setEditAccountPass(e.target.value),className:\"login-input\",disabled:editAccountLoading})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:editAccountLoading,children:\"Change Password\"})]}),editAccountError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:editAccountError}),/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setEditAccount(null),disabled:editAccountLoading,children:\"Cancel\"})]})]}):activeTab==='empires'?editEmpire?/*#__PURE__*/_jsxs(\"section\",{className:\"empires-info-section card\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Edit \",editEmpire]}),/*#__PURE__*/_jsx(EmpireEditPanel,{name:editEmpire,onCancel:()=>setEditEmpire(null)})]}):empirePage?/*#__PURE__*/_jsx(EmpirePanel,{name:empirePage,canEdit:account&&account.username===empirePage}):/*#__PURE__*/_jsxs(\"section\",{className:\"empires-info-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Empires Overview\"}),/*#__PURE__*/_jsx(\"div\",{className:\"empires-info-list\",children:getEmpireNames().map(e=>{const canEdit=account&&(account.username===e||account.username===\"GameMaster\");return/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-card empire-list-card\",onClick:()=>setEmpirePage(e),children:[/*#__PURE__*/_jsx(\"h3\",{className:\"empire-info-title\",children:e}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-details\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Account:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:e})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Lore:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:empireInfo[e]&&empireInfo[e].lore||/*#__PURE__*/_jsx(\"i\",{children:\"No lore set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Stats:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:empireInfo[e]&&empireInfo[e].stats||/*#__PURE__*/_jsx(\"i\",{children:\"No stats set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Ethics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:empireInfo[e]&&empireInfo[e].ethics||/*#__PURE__*/_jsx(\"i\",{children:\"No ethics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Civics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:empireInfo[e]&&empireInfo[e].civics||/*#__PURE__*/_jsx(\"i\",{children:\"No civics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Special Info:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:empireInfo[e]&&empireInfo[e].special||/*#__PURE__*/_jsx(\"i\",{children:\"No special info set.\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'0.5rem',marginTop:'0.7rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-view-btn\",onClick:ev=>{ev.stopPropagation();setEmpirePage(e);},children:\"View\"}),canEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:ev=>{ev.stopPropagation();setEditEmpire(e);},children:\"Edit\"})]})]},e);})})]}):/*#__PURE__*/_jsx(_Fragment,{children:!account?/*#__PURE__*/_jsxs(\"section\",{className:\"account-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"login-title\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"account-form login-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-fields\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Empire name\",value:loginUser,onChange:e=>setLoginUser(e.target.value),required:true,disabled:!accountsLoaded,className:\"login-input\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:loginPass,onChange:e=>setLoginPass(e.target.value),required:true,disabled:!accountsLoaded,className:\"login-input\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!accountsLoaded,className:\"login-btn\",children:\"Login\"})]}),!accountsLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",children:\"Loading accounts...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:error})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'right',marginBottom:'1rem',display:'flex',justifyContent:'flex-end',alignItems:'center',gap:'1rem'},children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Logged in as \",/*#__PURE__*/_jsx(\"b\",{children:account.username})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"logout-btn\",onClick:handleLogout,title:\"Logout\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"logout-icon\",children:\"\\uD83D\\uDD11\"}),\" Logout\"]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"add-empire-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Empires\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"empire-list\",children:getEmpireNames().map(e=>/*#__PURE__*/_jsx(\"li\",{children:e},e))})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"boards-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"boards-list card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:account&&account.username===\"GameMaster\"?\"All Boards\":\"Your Diplomatic Channels\"}),/*#__PURE__*/_jsx(\"div\",{className:\"boards-list-header\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"boards-list-count\",children:[filteredBoards.length,\" \",filteredBoards.length===1?\"channel\":\"channels\"]})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"boards-list-ul\",children:[filteredBoards.length===0&&/*#__PURE__*/_jsx(\"li\",{className:\"no-channels\",children:\"No channels available.\"}),filteredBoards.map(_ref4=>{let[a,b]=_ref4;const key=a+'|'+b;return/*#__PURE__*/_jsx(\"li\",{className:`boards-list-item${selected===key?' active':''}`,children:/*#__PURE__*/_jsxs(\"button\",{className:\"board-btn\",onClick:()=>handleBoardSelect([a,b]),children:[/*#__PURE__*/_jsx(\"span\",{className:\"board-nations\",children:a}),/*#__PURE__*/_jsx(\"span\",{className:\"board-arrow\",children:\"\\u2194\"}),/*#__PURE__*/_jsx(\"span\",{className:\"board-nations\",children:b})]})},key);})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"board-messages card\",children:selected&&filteredBoards.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"board-messages-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-title-row\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"board-title\",children:selected.replace('|',' ↔ ')})}),/*#__PURE__*/_jsxs(\"div\",{className:\"messages-panel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages-list-container\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"messages-list\",children:[(messages[selected]||[]).length===0&&/*#__PURE__*/_jsx(\"li\",{className:\"no-messages\",children:\"No messages yet.\"}),(messages[selected]||[]).map((msg,i)=>{const[partnerA,partnerB]=selected.split('|');let partnerClass='';if(msg.author===partnerA)partnerClass='message-partnerA';else if(msg.author===partnerB)partnerClass='message-partnerB';// Remove ownClass for alignment\n// const ownClass = msg.author === account.username ? 'message-own' : '';\nreturn/*#__PURE__*/_jsxs(\"li\",{className:`message-item ${partnerClass}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-meta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-author\",children:msg.author}),/*#__PURE__*/_jsx(\"small\",{className:\"message-date\",children:new Date(msg.timestamp).toLocaleString()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:msg.text})]},i);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:postMessage,className:\"message-form message-form-bottom\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Your empire\",value:account.username,disabled:true,required:true,className:\"author-input\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Message\",value:text,onChange:e=>setText(e.target.value),required:true,className:\"text-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-btn\",children:\"Send\"})]})]})]}):// Show nothing if no channels available\nnull})]})]})})}),/*#__PURE__*/_jsx(\"footer\",{className:\"footer\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Stellaris RP Board \\xA9 \",new Date().getFullYear()]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getNationPairs","nations","pairs","i","length","j","push","App","empires","setEmpires","empireInput","setEmpireInput","selectedNation","setSelectedNation","localStorage","getItem","selected","setSelected","saved","messages","setMessages","author","setAuthor","text","setText","pollingRef","messagesEndRef","accounts","setAccounts","accountsLoaded","setAccountsLoaded","account","setAccount","JSON","parse","loginUser","setLoginUser","loginPass","setLoginPass","error","setError","showEmpiresPage","setShowEmpiresPage","activeTab","setActiveTab","empirePage","setEmpirePage","editEmpire","setEditEmpire","empireInfo","setEmpireInfo","empireInfoLoaded","setEmpireInfoLoaded","newAccountName","setNewAccountName","newAccountPass","setNewAccountPass","accountError","setAccountError","accountSuccess","setAccountSuccess","accountsTabLoading","setAccountsTabLoading","editAccount","setEditAccount","editAccountName","setEditAccountName","editAccountPass","setEditAccountPass","editAccountError","setEditAccountError","editAccountLoading","setEditAccountLoading","newEmpireName","setNewEmpireName","newEmpireError","setNewEmpireError","newEmpireLoading","setNewEmpireLoading","fetch","Date","now","then","res","json","data","catch","getEmpireNames","map","e","name","getLinkedBoards","names","getEmpireAccount","empireName","emp","find","filteredBoards","username","filter","_ref","a","b","handleLinkAccount","accountName","method","headers","body","stringify","success","prev","handleUnlinkAccount","handleBoardSelect","pair","key","join","setItem","current","clearInterval","fetchMessages","encodeURIComponent","ok","Error","err","console","setInterval","prevMessagesLengthRef","currentMessages","scrollIntoView","behavior","postMessage","preventDefault","trim","msg","board","timestamp","Array","isArray","handleLogin","password","handleLogout","removeItem","saveEmpireInfo","info","EmpireEditPanel","_ref2","onCancel","edit","setEdit","handleChange","target","value","handleSave","className","onSubmit","children","lore","onChange","rows","stats","ethics","civics","special","style","display","gap","marginTop","type","onClick","EmpirePanel","_ref3","canEdit","handleCreateAccount","pass","finally","handleRenameAccount","oldName","newName","updated","handleChangePassword","handleDeleteAccount","window","confirm","alert","handleCreateEmpire","some","handleDeleteEmpire","split","showAccountsTab","tabs","label","accountEditPanelRef","block","tab","marginBottom","placeholder","required","disabled","paddingLeft","listStyle","alignItems","justifyContent","val","minWidth","padding","borderRadius","border","background","color","fontWeight","fontSize","outline","Object","keys","accName","acc","ref","ev","stopPropagation","textAlign","title","_ref4","replace","partnerA","partnerB","partnerClass","toLocaleString","getFullYear"],"sources":["C:/Users/Admin/Dokumente/Stellaris/project/StellarisRP-Site/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\n\r\nfunction getNationPairs(nations) {\r\n    const pairs = [];\r\n    for (let i = 0; i < nations.length; i++) {\r\n        for (let j = i + 1; j < nations.length; j++) {\r\n            pairs.push([nations[i], nations[j]]);\r\n        }\r\n    }\r\n    return pairs;\r\n}\r\n\r\nfunction App() {\r\n    // Remove hardcoded exampleEmpires\r\n    // Add state for empires loaded from JSON\r\n    const [empires, setEmpires] = useState([]);\r\n    const [empireInput, setEmpireInput] = useState('');\r\n    // Persist selected nation and board in localStorage\r\n    const [selectedNation, setSelectedNation] = useState(() => localStorage.getItem('stellarisSelectedNation') || '');\r\n    // Change selected to be a string key\r\n    const [selected, setSelected] = useState(() => {\r\n        const saved = localStorage.getItem('stellarisSelectedBoard');\r\n        return saved ? saved : null;\r\n    });\r\n    const [messages, setMessages] = useState({});\r\n    const [author, setAuthor] = useState('');\r\n    const [text, setText] = useState('');\r\n    const pollingRef = useRef();\r\n    const messagesEndRef = useRef(null);\r\n    const [accounts, setAccounts] = useState({});\r\n    const [accountsLoaded, setAccountsLoaded] = useState(false);\r\n    const [account, setAccount] = useState(() => {\r\n        const saved = localStorage.getItem('stellarisAccount');\r\n        return saved ? JSON.parse(saved) : null;\r\n    });\r\n    const [loginUser, setLoginUser] = useState('');\r\n    const [loginPass, setLoginPass] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [showEmpiresPage, setShowEmpiresPage] = useState(false);\r\n    const [activeTab, setActiveTab] = useState('channels');\r\n    const [empirePage, setEmpirePage] = useState(null);\r\n    const [editEmpire, setEditEmpire] = useState(null);\r\n    const [empireInfo, setEmpireInfo] = useState({});\r\n    const [empireInfoLoaded, setEmpireInfoLoaded] = useState(false);\r\n\r\n    // Add state for new account creation\r\n    const [newAccountName, setNewAccountName] = useState('');\r\n    const [newAccountPass, setNewAccountPass] = useState('');\r\n    const [accountError, setAccountError] = useState('');\r\n    const [accountSuccess, setAccountSuccess] = useState('');\r\n    const [accountsTabLoading, setAccountsTabLoading] = useState(false);\r\n\r\n    // State for account management\r\n    const [editAccount, setEditAccount] = useState(null);\r\n    const [editAccountName, setEditAccountName] = useState('');\r\n    const [editAccountPass, setEditAccountPass] = useState('');\r\n    const [editAccountError, setEditAccountError] = useState('');\r\n    const [editAccountLoading, setEditAccountLoading] = useState(false);\r\n\r\n    // State for Manage Empires tab (GameMaster only)\r\n    const [newEmpireName, setNewEmpireName] = useState('');\r\n    const [newEmpireError, setNewEmpireError] = useState('');\r\n    const [newEmpireLoading, setNewEmpireLoading] = useState(false);\r\n\r\n    // Remove state for editing empire name in Manage Empires\r\n    // const [editEmpireName, setEditEmpireName] = useState(null);\r\n    // const [editEmpireNewName, setEditEmpireNewName] = useState('');\r\n    // const [editEmpireNameError, setEditEmpireNameError] = useState('');\r\n    // const [editEmpireNameLoading, setEditEmpireNameLoading] = useState(false);\r\n\r\n    // Remove any empireInfo loading while viewing or editing an empire.\r\n    // Only load empireInfo when switching to the Empires tab and not viewing/editing any empire.\r\n    // This prevents any reloads while editing or viewing an empire.\r\n    useEffect(() => {\r\n        if (\r\n            activeTab === 'empires' &&\r\n            !editEmpire &&\r\n            !empirePage\r\n        ) {\r\n            // Add cache-busting query param\r\n            fetch(`/empireInfo.json?ts=${Date.now()}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setEmpireInfo(data && typeof data === 'object' ? data : {});\r\n                    setEmpireInfoLoaded(true);\r\n                })\r\n                .catch(() => setEmpireInfoLoaded(true));\r\n        }\r\n    // Only run when switching tabs, or leaving view/edit mode\r\n    }, [activeTab, editEmpire, empirePage]);\r\n\r\n    // Helper: get empire names\r\n    function getEmpireNames() {\r\n        // Only include empires that exist (already the case)\r\n        return empires.map(e => e.name);\r\n    }\r\n\r\n    // Helper: get boards from linked empires\r\n    function getLinkedBoards() {\r\n        const names = getEmpireNames();\r\n        return getNationPairs(names);\r\n    }\r\n\r\n    // Helper: get account linked to empire\r\n    function getEmpireAccount(empireName) {\r\n        const emp = empires.find(e => e.name === empireName);\r\n        return emp && emp.account ? emp.account : null;\r\n    }\r\n\r\n    // Only show boards for the empire assigned to the logged-in account, except GameMaster sees all\r\n    const filteredBoards = account\r\n        ? account.username === \"GameMaster\"\r\n            ? getLinkedBoards()\r\n            : getLinkedBoards().filter(([a, b]) =>\r\n                getEmpireAccount(a) === account.username || getEmpireAccount(b) === account.username\r\n            )\r\n        : [];\r\n\r\n    // GameMaster: link/unlink accounts to empires\r\n    function handleLinkAccount(empireName, accountName) {\r\n        fetch('/api/empires/link', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ empireName, accountName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev =>\r\n                    prev.map(e => e.name === empireName ? { ...e, account: accountName } : e)\r\n                );\r\n            }\r\n        });\r\n    }\r\n    function handleUnlinkAccount(empireName) {\r\n        fetch('/api/empires/unlink', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ empireName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev =>\r\n                    prev.map(e => e.name === empireName ? { ...e, account: null } : e)\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    // Save selected board to localStorage\r\n    function handleBoardSelect(pair) {\r\n        const key = pair.join('|');\r\n        setSelected(key);\r\n        localStorage.setItem('stellarisSelectedBoard', key);\r\n    }\r\n\r\n    // Fetch messages for the selected board from the server\r\n    useEffect(() => {\r\n        // Only poll messages if on channels tab and not editing/viewing empire\r\n        if (\r\n            !selected ||\r\n            activeTab !== 'channels' ||\r\n            editEmpire ||\r\n            empirePage\r\n        ) {\r\n            // Stop polling if not in correct state\r\n            if (pollingRef.current) {\r\n                clearInterval(pollingRef.current);\r\n                pollingRef.current = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Use selected as key\r\n        const key = selected;\r\n\r\n        // Function to fetch messages\r\n        const fetchMessages = () => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(key)}`)\r\n                .then(res => {\r\n                    if (!res.ok) throw new Error('Network response was not ok');\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: data\r\n                    }));\r\n                })\r\n                .catch((err) => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: []\r\n                    }));\r\n                    console.error('Failed to fetch messages:', err);\r\n                });\r\n        };\r\n\r\n        // Initial fetch\r\n        fetchMessages();\r\n\r\n        // Set up polling\r\n        pollingRef.current = setInterval(fetchMessages, 2000);\r\n\r\n        // Cleanup on unmount or when selected/activeTab/editEmpire/empirePage changes\r\n        return () => {\r\n            if (pollingRef.current) {\r\n                clearInterval(pollingRef.current);\r\n                pollingRef.current = null;\r\n            }\r\n        };\r\n    }, [selected, activeTab, editEmpire, empirePage]);\r\n\r\n    // Scroll to bottom only when messages actually change for the selected board\r\n    const prevMessagesLengthRef = useRef(0);\r\n    useEffect(() => {\r\n        if (!selected) return;\r\n        const currentMessages = messages[selected] || [];\r\n        if (currentMessages.length !== prevMessagesLengthRef.current) {\r\n            if (messagesEndRef.current) {\r\n                messagesEndRef.current.scrollIntoView({ behavior: 'auto' });\r\n            }\r\n            prevMessagesLengthRef.current = currentMessages.length;\r\n        }\r\n    }, [messages, selected]);\r\n\r\n    // When posting, always use the logged-in account's empire name\r\n    function postMessage(e) {\r\n        e.preventDefault();\r\n        if (!selected || !account || !text.trim()) return;\r\n        const key = selected;\r\n        const msg = {\r\n            board: key,\r\n            author: account.username,\r\n            text,\r\n            timestamp: Date.now()\r\n        };\r\n        fetch('/api/messages', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(msg)\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(key)}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: data\r\n                    }));\r\n                });\r\n        });\r\n        setText('');\r\n    }\r\n\r\n    // Fetch accounts from server (accounts.json)\r\n    useEffect(() => {\r\n        fetch('/accounts.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAccounts(data);\r\n                setAccountsLoaded(true);\r\n            })\r\n            .catch(() => setAccountsLoaded(true));\r\n    }, []);\r\n\r\n    // Load empires from empires.json\r\n    useEffect(() => {\r\n        fetch('/empires.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setEmpires(Array.isArray(data) ? data : []);\r\n            });\r\n    }, []);\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault();\r\n        // Wait until accounts are loaded\r\n        if (!accountsLoaded) {\r\n            setError('Accounts are still loading, please wait...');\r\n            return;\r\n        }\r\n        const username = loginUser.trim();\r\n        const password = loginPass.trim();\r\n        if (!accounts[username]) {\r\n            setError('Invalid credentials');\r\n            return;\r\n        }\r\n        if (accounts[username] !== password) {\r\n            setError('Invalid credentials');\r\n            return;\r\n        }\r\n        setAccount({ username });\r\n        localStorage.setItem('stellarisAccount', JSON.stringify({ username }));\r\n        setError('');\r\n    }\r\n\r\n    function handleLogout() {\r\n        setAccount(null);\r\n        localStorage.removeItem('stellarisAccount');\r\n    }\r\n\r\n    // Save empire info to backend and update local state\r\n    function saveEmpireInfo(name, info) {\r\n        return fetch('/api/empireInfo', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, info })\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            // After saving, reload from backend with cache-busting param\r\n            return fetch(`/empireInfo.json?ts=${Date.now()}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setEmpireInfo(data && typeof data === 'object' ? data : {});\r\n                });\r\n        });\r\n    }\r\n\r\n    // Edit panel for empire info\r\n    function EmpireEditPanel({ name, onCancel }) {\r\n        // Only initialize edit state from empireInfo[name] when the component mounts\r\n        const info = empireInfo[name] || {};\r\n        const [edit, setEdit] = useState(info);\r\n\r\n        // Do NOT use useEffect to update edit state from empireInfo.\r\n        // This ensures the text fields are not reset while editing.\r\n\r\n        function handleChange(e) {\r\n            setEdit({ ...edit, [e.target.name]: e.target.value });\r\n        }\r\n        function handleSave(e) {\r\n            e.preventDefault();\r\n            saveEmpireInfo(name, edit).then(() => {\r\n                onCancel();\r\n            });\r\n        }\r\n\r\n        return (\r\n            <form className=\"empire-edit-form\" onSubmit={handleSave}>\r\n                <label>\r\n                    Lore:\r\n                    <textarea\r\n                        name=\"lore\"\r\n                        value={edit.lore || ''}\r\n                        onChange={handleChange}\r\n                        rows={3}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Stats:\r\n                    <input name=\"stats\" value={edit.stats || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Ethics:\r\n                    <input name=\"ethics\" value={edit.ethics || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Civics:\r\n                    <input name=\"civics\" value={edit.civics || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Special Info:\r\n                    <input name=\"special\" value={edit.special || ''} onChange={handleChange} />\r\n                </label>\r\n                <div style={{display: 'flex', gap: '1rem', marginTop: '1rem'}}>\r\n                    <button type=\"submit\" className=\"empire-save-btn\">Save</button>\r\n                    <button type=\"button\" className=\"empire-back-btn\" onClick={onCancel}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    // View panel for empire info\r\n    function EmpirePanel({ name, canEdit }) {\r\n        const info = empireInfo[name] || {};\r\n        return (\r\n            <div className=\"empire-info-card empire-info-page\">\r\n                <h2 className=\"empire-info-title\">{name}</h2>\r\n                <div className=\"empire-info-details\">\r\n                    <div><b>Account:</b> <code>{name}</code></div>\r\n                    <div><b>Lore:</b> <div className=\"empire-info-field\">{info.lore || <i>No lore set.</i>}</div></div>\r\n                    <div><b>Stats:</b> <div className=\"empire-info-field\">{info.stats || <i>No stats set.</i>}</div></div>\r\n                    <div><b>Ethics:</b> <div className=\"empire-info-field\">{info.ethics || <i>No ethics set.</i>}</div></div>\r\n                    <div><b>Civics:</b> <div className=\"empire-info-field\">{info.civics || <i>No civics set.</i>}</div></div>\r\n                    <div><b>Special Info:</b> <div className=\"empire-info-field\">{info.special || <i>No special info set.</i>}</div></div>\r\n                </div>\r\n                <div style={{display: 'flex', gap: '1rem', marginTop: '1.5rem'}}>\r\n                    <button className=\"empire-back-btn\" onClick={() => setEmpirePage(null)}>Back to Empires</button>\r\n                    {canEdit && (\r\n                        <button className=\"empire-save-btn\" onClick={() => setEditEmpire(name)}>Edit</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Defensive: ensure empireInfo is always an object and not null/undefined\r\n    useEffect(() => {\r\n        if (!empireInfo || typeof empireInfo !== 'object' || Array.isArray(empireInfo)) {\r\n            setEmpireInfo({});\r\n        }\r\n    }, [empireInfo]);\r\n\r\n    // Defensive: ensure accounts is always an object and not null/undefined\r\n    useEffect(() => {\r\n        if (!accounts || typeof accounts !== 'object' || Array.isArray(accounts)) {\r\n            setAccounts({});\r\n        }\r\n    }, [accounts]);\r\n\r\n    // Add API to create new account\r\n    function handleCreateAccount(e) {\r\n        e.preventDefault();\r\n        setAccountError('');\r\n        setAccountSuccess('');\r\n        const name = newAccountName.trim();\r\n        const pass = newAccountPass.trim();\r\n        if (!name || !pass) {\r\n            setAccountError('Name and password required');\r\n            return;\r\n        }\r\n        if (accounts[name]) {\r\n            setAccountError('Account already exists');\r\n            return;\r\n        }\r\n        setAccountsTabLoading(true);\r\n        fetch('/api/accounts', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, pass })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setAccounts(prev => ({ ...prev, [name]: pass }));\r\n                // Remove: setEmpires(prev => prev.includes(name) ? prev : [...prev, name]);\r\n                setAccountSuccess('Account created');\r\n                setNewAccountName('');\r\n                setNewAccountPass('');\r\n            } else {\r\n                setAccountError(data.error || 'Failed to create account');\r\n            }\r\n        })\r\n        .catch(() => setAccountError('Failed to create account'))\r\n        .finally(() => setAccountsTabLoading(false));\r\n    }\r\n\r\n    // API: Rename account\r\n    function handleRenameAccount(e) {\r\n        e.preventDefault();\r\n        setEditAccountError('');\r\n        setEditAccountLoading(true);\r\n        const oldName = editAccount;\r\n        const newName = editAccountName.trim();\r\n        if (!newName || newName === oldName) {\r\n            setEditAccountError('Enter a new name');\r\n            setEditAccountLoading(false);\r\n            return;\r\n        }\r\n        fetch('/api/accounts/rename', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ oldName, newName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                // Update local state\r\n                setAccounts(prev => {\r\n                    const updated = { ...prev };\r\n                    updated[newName] = updated[oldName];\r\n                    delete updated[oldName];\r\n                    return updated;\r\n                });\r\n                setEmpires(prev => prev.map(e => e === oldName ? newName : e));\r\n                setEditAccount(null);\r\n            } else {\r\n                setEditAccountError(data.error || 'Rename failed');\r\n            }\r\n        })\r\n        .catch(() => setEditAccountError('Rename failed'))\r\n        .finally(() => setEditAccountLoading(false));\r\n    }\r\n\r\n    // API: Change password\r\n    function handleChangePassword(e) {\r\n        e.preventDefault();\r\n        setEditAccountError('');\r\n        setEditAccountLoading(true);\r\n        const name = editAccount;\r\n        const pass = editAccountPass.trim();\r\n        if (!pass) {\r\n            setEditAccountError('Enter a new password');\r\n            setEditAccountLoading(false);\r\n            return;\r\n        }\r\n        fetch('/api/accounts/password', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, pass })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setAccounts(prev => ({ ...prev, [name]: pass }));\r\n                setEditAccount(null);\r\n            } else {\r\n                setEditAccountError(data.error || 'Password change failed');\r\n            }\r\n        })\r\n        .catch(() => setEditAccountError('Password change failed'))\r\n        .finally(() => setEditAccountLoading(false));\r\n    }\r\n\r\n    // API: Delete account\r\n    function handleDeleteAccount(name) {\r\n        if (!window.confirm(`Delete account \"${name}\"? This cannot be undone.`)) return;\r\n        setEditAccountLoading(true);\r\n        fetch('/api/accounts/delete', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setAccounts(prev => {\r\n                    const updated = { ...prev };\r\n                    delete updated[name];\r\n                    return updated;\r\n                });\r\n                setEmpires(prev => prev.filter(e => e !== name));\r\n                setEditAccount(null);\r\n            } else {\r\n                alert(data.error || 'Delete failed');\r\n            }\r\n        })\r\n        .catch(() => alert('Delete failed'))\r\n        .finally(() => setEditAccountLoading(false));\r\n    }\r\n\r\n    // API: Create new empire\r\n    function handleCreateEmpire(e) {\r\n        e.preventDefault();\r\n        setNewEmpireError('');\r\n        setNewEmpireLoading(true);\r\n        const name = newEmpireName.trim();\r\n        if (!name) {\r\n            setNewEmpireError('Empire name required');\r\n            setNewEmpireLoading(false);\r\n            return;\r\n        }\r\n        if (empires.some(e => e.name === name)) {\r\n            setNewEmpireError('Empire already exists');\r\n            setNewEmpireLoading(false);\r\n            return;\r\n        }\r\n        fetch('/api/empires/create', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev => [...prev, { name, account: null }]);\r\n                setNewEmpireName('');\r\n            } else {\r\n                setNewEmpireError(data.error || 'Failed to create empire');\r\n            }\r\n        })\r\n        .catch(() => setNewEmpireError('Failed to create empire'))\r\n        .finally(() => setNewEmpireLoading(false));\r\n    }\r\n\r\n    // API: Delete empire\r\n    function handleDeleteEmpire(name) {\r\n        if (!window.confirm(`Delete empire \"${name}\"? This cannot be undone.`)) return;\r\n        setNewEmpireLoading(true);\r\n        fetch('/api/empires/delete', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev => {\r\n                    const updated = prev.filter(e => e.name !== name);\r\n                    // If the selected board involves the deleted empire, clear selection\r\n                    if (selected) {\r\n                        const [a, b] = selected.split('|');\r\n                        if (a === name || b === name) {\r\n                            setSelected(null);\r\n                            localStorage.removeItem('stellarisSelectedBoard');\r\n                        }\r\n                    }\r\n                    return updated;\r\n                });\r\n            } else {\r\n                setNewEmpireError(data.error || 'Failed to delete empire');\r\n            }\r\n        })\r\n        .catch(() => setNewEmpireError('Failed to delete empire'))\r\n        .finally(() => setNewEmpireLoading(false));\r\n    }\r\n\r\n    // Add tab for GameMaster\r\n    const showAccountsTab = account && account.username === \"GameMaster\";\r\n    const tabs = [\r\n        { key: 'channels', label: 'Channels' },\r\n        { key: 'empires', label: 'Empires' },\r\n    ];\r\n    if (showAccountsTab) {\r\n        tabs.push({ key: 'accounts', label: 'Manage Accounts' });\r\n        tabs.push({ key: 'manage-empires', label: 'Manage Empires' });\r\n    }\r\n\r\n    // Ref for account edit panel\r\n    const accountEditPanelRef = useRef(null);\r\n\r\n    // Scroll to edit panel when editAccount changes\r\n    useEffect(() => {\r\n        if (editAccount && accountEditPanelRef.current) {\r\n            accountEditPanelRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    }, [editAccount]);\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <header className=\"header\">\r\n                <h1>Stellaris RP Diplomatic Message Boards</h1>\r\n                <div className=\"tabs-bar\">\r\n                    {tabs.map(tab => (\r\n                        <button\r\n                            key={tab.key}\r\n                            className={`tab-btn${activeTab === tab.key ? ' active' : ''}`}\r\n                            onClick={() => { setActiveTab(tab.key); setEmpirePage(null); setEditEmpire(null); setEditAccount(null); }}\r\n                        >\r\n                            {tab.label}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </header>\r\n            <main className=\"main-content\">\r\n                {activeTab === 'manage-empires' && showAccountsTab ? (\r\n                    <section className=\"manage-empires-section card\">\r\n                        <h2>Manage Empires</h2>\r\n                        \r\n                        <form onSubmit={handleCreateEmpire} style={{display:'flex', gap:'1rem', marginBottom:'1rem'}}>\r\n                            <input\r\n                                placeholder=\"New empire name\"\r\n                                value={newEmpireName}\r\n                                onChange={e => setNewEmpireName(e.target.value)}\r\n                                required\r\n                                className=\"login-input\"\r\n                                disabled={newEmpireLoading}\r\n                            />\r\n                            <button type=\"submit\" className=\"login-btn\" disabled={newEmpireLoading}>Create Empire</button>\r\n                        </form>\r\n                        {newEmpireError && <div className=\"login-error\">{newEmpireError}</div>}\r\n                        <h3 style={{marginTop:'2rem'}}>Empires & Account Assignment</h3>\r\n                        <ul style={{marginTop:'1rem', paddingLeft:0, listStyle:'none'}}>\r\n                            {empires.map(emp => (\r\n                                <li\r\n                                    key={emp.name}\r\n                                    style={{\r\n                                        marginBottom: '0.5rem',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'space-between'\r\n                                    }}\r\n                                >\r\n                                    <span>\r\n                                        <b>{emp.name}</b>\r\n                                    </span>\r\n                                    <span style={{display:'flex', gap:'0.5rem', alignItems:'center'}}>\r\n                                        <select\r\n                                            value={emp.account || ''}\r\n                                            onChange={e => {\r\n                                                const val = e.target.value;\r\n                                                if (val) handleLinkAccount(emp.name, val);\r\n                                                else handleUnlinkAccount(emp.name);\r\n                                            }}\r\n                                            style={{\r\n                                                minWidth:'160px',\r\n                                                padding:'0.4rem 0.7rem',\r\n                                                borderRadius:'8px',\r\n                                                border:'1.5px solid #00bfff',\r\n                                                background:'#181f2a',\r\n                                                color:'#00bfff',\r\n                                                fontWeight:'bold',\r\n                                                fontSize:'1rem',\r\n                                                outline:'none'\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"\" style={{color:'#aaa'}}>Select account...</option>\r\n                                            {Object.keys(accounts).map(accName => (\r\n                                                <option key={accName} value={accName} style={{color:'#232b3a'}}>\r\n                                                    {accName}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <button\r\n                                            className=\"account-manage-btn account-delete-btn\"\r\n                                            onClick={() => handleDeleteEmpire(emp.name)}\r\n                                            style={{minWidth:'80px'}}\r\n                                            disabled={newEmpireLoading}\r\n                                        >Delete</button>\r\n                                    </span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </section>\r\n                ) : activeTab === 'accounts' && showAccountsTab ? (\r\n                    <section className=\"account-manage-section card\">\r\n                        <h2>Manage Accounts</h2>\r\n                        <form onSubmit={handleCreateAccount} className=\"account-form\">\r\n                            <div style={{display:'flex', gap:'1rem', marginBottom:'1rem'}}>\r\n                                <input\r\n                                    placeholder=\"Account name\"\r\n                                    value={newAccountName}\r\n                                    onChange={e => setNewAccountName(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={accountsTabLoading}\r\n                                />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={newAccountPass}\r\n                                    onChange={e => setNewAccountPass(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={accountsTabLoading}\r\n                                />\r\n                                <button type=\"submit\" className=\"login-btn\" disabled={accountsTabLoading}>Create</button>\r\n                            </div>\r\n                        </form>\r\n                        {accountError && <div className=\"login-error\">{accountError}</div>}\r\n                        {accountSuccess && <div className=\"login-loading\" style={{color:'limegreen'}}>{accountSuccess}</div>}\r\n\r\n                        {/* Restore account list with Edit/Delete buttons */}\r\n                        <h3 style={{marginTop:'2rem'}}>All Accounts</h3>\r\n                        <ul style={{marginTop:'1rem', paddingLeft:0, listStyle:'none'}}>\r\n                            {Object.keys(accounts).map(acc => (\r\n                                <li\r\n                                    key={acc}\r\n                                    style={{\r\n                                        marginBottom: '0.5rem',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'space-between'\r\n                                    }}\r\n                                >\r\n                                    <b>{acc}</b>\r\n                                    {acc !== \"GameMaster\" && (\r\n                                        <span style={{display:'flex', gap:'0.5rem'}}>\r\n                                            <button\r\n                                                className=\"account-manage-btn account-edit-btn\"\r\n                                                onClick={() => {\r\n                                                    setEditAccount(acc);\r\n                                                    setEditAccountName(acc);\r\n                                                    setEditAccountPass('');\r\n                                                    setEditAccountError('');\r\n                                                }}\r\n                                                disabled={editAccountLoading}\r\n                                            >Edit</button>\r\n                                            <button\r\n                                                className=\"account-manage-btn account-delete-btn\"\r\n                                                onClick={() => handleDeleteAccount(acc)}\r\n                                                disabled={editAccountLoading}\r\n                                            >Delete</button>\r\n                                        </span>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        {editAccount && (\r\n                            <div\r\n                                className=\"account-edit-panel card\"\r\n                                style={{marginTop:'2rem'}}\r\n                                ref={accountEditPanelRef}\r\n                            >\r\n                                <h3>Edit Account: <b>{editAccount}</b></h3>\r\n                                <form onSubmit={handleRenameAccount} style={{marginBottom:'1rem'}}>\r\n                                    <label>\r\n                                        Rename to:\r\n                                        <input\r\n                                            value={editAccountName}\r\n                                            onChange={e => setEditAccountName(e.target.value)}\r\n                                            className=\"login-input\"\r\n                                            disabled={editAccountLoading}\r\n                                        />\r\n                                    </label>\r\n                                    <button type=\"submit\" className=\"empire-save-btn\" disabled={editAccountLoading}>Rename</button>\r\n                                </form>\r\n                                <form onSubmit={handleChangePassword} style={{marginBottom:'1rem'}}>\r\n                                    <label>\r\n                                        New Password:\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            value={editAccountPass}\r\n                                            onChange={e => setEditAccountPass(e.target.value)}\r\n                                            className=\"login-input\"\r\n                                            disabled={editAccountLoading}\r\n                                        />\r\n                                    </label>\r\n                                    <button type=\"submit\" className=\"empire-save-btn\" disabled={editAccountLoading}>Change Password</button>\r\n                                </form>\r\n                                {editAccountError && <div className=\"login-error\">{editAccountError}</div>}\r\n                                <button className=\"empire-back-btn\" onClick={() => setEditAccount(null)} disabled={editAccountLoading}>Cancel</button>\r\n                            </div>\r\n                        )}\r\n                    </section>\r\n                ) : activeTab === 'empires' ? (\r\n                    editEmpire ? (\r\n                        <section className=\"empires-info-section card\">\r\n                            <h2>Edit {editEmpire}</h2>\r\n                            <EmpireEditPanel name={editEmpire} onCancel={() => setEditEmpire(null)} />\r\n                        </section>\r\n                    ) : empirePage ? (\r\n                        <EmpirePanel name={empirePage} canEdit={account && account.username === empirePage} />\r\n                    ) : (\r\n                        <section className=\"empires-info-section card\">\r\n                            <h2>Empires Overview</h2>\r\n                            <div className=\"empires-info-list\">\r\n                                {getEmpireNames().map(e => {\r\n                                    const canEdit = account && (account.username === e || account.username === \"GameMaster\");\r\n                                    return (\r\n                                        <div key={e} className=\"empire-info-card empire-list-card\" onClick={() => setEmpirePage(e)}>\r\n                                            <h3 className=\"empire-info-title\">{e}</h3>\r\n                       \r\n                                            <div className=\"empire-info-details\">\r\n                                                <div><b>Account:</b> <code>{e}</code></div>\r\n                                                <div><b>Lore:</b> <div className=\"empire-info-field\">{(empireInfo[e] && empireInfo[e].lore) || <i>No lore set.</i>}</div></div>\r\n                                                <div><b>Stats:</b> <div className=\"empire-info-field\">{(empireInfo[e] && empireInfo[e].stats) || <i>No stats set.</i>}</div></div>\r\n                                                <div><b>Ethics:</b> <div className=\"empire-info-field\">{(empireInfo[e] && empireInfo[e].ethics) || <i>No ethics set.</i>}</div></div>\r\n                                                <div><b>Civics:</b> <div className=\"empire-info-field\">{(empireInfo[e] && empireInfo[e].civics) || <i>No civics set.</i>}</div></div>\r\n                                                <div><b>Special Info:</b> <div className=\"empire-info-field\">{(empireInfo[e] && empireInfo[e].special) || <i>No special info set.</i>}</div></div>\r\n                                            </div>\r\n                                            <div style={{display: 'flex', gap: '0.5rem', marginTop: '0.7rem'}}>\r\n                                                <button className=\"empire-view-btn\" onClick={ev => {ev.stopPropagation(); setEmpirePage(e);}}>View</button>\r\n                                                {canEdit && (\r\n                                                    <button className=\"empire-save-btn\" onClick={ev => {ev.stopPropagation(); setEditEmpire(e);}}>Edit</button>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </section>\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        {!account ? (\r\n                            <section className=\"account-section card\">\r\n                                <h2 className=\"login-title\">Login</h2>\r\n                                <form onSubmit={handleLogin} className=\"account-form login-form\">\r\n                                    <div className=\"login-fields\">\r\n                                        <input\r\n                                            placeholder=\"Empire name\"\r\n                                            value={loginUser}\r\n                                            onChange={e => setLoginUser(e.target.value)}\r\n                                            required\r\n                                            disabled={!accountsLoaded}\r\n                                            className=\"login-input\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={loginPass}\r\n                                            onChange={e => setLoginPass(e.target.value)}\r\n                                            required\r\n                                            disabled={!accountsLoaded}\r\n                                            className=\"login-input\"\r\n                                        />\r\n                                    </div>\r\n                                    <button type=\"submit\" disabled={!accountsLoaded} className=\"login-btn\">Login</button>\r\n                                </form>\r\n                                {!accountsLoaded && <div className=\"login-loading\">Loading accounts...</div>}\r\n                                {error && <div className=\"login-error\">{error}</div>}\r\n                            </section>\r\n                        ) : (\r\n                            <>\r\n                                <div style={{textAlign:'right', marginBottom:'1rem', display: 'flex', justifyContent: 'flex-end', alignItems: 'center', gap: '1rem'}}>\r\n                                    <span>\r\n                                        Logged in as <b>{account.username}</b>\r\n                                    </span>\r\n                                    <button\r\n                                        className=\"logout-btn\"\r\n                                        onClick={handleLogout}\r\n                                        title=\"Logout\"\r\n                                    >\r\n                                        <span className=\"logout-icon\">&#x1F511;</span> Logout\r\n                                    </button>\r\n                                </div>\r\n                                {/* Remove nation select, always use account.username */}\r\n                                <section className=\"add-empire-section card\">\r\n                                    <h2>Empires</h2>\r\n                                    <ul className=\"empire-list\">\r\n                                        {getEmpireNames().map(e => <li key={e}>{e}</li>)}\r\n                                    </ul>\r\n                                </section>\r\n                                <section className=\"boards-section\">\r\n                                    <div className=\"boards-list card\">\r\n                                        <h2>\r\n                                            {account && account.username === \"GameMaster\"\r\n                                                ? \"All Boards\"\r\n                                                : \"Your Diplomatic Channels\"}\r\n                                        </h2>\r\n                                        <div className=\"boards-list-header\">\r\n                                            <span className=\"boards-list-count\">\r\n                                                {filteredBoards.length} {filteredBoards.length === 1 ? \"channel\" : \"channels\"}\r\n                                            </span>\r\n                                        </div>\r\n                                        <ul className=\"boards-list-ul\">\r\n                                            {filteredBoards.length === 0 && (\r\n                                                <li className=\"no-channels\">No channels available.</li>\r\n                                            )}\r\n                                            {filteredBoards.map(([a, b]) => {\r\n                                                const key = a + '|' + b;\r\n                                                return (\r\n                                                    <li key={key} className={`boards-list-item${selected === key ? ' active' : ''}`}>\r\n                                                        <button\r\n                                                            className=\"board-btn\"\r\n                                                            onClick={() => handleBoardSelect([a, b])}\r\n                                                        >\r\n                                                            <span className=\"board-nations\">{a}</span>\r\n                                                            <span className=\"board-arrow\">↔</span>\r\n                                                            <span className=\"board-nations\">{b}</span>\r\n                                                        </button>\r\n                                                    </li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"board-messages card\">\r\n                                        {(selected && filteredBoards.length > 0) ? (\r\n                                            <div className=\"board-messages-inner\">\r\n                                                <div className=\"board-title-row\">\r\n                                                    <h2 className=\"board-title\">{selected.replace('|', ' ↔ ')}</h2>\r\n                                                </div>\r\n                                                <div className=\"messages-panel\">\r\n                                                    <div className=\"messages-list-container\">\r\n                                                        <ul className=\"messages-list\">\r\n                                                            {(messages[selected] || []).length === 0 && <li className=\"no-messages\">No messages yet.</li>}\r\n                                                            {(messages[selected] || []).map((msg, i) => {\r\n                                                                const [partnerA, partnerB] = selected.split('|');\r\n                                                                let partnerClass = '';\r\n                                                                if (msg.author === partnerA) partnerClass = 'message-partnerA';\r\n                                                                else if (msg.author === partnerB) partnerClass = 'message-partnerB';\r\n                                                                // Remove ownClass for alignment\r\n                                                                // const ownClass = msg.author === account.username ? 'message-own' : '';\r\n                                                                return (\r\n                                                                    <li key={i} className={`message-item ${partnerClass}`}>\r\n                                                                        <div className=\"message-meta\">\r\n                                                                            <span className=\"message-author\">{msg.author}</span>\r\n                                                                            <small className=\"message-date\">{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                                                        </div>\r\n                                                                        <div className=\"message-text\">{msg.text}</div>\r\n                                                                    </li>\r\n                                                                );\r\n                                                            })}\r\n                                                            <div ref={messagesEndRef} />\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                    <form onSubmit={postMessage} className=\"message-form message-form-bottom\">\r\n                                                        <input\r\n                                                            placeholder=\"Your empire\"\r\n                                                            value={account.username}\r\n                                                            disabled\r\n                                                            required\r\n                                                            className=\"author-input\"\r\n                                                        />\r\n                                                        <input\r\n                                                            placeholder=\"Message\"\r\n                                                            value={text}\r\n                                                            onChange={e => setText(e.target.value)}\r\n                                                            required\r\n                                                            className=\"text-input\"\r\n                                                        />\r\n                                                        <button type=\"submit\" className=\"send-btn\">Send</button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            // Show nothing if no channels available\r\n                                            null\r\n                                        )}\r\n                                    </div>\r\n                                </section>\r\n                            </>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </main>\r\n            <footer className=\"footer\">\r\n                <span>Stellaris RP Board &copy; {new Date().getFullYear()}</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}