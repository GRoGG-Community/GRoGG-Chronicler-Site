{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./App.css';import'./Treaties.css';import'./Empires.css';import'./Boards.css';import'./Accounts.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function getNationPairs(nations){const pairs=[];for(let i=0;i<nations.length;i++){for(let j=i+1;j<nations.length;j++){pairs.push([nations[i],nations[j]]);}}return pairs;}const TREATY_STATUSES=[{value:'discussion',label:'🗨️ In Discussion'},{value:'active',label:'✅ Active'},{value:'broken',label:'❌ Broken'},{value:'expired',label:'⌛ Expired'},{value:'other',label:'❓ Other'}];function App(){// Remove unused empireInput, selectedNation, author\nconst[empires,setEmpires]=useState([]);const[selected,setSelected]=useState(()=>{const saved=localStorage.getItem('stellarisSelectedBoard');return saved?saved:null;});const[messages,setMessages]=useState({});const[text,setText]=useState('');const pollingRef=useRef();const messagesEndRef=useRef(null);const[accounts,setAccounts]=useState({});const[accountsLoaded,setAccountsLoaded]=useState(false);const[account,setAccount]=useState(()=>{const saved=localStorage.getItem('stellarisAccount');return saved?JSON.parse(saved):null;});const[loginUser,setLoginUser]=useState('');const[loginPass,setLoginPass]=useState('');const[error,setError]=useState('');const[activeTab,setActiveTab]=useState('channels');const[empirePage,setEmpirePage]=useState(null);const[editEmpire,setEditEmpire]=useState(null);const[empireInfo,setEmpireInfo]=useState({});const[empireInfoLoaded,setEmpireInfoLoaded]=useState(false);// Account creation and management\nconst[newAccountName,setNewAccountName]=useState('');const[newAccountPass,setNewAccountPass]=useState('');const[accountError,setAccountError]=useState('');const[accountSuccess,setAccountSuccess]=useState('');const[accountsTabLoading,setAccountsTabLoading]=useState(false);const[editAccount,setEditAccount]=useState(null);const[editAccountName,setEditAccountName]=useState('');const[editAccountPass,setEditAccountPass]=useState('');const[editAccountError,setEditAccountError]=useState('');const[editAccountLoading,setEditAccountLoading]=useState(false);// Manage Empires tab\nconst[newEmpireName,setNewEmpireName]=useState('');const[newEmpireError,setNewEmpireError]=useState('');const[newEmpireLoading,setNewEmpireLoading]=useState(false);// Treaties state\nconst[treaties,setTreaties]=useState([]);const[treatiesLoaded,setTreatiesLoaded]=useState(false);const[treatyEditId,setTreatyEditId]=useState(null);const[treatyViewId,setTreatyViewId]=useState(null);const[treatyForm,setTreatyForm]=useState(null);const[treatyError,setTreatyError]=useState('');const[treatySaving,setTreatySaving]=useState(false);const[showTreatyForm,setShowTreatyForm]=useState(false);// Only load empireInfo when switching to the Empires tab and not viewing/editing any empire.\n// This prevents any reloads while editing or viewing an empire.\nuseEffect(()=>{if(activeTab==='empires'&&!editEmpire&&!empirePage){// Add cache-busting query param\nfetch(`/empireInfo.json?ts=${Date.now()}`).then(res=>res.json()).then(data=>{setEmpireInfo(data&&typeof data==='object'?data:{});setEmpireInfoLoaded(true);}).catch(()=>setEmpireInfoLoaded(true));}// Only run when switching tabs, or leaving view/edit mode\n},[activeTab,editEmpire,empirePage]);// Helper: get empire names\nfunction getEmpireNames(){// Only include empires that exist (already the case)\nreturn empires.map(e=>e.name);}// Helper: get boards from linked empires\nfunction getLinkedBoards(){const names=getEmpireNames();return getNationPairs(names);}// Helper: get account linked to empire\nfunction getEmpireAccount(empireName){const emp=empires.find(e=>e.name===empireName);return emp&&emp.account?emp.account:null;}// Only show boards for the empire assigned to the logged-in account, except GameMaster sees all\nconst filteredBoards=account?account.username===\"GameMaster\"?getLinkedBoards():getLinkedBoards().filter(_ref=>{let[a,b]=_ref;return getEmpireAccount(a)===account.username||getEmpireAccount(b)===account.username;}):[];// GameMaster: link/unlink accounts to empires\nfunction handleLinkAccount(empireName,accountName){fetch('/api/empires/link',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({empireName,accountName})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>prev.map(e=>e.name===empireName?{...e,account:accountName}:e));}});}function handleUnlinkAccount(empireName){fetch('/api/empires/unlink',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({empireName})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>prev.map(e=>e.name===empireName?{...e,account:null}:e));}});}// Save selected board to localStorage\nfunction handleBoardSelect(pair){const key=pair.join('|');setSelected(key);localStorage.setItem('stellarisSelectedBoard',key);}// Fetch messages for the selected board from the server\nuseEffect(()=>{// Only poll messages if on channels tab and not editing/viewing empire\nif(!selected||activeTab!=='channels'||editEmpire||empirePage){// Stop polling if not in correct state\nif(pollingRef.current){clearInterval(pollingRef.current);pollingRef.current=null;}return;}// Use selected as key\nconst key=selected;// Function to fetch messages\nconst fetchMessages=()=>{fetch(`/api/messages?board=${encodeURIComponent(key)}`).then(res=>{if(!res.ok)throw new Error('Network response was not ok');return res.json();}).then(data=>{setMessages(prev=>({...prev,[key]:data}));}).catch(err=>{setMessages(prev=>({...prev,[key]:[]}));console.error('Failed to fetch messages:',err);});};// Initial fetch\nfetchMessages();// Set up polling\npollingRef.current=setInterval(fetchMessages,2000);// Cleanup on unmount or when selected/activeTab/editEmpire/empirePage changes\nreturn()=>{if(pollingRef.current){clearInterval(pollingRef.current);pollingRef.current=null;}};},[selected,activeTab,editEmpire,empirePage]);// Scroll to bottom only when messages actually change for the selected board\nconst prevMessagesLengthRef=useRef(0);useEffect(()=>{if(!selected)return;const currentMessages=messages[selected]||[];if(currentMessages.length!==prevMessagesLengthRef.current){if(messagesEndRef.current){messagesEndRef.current.scrollIntoView({behavior:'auto'});}prevMessagesLengthRef.current=currentMessages.length;}},[messages,selected]);// When posting, always use the logged-in account's empire name\nfunction postMessage(e){e.preventDefault();if(!selected||!account||!text.trim())return;const key=selected;const msg={board:key,author:account.username,text,timestamp:Date.now()};fetch('/api/messages',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(msg)}).then(res=>res.json()).then(()=>{fetch(`/api/messages?board=${encodeURIComponent(key)}`).then(res=>res.json()).then(data=>{setMessages(prev=>({...prev,[key]:data}));});});setText('');}// Fetch accounts from server (accounts.json)\nuseEffect(()=>{fetch('/accounts.json').then(res=>res.json()).then(data=>{setAccounts(data);setAccountsLoaded(true);}).catch(()=>setAccountsLoaded(true));},[]);// Load empires from empires.json\nuseEffect(()=>{fetch('/empires.json').then(res=>res.json()).then(data=>{setEmpires(Array.isArray(data)?data:[]);});},[]);// Fetch treaties from backend\nuseEffect(()=>{fetch('/treaties.json').then(res=>res.json()).then(data=>{setTreaties(Array.isArray(data)?data:[]);setTreatiesLoaded(true);}).catch(()=>setTreatiesLoaded(true));},[]);function handleLogin(e){e.preventDefault();// Wait until accounts are loaded\nif(!accountsLoaded){setError('Accounts are still loading, please wait...');return;}const username=loginUser.trim();const password=loginPass.trim();if(!accounts[username]){setError('Invalid credentials');return;}if(accounts[username]!==password){setError('Invalid credentials');return;}setAccount({username});localStorage.setItem('stellarisAccount',JSON.stringify({username}));setError('');}function handleLogout(){setAccount(null);localStorage.removeItem('stellarisAccount');}// Save empire info to backend and update local state\nfunction saveEmpireInfo(name,info){return fetch('/api/empireInfo',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,info})}).then(res=>res.json()).then(()=>{// After saving, reload from backend with cache-busting param\nreturn fetch(`/empireInfo.json?ts=${Date.now()}`).then(res=>res.json()).then(data=>{setEmpireInfo(data&&typeof data==='object'?data:{});});});}// Edit panel for empire info\nfunction EmpireEditPanel(_ref2){let{name,onCancel}=_ref2;// Only initialize edit state from empireInfo[name] when the component mounts\nconst info=empireInfo[name]||{};const[edit,setEdit]=useState(info);// Do NOT use useEffect to update edit state from empireInfo.\n// This ensures the text fields are not reset while editing.\nfunction handleChange(e){setEdit({...edit,[e.target.name]:e.target.value});}function handleSave(e){e.preventDefault();saveEmpireInfo(name,edit).then(()=>{onCancel();});}return/*#__PURE__*/_jsxs(\"form\",{className:\"empire-edit-form\",onSubmit:handleSave,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Lore:\",/*#__PURE__*/_jsx(\"textarea\",{name:\"lore\",value:edit.lore||'',onChange:handleChange,rows:3})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Stats:\",/*#__PURE__*/_jsx(\"input\",{name:\"stats\",value:edit.stats||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Ethics:\",/*#__PURE__*/_jsx(\"input\",{name:\"ethics\",value:edit.ethics||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Civics:\",/*#__PURE__*/_jsx(\"input\",{name:\"civics\",value:edit.civics||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Special Info:\",/*#__PURE__*/_jsx(\"input\",{name:\"special\",value:edit.special||'',onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'1rem',marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"empire-back-btn\",onClick:onCancel,children:\"Cancel\"})]})]});}// View panel for empire info\nfunction EmpirePanel(_ref3){let{name,canEdit}=_ref3;const info=empireInfo[name]||{};return/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-card empire-info-page\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"empire-info-title\",children:name}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-details\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Account:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:name})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Lore:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.lore||/*#__PURE__*/_jsx(\"i\",{children:\"No lore set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Stats:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.stats||/*#__PURE__*/_jsx(\"i\",{children:\"No stats set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Ethics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.ethics||/*#__PURE__*/_jsx(\"i\",{children:\"No ethics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Civics:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.civics||/*#__PURE__*/_jsx(\"i\",{children:\"No civics set.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Special Info:\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"empire-info-field\",children:info.special||/*#__PURE__*/_jsx(\"i\",{children:\"No special info set.\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'1rem',marginTop:'1.5rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setEmpirePage(null),children:\"Back to Empires\"}),canEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>setEditEmpire(name),children:\"Edit\"})]})]});}// Defensive: ensure empireInfo is always an object\nuseEffect(()=>{if(!empireInfo||typeof empireInfo!=='object'||Array.isArray(empireInfo)){setEmpireInfo({});}},[empireInfo]);// Defensive: ensure accounts is always an object\nuseEffect(()=>{if(!accounts||typeof accounts!=='object'||Array.isArray(accounts)){setAccounts({});}},[accounts]);// Add API to create new account\nfunction handleCreateAccount(e){e.preventDefault();setAccountError('');setAccountSuccess('');const name=newAccountName.trim();const pass=newAccountPass.trim();if(!name||!pass){setAccountError('Name and password required');return;}if(accounts[name]){setAccountError('Account already exists');return;}setAccountsTabLoading(true);fetch('/api/accounts',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,pass})}).then(res=>res.json()).then(data=>{if(data.success){setAccounts(prev=>({...prev,[name]:pass}));// Remove: setEmpires(prev => prev.includes(name) ? prev : [...prev, name]);\nsetAccountSuccess('Account created');setNewAccountName('');setNewAccountPass('');}else{setAccountError(data.error||'Failed to create account');}}).catch(()=>setAccountError('Failed to create account')).finally(()=>setAccountsTabLoading(false));}// API: Rename account\nfunction handleRenameAccount(e){e.preventDefault();setEditAccountError('');setEditAccountLoading(true);const oldName=editAccount;const newName=editAccountName.trim();if(!newName||newName===oldName){setEditAccountError('Enter a new name');setEditAccountLoading(false);return;}fetch('/api/accounts/rename',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({oldName,newName})}).then(res=>res.json()).then(data=>{if(data.success){// Update local state\nsetAccounts(prev=>{const updated={...prev};updated[newName]=updated[oldName];delete updated[oldName];return updated;});setEmpires(prev=>prev.map(e=>e===oldName?newName:e));setEditAccount(null);}else{setEditAccountError(data.error||'Rename failed');}}).catch(()=>setEditAccountError('Rename failed')).finally(()=>setEditAccountLoading(false));}// API: Change password\nfunction handleChangePassword(e){e.preventDefault();setEditAccountError('');setEditAccountLoading(true);const name=editAccount;const pass=editAccountPass.trim();if(!pass){setEditAccountError('Enter a new password');setEditAccountLoading(false);return;}fetch('/api/accounts/password',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,pass})}).then(res=>res.json()).then(data=>{if(data.success){setAccounts(prev=>({...prev,[name]:pass}));setEditAccount(null);}else{setEditAccountError(data.error||'Password change failed');}}).catch(()=>setEditAccountError('Password change failed')).finally(()=>setEditAccountLoading(false));}// API: Delete account\nfunction handleDeleteAccount(name){if(!window.confirm(`Delete account \"${name}\"? This cannot be undone.`))return;setEditAccountLoading(true);fetch('/api/accounts/delete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name})}).then(res=>res.json()).then(data=>{if(data.success){setAccounts(prev=>{const updated={...prev};delete updated[name];return updated;});setEmpires(prev=>prev.filter(e=>e!==name));setEditAccount(null);}else{alert(data.error||'Delete failed');}}).catch(()=>alert('Delete failed')).finally(()=>setEditAccountLoading(false));}// API: Create new empire\nfunction handleCreateEmpire(e){e.preventDefault();setNewEmpireError('');setNewEmpireLoading(true);const name=newEmpireName.trim();if(!name){setNewEmpireError('Empire name required');setNewEmpireLoading(false);return;}if(empires.some(e=>e.name===name)){setNewEmpireError('Empire already exists');setNewEmpireLoading(false);return;}fetch('/api/empires/create',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>[...prev,{name,account:null}]);setNewEmpireName('');}else{setNewEmpireError(data.error||'Failed to create empire');}}).catch(()=>setNewEmpireError('Failed to create empire')).finally(()=>setNewEmpireLoading(false));}// API: Delete empire\nfunction handleDeleteEmpire(name){if(!window.confirm(`Delete empire \"${name}\"? This cannot be undone.`))return;setNewEmpireLoading(true);fetch('/api/empires/delete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name})}).then(res=>res.json()).then(data=>{if(data.success){setEmpires(prev=>{const updated=prev.filter(e=>e.name!==name);// If the selected board involves the deleted empire, clear selection\nif(selected){const[a,b]=selected.split('|');if(a===name||b===name){setSelected(null);localStorage.removeItem('stellarisSelectedBoard');}}return updated;});}else{setNewEmpireError(data.error||'Failed to delete empire');}}).catch(()=>setNewEmpireError('Failed to delete empire')).finally(()=>setNewEmpireLoading(false));}// Treaties: permissions\nfunction canEditTreaty(treaty){if(!account)return false;return account.username===treaty.owner||account.username===\"GameMaster\";}function canTransferTreaty(treaty){return account&&account.username===\"GameMaster\";}// Treaties: open new form\nfunction handleAddTreaty(){setTreatyForm({id:null,title:'',content:'',participants:[],status:'discussion',owner:account?account.username:''});setTreatyEditId(null);setTreatyViewId(null);setShowTreatyForm(true);setTreatyError('');}// Treaties: open edit\nfunction handleEditTreaty(treaty){setTreatyForm({...treaty});setTreatyEditId(treaty.id);setTreatyViewId(null);setShowTreatyForm(true);setTreatyError('');}// Treaties: open view\nfunction handleViewTreaty(treaty){setTreatyViewId(treaty.id);setTreatyEditId(null);setShowTreatyForm(false);setTreatyError('');}// Treaties: cancel form\nfunction handleCancelTreatyForm(){setTreatyForm(null);setTreatyEditId(null);setShowTreatyForm(false);setTreatyError('');}// Treaties: save (create or update)\nfunction handleSaveTreaty(e){e.preventDefault();setTreatyError('');setTreatySaving(true);const isEdit=treatyEditId!=null;const form={...treatyForm};if(!form.title.trim()||!form.content.trim()||!form.participants.length){setTreatyError('Title, content, and at least one participant are required.');setTreatySaving(false);return;}if(!form.owner)form.owner=account?account.username:'';if(!form.status)form.status='discussion';if(!form.id)form.id=isEdit?treatyEditId:Date.now().toString();fetch('/api/treaties',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(form)}).then(res=>res.json()).then(data=>{if(data.success){// Always fetch the latest treaties from /treaties.json after save\nreturn fetch('/treaties.json?ts='+Date.now()).then(res=>res.json()).then(data2=>{setTreaties(Array.isArray(data2)?data2:[]);setTreatyForm(null);setTreatyEditId(null);setShowTreatyForm(false);setTreatyViewId(form.id);});}else{setTreatyError(data.error||'Failed to save treaty');}}).catch(()=>setTreatyError('Failed to save treaty')).finally(()=>setTreatySaving(false));}// Treaties: transfer ownership (GM only)\nfunction handleTransferTreatyOwner(treaty,newOwner){if(!canTransferTreaty(treaty))return;setTreatySaving(true);fetch('/api/treaties/transfer',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id:treaty.id,newOwner})}).then(res=>res.json()).then(data=>{if(data.success){return fetch('/treaties.json').then(res=>res.json()).then(data2=>setTreaties(Array.isArray(data2)?data2:[]));}}).finally(()=>setTreatySaving(false));}// Treaties: form field change\nfunction handleTreatyFormChange(e){const{name,value,type,options}=e.target;if(type==='select-multiple'){const vals=Array.from(options).filter(o=>o.selected).map(o=>o.value);setTreatyForm(f=>({...f,[name]:vals}));}else{setTreatyForm(f=>({...f,[name]:value}));}}// Treaties: render\nfunction renderTreatyForm(){if(!treatyForm)return null;return/*#__PURE__*/_jsxs(\"form\",{className:\"treaty-form card\",onSubmit:handleSaveTreaty,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-header\",children:[/*#__PURE__*/_jsx(\"input\",{name:\"title\",placeholder:\"Treaty Title\",value:treatyForm.title,onChange:handleTreatyFormChange,className:\"login-input\",required:true,disabled:treatySaving}),/*#__PURE__*/_jsx(\"select\",{name:\"status\",value:treatyForm.status,onChange:handleTreatyFormChange,className:\"login-input\",disabled:treatySaving,children:TREATY_STATUSES.map(s=>/*#__PURE__*/_jsx(\"option\",{value:s.value,children:s.label},s.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-participants\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"participants-select\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"participants-label\",children:\"Participants\"}),/*#__PURE__*/_jsx(\"select\",{name:\"participants\",value:treatyForm.participants,onChange:handleTreatyFormChange,className:\"login-input\",multiple:true,disabled:treatySaving,children:getEmpireNames().map(e=>/*#__PURE__*/_jsx(\"option\",{value:e,children:e},e))})]}),account&&account.username===\"GameMaster\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"owner-select\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"owner-label\",children:\"Owner:\"}),/*#__PURE__*/_jsx(\"select\",{name:\"owner\",value:treatyForm.owner,onChange:handleTreatyFormChange,className:\"login-input\",disabled:treatySaving,children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsx(\"option\",{value:acc,children:acc},acc))})]})]}),/*#__PURE__*/_jsx(\"label\",{className:\"treaty-content-label\",children:\"Treaty Content\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"content\",placeholder:\"Treaty Content\",value:treatyForm.content,onChange:handleTreatyFormChange,className:\"login-input\",rows:9,required:true,disabled:treatySaving}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:treatySaving,children:treatyEditId?\"Save Changes\":\"Create Treaty\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"empire-back-btn\",onClick:handleCancelTreatyForm,disabled:treatySaving,children:\"Cancel\"}),treatyError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error treaty-error\",children:treatyError})]})]});}function renderTreatyView(treaty){const statusObj=TREATY_STATUSES.find(s=>s.value===treaty.status);return/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"treaty-title\",children:treaty.title}),/*#__PURE__*/_jsx(\"span\",{className:\"treaty-status\",style:{color:statusObj.color},children:statusObj?statusObj.label:treaty.status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-owner\",children:[\"Owner: \",treaty.owner]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-participants\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Participants:\"}),\" \",treaty.participants&&treaty.participants.length>0?treaty.participants.join(', '):/*#__PURE__*/_jsx(\"i\",{children:\"None\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"treaty-content-static\",children:treaty.content}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-view-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setTreatyViewId(null),children:\"Back\"}),canEditTreaty(treaty)&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>handleEditTreaty(treaty),children:\"Edit\"}),canTransferTreaty(treaty)&&/*#__PURE__*/_jsx(\"select\",{value:treaty.owner,onChange:e=>handleTransferTreatyOwner(treaty,e.target.value),className:\"owner-transfer-select\",children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsx(\"option\",{value:acc,children:acc},acc))})]})]});}// Add tab for GameMaster\nconst showAccountsTab=account&&account.username===\"GameMaster\";const tabs=[{key:'channels',label:'Channels'},{key:'empires',label:'Empires'},{key:'treaties',label:'Treaties'}];if(showAccountsTab){tabs.push({key:'accounts',label:'Manage Accounts'});tabs.push({key:'manage-empires',label:'Manage Empires'});}// Ref for account edit panel\nconst accountEditPanelRef=useRef(null);// Scroll to edit panel when editAccount changes\nuseEffect(()=>{if(editAccount&&accountEditPanelRef.current){accountEditPanelRef.current.scrollIntoView({behavior:'smooth',block:'center'});}},[editAccount]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Stellaris RP Diplomatic Message Boards\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tabs-bar\",children:tabs.map(tab=>/*#__PURE__*/_jsx(\"button\",{className:`tab-btn${activeTab===tab.key?' active':''}`,onClick:()=>{setActiveTab(tab.key);setEmpirePage(null);setEditEmpire(null);setEditAccount(null);setTreatyEditId(null);setTreatyViewId(null);setShowTreatyForm(false);},children:tab.label},tab.key))})]}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:activeTab==='treaties'?/*#__PURE__*/_jsxs(\"section\",{className:\"treaties-section card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaties-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Treaties, Contracts & Agreements\"}),account&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:handleAddTreaty,children:\"+ Add New Treaty\"})]}),showTreatyForm&&renderTreatyForm(),treatyViewId&&renderTreatyView(treaties.find(t=>t.id===treatyViewId)),/*#__PURE__*/_jsxs(\"div\",{className:\"treaties-list-container\",children:[!treatiesLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",children:\"Loading treaties...\"}),treaties.length===0&&treatiesLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"no-messages\",children:\"No treaties yet.\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"treaties-list\",children:treaties.map(treaty=>{const statusObj=TREATY_STATUSES.find(s=>s.value===treaty.status);return/*#__PURE__*/_jsxs(\"li\",{className:\"treaty-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-info\",onClick:ev=>{ev.stopPropagation();handleViewTreaty(treaty);},children:[/*#__PURE__*/_jsx(\"div\",{className:\"treaty-title\",children:treaty.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-meta\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-owner\",children:[\"Owner: \",treaty.owner]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-participants\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Participants:\"}),\" \",treaty.participants&&treaty.participants.length>0?treaty.participants.join(', '):/*#__PURE__*/_jsx(\"i\",{children:\"None\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"treaty-content\",children:treaty.content.length>180?treaty.content.slice(0,180)+'…':treaty.content})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"treaty-actions\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"treaty-status\",style:{color:statusObj.color},children:statusObj?statusObj.label:treaty.status}),/*#__PURE__*/_jsxs(\"span\",{className:\"treaty-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-view-btn\",onClick:ev=>{ev.stopPropagation();handleViewTreaty(treaty);},children:\"View\"}),canEditTreaty(treaty)&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:ev=>{ev.stopPropagation();handleEditTreaty(treaty);},children:\"Edit\"})]})]})]},treaty.id);})})]})]}):activeTab==='manage-empires'&&showAccountsTab?/*#__PURE__*/_jsxs(\"section\",{className:\"manage-empires-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Empires\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCreateEmpire,className:\"create-empire-form\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"New empire name\",value:newEmpireName,onChange:e=>setNewEmpireName(e.target.value),required:true,className:\"login-input\",disabled:newEmpireLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-btn\",disabled:newEmpireLoading,children:\"Create Empire\"})]}),newEmpireError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:newEmpireError}),/*#__PURE__*/_jsx(\"h3\",{children:\"Empires & Account Assignment\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"empires-list\",children:empires.map(emp=>/*#__PURE__*/_jsxs(\"li\",{className:\"empire-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"empire-name\",children:/*#__PURE__*/_jsx(\"b\",{children:emp.name})}),/*#__PURE__*/_jsxs(\"span\",{className:\"empire-actions\",children:[/*#__PURE__*/_jsxs(\"select\",{value:emp.account||'',onChange:e=>{const val=e.target.value;if(val)handleLinkAccount(emp.name,val);else handleUnlinkAccount(emp.name);},className:\"account-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",className:\"account-option\",children:\"Select account...\"}),Object.keys(accounts).map(accName=>/*#__PURE__*/_jsx(\"option\",{value:accName,className:\"account-option\",children:accName},accName))]}),/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-delete-btn\",onClick:()=>handleDeleteEmpire(emp.name),disabled:newEmpireLoading,children:\"Delete\"})]})]},emp.name))})]}):activeTab==='accounts'&&showAccountsTab?/*#__PURE__*/_jsxs(\"section\",{className:\"account-manage-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Manage Accounts\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleCreateAccount,className:\"account-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"account-form-fields\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Account name\",value:newAccountName,onChange:e=>setNewAccountName(e.target.value),required:true,className:\"login-input\",disabled:accountsTabLoading}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:newAccountPass,onChange:e=>setNewAccountPass(e.target.value),required:true,className:\"login-input\",disabled:accountsTabLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-btn\",disabled:accountsTabLoading,children:\"Create\"})]})}),accountError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:accountError}),accountSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",style:{color:'limegreen'},children:accountSuccess}),/*#__PURE__*/_jsx(\"h3\",{children:\"All Accounts\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"accounts-list\",children:Object.keys(accounts).map(acc=>/*#__PURE__*/_jsxs(\"li\",{className:\"account-item\",children:[/*#__PURE__*/_jsx(\"b\",{children:acc}),acc!==\"GameMaster\"&&/*#__PURE__*/_jsxs(\"span\",{className:\"account-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-edit-btn\",onClick:()=>{setEditAccount(acc);setEditAccountName(acc);setEditAccountPass('');setEditAccountError('');},disabled:editAccountLoading,children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"account-manage-btn account-delete-btn\",onClick:()=>handleDeleteAccount(acc),disabled:editAccountLoading,children:\"Delete\"})]})]},acc))}),editAccount&&/*#__PURE__*/_jsxs(\"div\",{className:\"account-edit-panel card\",ref:accountEditPanelRef,children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Edit Account: \",/*#__PURE__*/_jsx(\"b\",{children:editAccount})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRenameAccount,className:\"edit-account-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Rename to:\",/*#__PURE__*/_jsx(\"input\",{value:editAccountName,onChange:e=>setEditAccountName(e.target.value),className:\"login-input\",disabled:editAccountLoading})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:editAccountLoading,children:\"Rename\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleChangePassword,className:\"change-password-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"New Password:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:editAccountPass,onChange:e=>setEditAccountPass(e.target.value),className:\"login-input\",disabled:editAccountLoading})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"empire-save-btn\",disabled:editAccountLoading,children:\"Change Password\"})]}),editAccountError&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:editAccountError}),/*#__PURE__*/_jsx(\"button\",{className:\"empire-back-btn\",onClick:()=>setEditAccount(null),disabled:editAccountLoading,children:\"Cancel\"})]})]}):activeTab==='empires'?editEmpire?/*#__PURE__*/_jsxs(\"section\",{className:\"empires-info-section card\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Edit \",editEmpire]}),/*#__PURE__*/_jsx(EmpireEditPanel,{name:editEmpire,onCancel:()=>setEditEmpire(null)})]}):empirePage?/*#__PURE__*/_jsx(EmpirePanel,{name:empirePage,canEdit:account&&account.username===empirePage}):/*#__PURE__*/_jsxs(\"section\",{className:\"empires-info-section card\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',marginBottom:'1.5rem'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:0},children:\"Empires Overview\"}),/*#__PURE__*/_jsxs(\"span\",{style:{color:'#aaa',fontSize:'1.05rem'},children:[\"Total: \",/*#__PURE__*/_jsx(\"b\",{children:getEmpireNames().length})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"empires-info-list\",style:{display:'flex',flexWrap:'wrap',gap:'1.5rem',justifyContent:'flex-start'},children:getEmpireNames().map(e=>{const linkedAccount=getEmpireAccount(e);const canEdit=account&&(account.username===linkedAccount||account.username===\"GameMaster\");const info=empireInfo[e]||{};return/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-card empire-list-card\",style:{minWidth:260,maxWidth:340,flex:'1 1 320px',background:'var(--primary-bg)',border:'1.5px solid var(--accent)',borderRadius:12,boxShadow:'0 2px 12px #0002',padding:'1.2rem 1.2rem',display:'flex',flexDirection:'column',gap:'0.7rem',cursor:'pointer'},onClick:()=>setEmpirePage(e),children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"h3\",{className:\"empire-info-title\",style:{margin:0,color:'var(--accent)'},children:e}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.95em',color:'#b3cfff'},children:linkedAccount?/*#__PURE__*/_jsx(\"span\",{title:\"Assigned Account\",children:linkedAccount}):/*#__PURE__*/_jsx(\"i\",{children:\"Unassigned\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-details\",style:{fontSize:'0.97em',color:'var(--text)'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Lore:\"}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"empire-info-field\",children:info.lore?info.lore.slice(0,60)+(info.lore.length>60?'…':''):/*#__PURE__*/_jsx(\"i\",{children:\"No lore\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Stats:\"}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"empire-info-field\",children:info.stats?info.stats.slice(0,40)+(info.stats.length>40?'…':''):/*#__PURE__*/_jsx(\"i\",{children:\"-\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Ethics:\"}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"empire-info-field\",children:info.ethics?info.ethics.slice(0,40)+(info.ethics.length>40?'…':''):/*#__PURE__*/_jsx(\"i\",{children:\"-\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Civics:\"}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"empire-info-field\",children:info.civics?info.civics.slice(0,40)+(info.civics.length>40?'…':''):/*#__PURE__*/_jsx(\"i\",{children:\"-\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Special:\"}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"empire-info-field\",children:info.special?info.special.slice(0,40)+(info.special.length>40?'…':''):/*#__PURE__*/_jsx(\"i\",{children:\"-\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-actions\",style:{display:'flex',gap:'0.5rem',marginTop:'0.5rem'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-view-btn\",style:{minWidth:80},onClick:ev=>{ev.stopPropagation();setEmpirePage(e);},children:\"View\"}),canEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",style:{minWidth:80},onClick:ev=>{ev.stopPropagation();setEditEmpire(e);},children:\"Edit\"})]})]},e);})})]}):/*#__PURE__*/_jsx(_Fragment,{children:!account?/*#__PURE__*/_jsxs(\"section\",{className:\"account-section card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"login-title\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"account-form login-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-fields\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Empire name\",value:loginUser,onChange:e=>setLoginUser(e.target.value),required:true,disabled:!accountsLoaded,className:\"login-input\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:loginPass,onChange:e=>setLoginPass(e.target.value),required:true,disabled:!accountsLoaded,className:\"login-input\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!accountsLoaded,className:\"login-btn\",children:\"Login\"})]}),!accountsLoaded&&/*#__PURE__*/_jsx(\"div\",{className:\"login-loading\",children:\"Loading accounts...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"login-error\",children:error})]}):/*#__PURE__*/// Center the channels page\n_jsx(\"div\",{style:{display:'flex',justifyContent:'center',width:'100%'},children:/*#__PURE__*/_jsxs(\"section\",{className:\"boards-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"channels-header\",children:[/*#__PURE__*/_jsxs(\"span\",{style:{marginRight:'auto',color:'#aaa',fontWeight:500},children:[\"Logged in as \",/*#__PURE__*/_jsx(\"b\",{children:account.username})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"logout-btn\",onClick:handleLogout,title:\"Logout\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"logout-icon\",children:\"\\uD83D\\uDD11\"}),\" Logout\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"channels-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"channels-sidebar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"boards-list card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:account&&account.username===\"GameMaster\"?\"All Boards\":\"Your Diplomatic Channels\"}),/*#__PURE__*/_jsx(\"div\",{className:\"boards-list-header\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"boards-list-count\",children:[filteredBoards.length,\" \",filteredBoards.length===1?\"channel\":\"channels\"]})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"boards-list-ul\",children:[filteredBoards.length===0&&/*#__PURE__*/_jsx(\"li\",{className:\"no-channels\",children:\"No channels available.\"}),filteredBoards.map(_ref4=>{let[a,b]=_ref4;const key=a+'|'+b;return/*#__PURE__*/_jsx(\"li\",{className:`boards-list-item${selected===key?' active':''}`,children:/*#__PURE__*/_jsxs(\"button\",{className:\"board-btn\",onClick:()=>handleBoardSelect([a,b]),children:[/*#__PURE__*/_jsx(\"span\",{className:\"board-nations\",children:a}),/*#__PURE__*/_jsx(\"span\",{className:\"board-arrow\",children:\"\\u2194\"}),/*#__PURE__*/_jsx(\"span\",{className:\"board-nations\",children:b})]})},key);})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"channels-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"board-messages card\",children:selected&&filteredBoards.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"board-messages-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-title-row\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"board-title\",children:selected.replace('|',' ↔ ')})}),/*#__PURE__*/_jsxs(\"div\",{className:\"messages-panel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages-list-container\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"messages-list\",children:[(messages[selected]||[]).length===0&&/*#__PURE__*/_jsx(\"li\",{className:\"no-messages\",children:\"No messages yet.\"}),(messages[selected]||[]).map((msg,i)=>{const[partnerA,partnerB]=selected.split('|');let partnerClass='';if(msg.author===partnerA)partnerClass='message-partnerA';else if(msg.author===partnerB)partnerClass='message-partnerB';return/*#__PURE__*/_jsxs(\"li\",{className:`message-item ${partnerClass}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-meta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-author\",children:msg.author}),/*#__PURE__*/_jsx(\"small\",{className:\"message-date\",children:new Date(msg.timestamp).toLocaleString()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:msg.text})]},i);}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:postMessage,className:\"message-form message-form-bottom\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Your empire\",value:account.username,disabled:true,required:true,className:\"author-input\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Message\",value:text,onChange:e=>setText(e.target.value),required:true,className:\"text-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-btn\",children:\"Send\"})]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"no-messages\",children:\"Select a channel to view messages.\"})})})]})]})})})}),/*#__PURE__*/_jsx(\"footer\",{className:\"footer\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Stellaris RP Board \\xA9 \",new Date().getFullYear()]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","getNationPairs","nations","pairs","i","length","j","push","TREATY_STATUSES","value","label","App","empires","setEmpires","selected","setSelected","saved","localStorage","getItem","messages","setMessages","text","setText","pollingRef","messagesEndRef","accounts","setAccounts","accountsLoaded","setAccountsLoaded","account","setAccount","JSON","parse","loginUser","setLoginUser","loginPass","setLoginPass","error","setError","activeTab","setActiveTab","empirePage","setEmpirePage","editEmpire","setEditEmpire","empireInfo","setEmpireInfo","empireInfoLoaded","setEmpireInfoLoaded","newAccountName","setNewAccountName","newAccountPass","setNewAccountPass","accountError","setAccountError","accountSuccess","setAccountSuccess","accountsTabLoading","setAccountsTabLoading","editAccount","setEditAccount","editAccountName","setEditAccountName","editAccountPass","setEditAccountPass","editAccountError","setEditAccountError","editAccountLoading","setEditAccountLoading","newEmpireName","setNewEmpireName","newEmpireError","setNewEmpireError","newEmpireLoading","setNewEmpireLoading","treaties","setTreaties","treatiesLoaded","setTreatiesLoaded","treatyEditId","setTreatyEditId","treatyViewId","setTreatyViewId","treatyForm","setTreatyForm","treatyError","setTreatyError","treatySaving","setTreatySaving","showTreatyForm","setShowTreatyForm","fetch","Date","now","then","res","json","data","catch","getEmpireNames","map","e","name","getLinkedBoards","names","getEmpireAccount","empireName","emp","find","filteredBoards","username","filter","_ref","a","b","handleLinkAccount","accountName","method","headers","body","stringify","success","prev","handleUnlinkAccount","handleBoardSelect","pair","key","join","setItem","current","clearInterval","fetchMessages","encodeURIComponent","ok","Error","err","console","setInterval","prevMessagesLengthRef","currentMessages","scrollIntoView","behavior","postMessage","preventDefault","trim","msg","board","author","timestamp","Array","isArray","handleLogin","password","handleLogout","removeItem","saveEmpireInfo","info","EmpireEditPanel","_ref2","onCancel","edit","setEdit","handleChange","target","handleSave","className","onSubmit","children","lore","onChange","rows","stats","ethics","civics","special","style","display","gap","marginTop","type","onClick","EmpirePanel","_ref3","canEdit","handleCreateAccount","pass","finally","handleRenameAccount","oldName","newName","updated","handleChangePassword","handleDeleteAccount","window","confirm","alert","handleCreateEmpire","some","handleDeleteEmpire","split","canEditTreaty","treaty","owner","canTransferTreaty","handleAddTreaty","id","title","content","participants","status","handleEditTreaty","handleViewTreaty","handleCancelTreatyForm","handleSaveTreaty","isEdit","form","toString","data2","handleTransferTreatyOwner","newOwner","handleTreatyFormChange","options","vals","from","o","f","renderTreatyForm","placeholder","required","disabled","s","multiple","Object","keys","acc","renderTreatyView","statusObj","color","showAccountsTab","tabs","accountEditPanelRef","block","tab","t","ev","stopPropagation","slice","val","accName","ref","alignItems","justifyContent","marginBottom","margin","fontSize","flexWrap","linkedAccount","minWidth","maxWidth","flex","background","border","borderRadius","boxShadow","padding","flexDirection","cursor","width","marginRight","fontWeight","_ref4","replace","partnerA","partnerB","partnerClass","toLocaleString","getFullYear"],"sources":["C:/Users/Admin/Dokumente/Stellaris/project/StellarisRP-Site/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport './Treaties.css';\r\nimport './Empires.css';\r\nimport './Boards.css';\r\nimport './Accounts.css';\r\n\r\nfunction getNationPairs(nations) {\r\n    const pairs = [];\r\n    for (let i = 0; i < nations.length; i++) {\r\n        for (let j = i + 1; j < nations.length; j++) {\r\n            pairs.push([nations[i], nations[j]]);\r\n        }\r\n    }\r\n    return pairs;\r\n}\r\n\r\nconst TREATY_STATUSES = [\r\n    { value: 'discussion', label: '🗨️ In Discussion' },\r\n    { value: 'active', label: '✅ Active' },\r\n    { value: 'broken', label: '❌ Broken' },\r\n    { value: 'expired', label: '⌛ Expired' },\r\n    { value: 'other', label: '❓ Other' }\r\n];\r\n\r\nfunction App() {\r\n    // Remove unused empireInput, selectedNation, author\r\n    const [empires, setEmpires] = useState([]);\r\n    const [selected, setSelected] = useState(() => {\r\n        const saved = localStorage.getItem('stellarisSelectedBoard');\r\n        return saved ? saved : null;\r\n    });\r\n    const [messages, setMessages] = useState({});\r\n    const [text, setText] = useState('');\r\n    const pollingRef = useRef();\r\n    const messagesEndRef = useRef(null);\r\n    const [accounts, setAccounts] = useState({});\r\n    const [accountsLoaded, setAccountsLoaded] = useState(false);\r\n    const [account, setAccount] = useState(() => {\r\n        const saved = localStorage.getItem('stellarisAccount');\r\n        return saved ? JSON.parse(saved) : null;\r\n    });\r\n    const [loginUser, setLoginUser] = useState('');\r\n    const [loginPass, setLoginPass] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [activeTab, setActiveTab] = useState('channels');\r\n    const [empirePage, setEmpirePage] = useState(null);\r\n    const [editEmpire, setEditEmpire] = useState(null);\r\n    const [empireInfo, setEmpireInfo] = useState({});\r\n    const [empireInfoLoaded, setEmpireInfoLoaded] = useState(false);\r\n\r\n    // Account creation and management\r\n    const [newAccountName, setNewAccountName] = useState('');\r\n    const [newAccountPass, setNewAccountPass] = useState('');\r\n    const [accountError, setAccountError] = useState('');\r\n    const [accountSuccess, setAccountSuccess] = useState('');\r\n    const [accountsTabLoading, setAccountsTabLoading] = useState(false);\r\n    const [editAccount, setEditAccount] = useState(null);\r\n    const [editAccountName, setEditAccountName] = useState('');\r\n    const [editAccountPass, setEditAccountPass] = useState('');\r\n    const [editAccountError, setEditAccountError] = useState('');\r\n    const [editAccountLoading, setEditAccountLoading] = useState(false);\r\n\r\n    // Manage Empires tab\r\n    const [newEmpireName, setNewEmpireName] = useState('');\r\n    const [newEmpireError, setNewEmpireError] = useState('');\r\n    const [newEmpireLoading, setNewEmpireLoading] = useState(false);\r\n\r\n    // Treaties state\r\n    const [treaties, setTreaties] = useState([]);\r\n    const [treatiesLoaded, setTreatiesLoaded] = useState(false);\r\n    const [treatyEditId, setTreatyEditId] = useState(null);\r\n    const [treatyViewId, setTreatyViewId] = useState(null);\r\n    const [treatyForm, setTreatyForm] = useState(null);\r\n    const [treatyError, setTreatyError] = useState('');\r\n    const [treatySaving, setTreatySaving] = useState(false);\r\n    const [showTreatyForm, setShowTreatyForm] = useState(false);\r\n\r\n    // Only load empireInfo when switching to the Empires tab and not viewing/editing any empire.\r\n    // This prevents any reloads while editing or viewing an empire.\r\n    useEffect(() => {\r\n        if (\r\n            activeTab === 'empires' &&\r\n            !editEmpire &&\r\n            !empirePage\r\n        ) {\r\n            // Add cache-busting query param\r\n            fetch(`/empireInfo.json?ts=${Date.now()}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setEmpireInfo(data && typeof data === 'object' ? data : {});\r\n                    setEmpireInfoLoaded(true);\r\n                })\r\n                .catch(() => setEmpireInfoLoaded(true));\r\n        }\r\n    // Only run when switching tabs, or leaving view/edit mode\r\n    }, [activeTab, editEmpire, empirePage]);\r\n\r\n    // Helper: get empire names\r\n    function getEmpireNames() {\r\n        // Only include empires that exist (already the case)\r\n        return empires.map(e => e.name);\r\n    }\r\n\r\n    // Helper: get boards from linked empires\r\n    function getLinkedBoards() {\r\n        const names = getEmpireNames();\r\n        return getNationPairs(names);\r\n    }\r\n\r\n    // Helper: get account linked to empire\r\n    function getEmpireAccount(empireName) {\r\n        const emp = empires.find(e => e.name === empireName);\r\n        return emp && emp.account ? emp.account : null;\r\n    }\r\n\r\n    // Only show boards for the empire assigned to the logged-in account, except GameMaster sees all\r\n    const filteredBoards = account\r\n        ? account.username === \"GameMaster\"\r\n            ? getLinkedBoards()\r\n            : getLinkedBoards().filter(([a, b]) =>\r\n                getEmpireAccount(a) === account.username || getEmpireAccount(b) === account.username\r\n            )\r\n        : [];\r\n\r\n    // GameMaster: link/unlink accounts to empires\r\n    function handleLinkAccount(empireName, accountName) {\r\n        fetch('/api/empires/link', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ empireName, accountName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev =>\r\n                    prev.map(e => e.name === empireName ? { ...e, account: accountName } : e)\r\n                );\r\n            }\r\n        });\r\n    }\r\n    function handleUnlinkAccount(empireName) {\r\n        fetch('/api/empires/unlink', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ empireName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev =>\r\n                    prev.map(e => e.name === empireName ? { ...e, account: null } : e)\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    // Save selected board to localStorage\r\n    function handleBoardSelect(pair) {\r\n        const key = pair.join('|');\r\n        setSelected(key);\r\n        localStorage.setItem('stellarisSelectedBoard', key);\r\n    }\r\n\r\n    // Fetch messages for the selected board from the server\r\n    useEffect(() => {\r\n        // Only poll messages if on channels tab and not editing/viewing empire\r\n        if (\r\n            !selected ||\r\n            activeTab !== 'channels' ||\r\n            editEmpire ||\r\n            empirePage\r\n        ) {\r\n            // Stop polling if not in correct state\r\n            if (pollingRef.current) {\r\n                clearInterval(pollingRef.current);\r\n                pollingRef.current = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Use selected as key\r\n        const key = selected;\r\n\r\n        // Function to fetch messages\r\n        const fetchMessages = () => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(key)}`)\r\n                .then(res => {\r\n                    if (!res.ok) throw new Error('Network response was not ok');\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: data\r\n                    }));\r\n                })\r\n                .catch((err) => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: []\r\n                    }));\r\n                    console.error('Failed to fetch messages:', err);\r\n                });\r\n        };\r\n\r\n        // Initial fetch\r\n        fetchMessages();\r\n\r\n        // Set up polling\r\n        pollingRef.current = setInterval(fetchMessages, 2000);\r\n\r\n        // Cleanup on unmount or when selected/activeTab/editEmpire/empirePage changes\r\n        return () => {\r\n            if (pollingRef.current) {\r\n                clearInterval(pollingRef.current);\r\n                pollingRef.current = null;\r\n            }\r\n        };\r\n    }, [selected, activeTab, editEmpire, empirePage]);\r\n\r\n    // Scroll to bottom only when messages actually change for the selected board\r\n    const prevMessagesLengthRef = useRef(0);\r\n    useEffect(() => {\r\n        if (!selected) return;\r\n        const currentMessages = messages[selected] || [];\r\n        if (currentMessages.length !== prevMessagesLengthRef.current) {\r\n            if (messagesEndRef.current) {\r\n                messagesEndRef.current.scrollIntoView({ behavior: 'auto' });\r\n            }\r\n            prevMessagesLengthRef.current = currentMessages.length;\r\n        }\r\n    }, [messages, selected]);\r\n\r\n    // When posting, always use the logged-in account's empire name\r\n    function postMessage(e) {\r\n        e.preventDefault();\r\n        if (!selected || !account || !text.trim()) return;\r\n        const key = selected;\r\n        const msg = {\r\n            board: key,\r\n            author: account.username,\r\n            text,\r\n            timestamp: Date.now()\r\n        };\r\n        fetch('/api/messages', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(msg)\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            fetch(`/api/messages?board=${encodeURIComponent(key)}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setMessages(prev => ({\r\n                        ...prev,\r\n                        [key]: data\r\n                    }));\r\n                });\r\n        });\r\n        setText('');\r\n    }\r\n\r\n    // Fetch accounts from server (accounts.json)\r\n    useEffect(() => {\r\n        fetch('/accounts.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAccounts(data);\r\n                setAccountsLoaded(true);\r\n            })\r\n            .catch(() => setAccountsLoaded(true));\r\n    }, []);\r\n\r\n    // Load empires from empires.json\r\n    useEffect(() => {\r\n        fetch('/empires.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setEmpires(Array.isArray(data) ? data : []);\r\n            });\r\n    }, []);\r\n\r\n    // Fetch treaties from backend\r\n    useEffect(() => {\r\n        fetch('/treaties.json')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTreaties(Array.isArray(data) ? data : []);\r\n                setTreatiesLoaded(true);\r\n            })\r\n            .catch(() => setTreatiesLoaded(true));\r\n    }, []);\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault();\r\n        // Wait until accounts are loaded\r\n        if (!accountsLoaded) {\r\n            setError('Accounts are still loading, please wait...');\r\n            return;\r\n        }\r\n        const username = loginUser.trim();\r\n        const password = loginPass.trim();\r\n        if (!accounts[username]) {\r\n            setError('Invalid credentials');\r\n            return;\r\n        }\r\n        if (accounts[username] !== password) {\r\n            setError('Invalid credentials');\r\n            return;\r\n        }\r\n        setAccount({ username });\r\n        localStorage.setItem('stellarisAccount', JSON.stringify({ username }));\r\n        setError('');\r\n    }\r\n\r\n    function handleLogout() {\r\n        setAccount(null);\r\n        localStorage.removeItem('stellarisAccount');\r\n    }\r\n\r\n    // Save empire info to backend and update local state\r\n    function saveEmpireInfo(name, info) {\r\n        return fetch('/api/empireInfo', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, info })\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            // After saving, reload from backend with cache-busting param\r\n            return fetch(`/empireInfo.json?ts=${Date.now()}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setEmpireInfo(data && typeof data === 'object' ? data : {});\r\n                });\r\n        });\r\n    }\r\n\r\n    // Edit panel for empire info\r\n    function EmpireEditPanel({ name, onCancel }) {\r\n        // Only initialize edit state from empireInfo[name] when the component mounts\r\n        const info = empireInfo[name] || {};\r\n        const [edit, setEdit] = useState(info);\r\n\r\n        // Do NOT use useEffect to update edit state from empireInfo.\r\n        // This ensures the text fields are not reset while editing.\r\n\r\n        function handleChange(e) {\r\n            setEdit({ ...edit, [e.target.name]: e.target.value });\r\n        }\r\n        function handleSave(e) {\r\n            e.preventDefault();\r\n            saveEmpireInfo(name, edit).then(() => {\r\n                onCancel();\r\n            });\r\n        }\r\n\r\n        return (\r\n            <form className=\"empire-edit-form\" onSubmit={handleSave}>\r\n                <label>\r\n                    Lore:\r\n                    <textarea\r\n                        name=\"lore\"\r\n                        value={edit.lore || ''}\r\n                        onChange={handleChange}\r\n                        rows={3}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Stats:\r\n                    <input name=\"stats\" value={edit.stats || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Ethics:\r\n                    <input name=\"ethics\" value={edit.ethics || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Civics:\r\n                    <input name=\"civics\" value={edit.civics || ''} onChange={handleChange} />\r\n                </label>\r\n                <label>\r\n                    Special Info:\r\n                    <input name=\"special\" value={edit.special || ''} onChange={handleChange} />\r\n                </label>\r\n                <div style={{display: 'flex', gap: '1rem', marginTop: '1rem'}}>\r\n                    <button type=\"submit\" className=\"empire-save-btn\">Save</button>\r\n                    <button type=\"button\" className=\"empire-back-btn\" onClick={onCancel}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    // View panel for empire info\r\n    function EmpirePanel({ name, canEdit }) {\r\n        const info = empireInfo[name] || {};\r\n        return (\r\n            <div className=\"empire-info-card empire-info-page\">\r\n                <h2 className=\"empire-info-title\">{name}</h2>\r\n                <div className=\"empire-info-details\">\r\n                    <div><b>Account:</b> <code>{name}</code></div>\r\n                    <div><b>Lore:</b> <div className=\"empire-info-field\">{info.lore || <i>No lore set.</i>}</div></div>\r\n                    <div><b>Stats:</b> <div className=\"empire-info-field\">{info.stats || <i>No stats set.</i>}</div></div>\r\n                    <div><b>Ethics:</b> <div className=\"empire-info-field\">{info.ethics || <i>No ethics set.</i>}</div></div>\r\n                    <div><b>Civics:</b> <div className=\"empire-info-field\">{info.civics || <i>No civics set.</i>}</div></div>\r\n                    <div><b>Special Info:</b> <div className=\"empire-info-field\">{info.special || <i>No special info set.</i>}</div></div>\r\n                </div>\r\n                <div style={{display: 'flex', gap: '1rem', marginTop: '1.5rem'}}>\r\n                    <button className=\"empire-back-btn\" onClick={() => setEmpirePage(null)}>Back to Empires</button>\r\n                    {canEdit && (\r\n                        <button className=\"empire-save-btn\" onClick={() => setEditEmpire(name)}>Edit</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Defensive: ensure empireInfo is always an object\r\n    useEffect(() => {\r\n        if (!empireInfo || typeof empireInfo !== 'object' || Array.isArray(empireInfo)) {\r\n            setEmpireInfo({});\r\n        }\r\n    }, [empireInfo]);\r\n\r\n    // Defensive: ensure accounts is always an object\r\n    useEffect(() => {\r\n        if (!accounts || typeof accounts !== 'object' || Array.isArray(accounts)) {\r\n            setAccounts({});\r\n        }\r\n    }, [accounts]);\r\n\r\n    // Add API to create new account\r\n    function handleCreateAccount(e) {\r\n        e.preventDefault();\r\n        setAccountError('');\r\n        setAccountSuccess('');\r\n        const name = newAccountName.trim();\r\n        const pass = newAccountPass.trim();\r\n        if (!name || !pass) {\r\n            setAccountError('Name and password required');\r\n            return;\r\n        }\r\n        if (accounts[name]) {\r\n            setAccountError('Account already exists');\r\n            return;\r\n        }\r\n        setAccountsTabLoading(true);\r\n        fetch('/api/accounts', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, pass })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setAccounts(prev => ({ ...prev, [name]: pass }));\r\n                // Remove: setEmpires(prev => prev.includes(name) ? prev : [...prev, name]);\r\n                setAccountSuccess('Account created');\r\n                setNewAccountName('');\r\n                setNewAccountPass('');\r\n            } else {\r\n                setAccountError(data.error || 'Failed to create account');\r\n            }\r\n        })\r\n        .catch(() => setAccountError('Failed to create account'))\r\n        .finally(() => setAccountsTabLoading(false));\r\n    }\r\n\r\n    // API: Rename account\r\n    function handleRenameAccount(e) {\r\n        e.preventDefault();\r\n        setEditAccountError('');\r\n        setEditAccountLoading(true);\r\n        const oldName = editAccount;\r\n        const newName = editAccountName.trim();\r\n        if (!newName || newName === oldName) {\r\n            setEditAccountError('Enter a new name');\r\n            setEditAccountLoading(false);\r\n            return;\r\n        }\r\n        fetch('/api/accounts/rename', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ oldName, newName })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                // Update local state\r\n                setAccounts(prev => {\r\n                    const updated = { ...prev };\r\n                    updated[newName] = updated[oldName];\r\n                    delete updated[oldName];\r\n                    return updated;\r\n                });\r\n                setEmpires(prev => prev.map(e => e === oldName ? newName : e));\r\n                setEditAccount(null);\r\n            } else {\r\n                setEditAccountError(data.error || 'Rename failed');\r\n            }\r\n        })\r\n        .catch(() => setEditAccountError('Rename failed'))\r\n        .finally(() => setEditAccountLoading(false));\r\n    }\r\n\r\n    // API: Change password\r\n    function handleChangePassword(e) {\r\n        e.preventDefault();\r\n        setEditAccountError('');\r\n        setEditAccountLoading(true);\r\n        const name = editAccount;\r\n        const pass = editAccountPass.trim();\r\n        if (!pass) {\r\n            setEditAccountError('Enter a new password');\r\n            setEditAccountLoading(false);\r\n            return;\r\n        }\r\n        fetch('/api/accounts/password', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, pass })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setAccounts(prev => ({ ...prev, [name]: pass }));\r\n                setEditAccount(null);\r\n            } else {\r\n                setEditAccountError(data.error || 'Password change failed');\r\n            }\r\n        })\r\n        .catch(() => setEditAccountError('Password change failed'))\r\n        .finally(() => setEditAccountLoading(false));\r\n    }\r\n\r\n    // API: Delete account\r\n    function handleDeleteAccount(name) {\r\n        if (!window.confirm(`Delete account \"${name}\"? This cannot be undone.`)) return;\r\n        setEditAccountLoading(true);\r\n        fetch('/api/accounts/delete', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setAccounts(prev => {\r\n                    const updated = { ...prev };\r\n                    delete updated[name];\r\n                    return updated;\r\n                });\r\n                setEmpires(prev => prev.filter(e => e !== name));\r\n                setEditAccount(null);\r\n            } else {\r\n                alert(data.error || 'Delete failed');\r\n            }\r\n        })\r\n        .catch(() => alert('Delete failed'))\r\n        .finally(() => setEditAccountLoading(false));\r\n    }\r\n\r\n    // API: Create new empire\r\n    function handleCreateEmpire(e) {\r\n        e.preventDefault();\r\n        setNewEmpireError('');\r\n        setNewEmpireLoading(true);\r\n        const name = newEmpireName.trim();\r\n        if (!name) {\r\n            setNewEmpireError('Empire name required');\r\n            setNewEmpireLoading(false);\r\n            return;\r\n        }\r\n        if (empires.some(e => e.name === name)) {\r\n            setNewEmpireError('Empire already exists');\r\n            setNewEmpireLoading(false);\r\n            return;\r\n        }\r\n        fetch('/api/empires/create', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev => [...prev, { name, account: null }]);\r\n                setNewEmpireName('');\r\n            } else {\r\n                setNewEmpireError(data.error || 'Failed to create empire');\r\n            }\r\n        })\r\n        .catch(() => setNewEmpireError('Failed to create empire'))\r\n        .finally(() => setNewEmpireLoading(false));\r\n    }\r\n\r\n    // API: Delete empire\r\n    function handleDeleteEmpire(name) {\r\n        if (!window.confirm(`Delete empire \"${name}\"? This cannot be undone.`)) return;\r\n        setNewEmpireLoading(true);\r\n        fetch('/api/empires/delete', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                setEmpires(prev => {\r\n                    const updated = prev.filter(e => e.name !== name);\r\n                    // If the selected board involves the deleted empire, clear selection\r\n                    if (selected) {\r\n                        const [a, b] = selected.split('|');\r\n                        if (a === name || b === name) {\r\n                            setSelected(null);\r\n                            localStorage.removeItem('stellarisSelectedBoard');\r\n                        }\r\n                    }\r\n                    return updated;\r\n                });\r\n            } else {\r\n                setNewEmpireError(data.error || 'Failed to delete empire');\r\n            }\r\n        })\r\n        .catch(() => setNewEmpireError('Failed to delete empire'))\r\n        .finally(() => setNewEmpireLoading(false));\r\n    }\r\n\r\n    // Treaties: permissions\r\n    function canEditTreaty(treaty) {\r\n        if (!account) return false;\r\n        return account.username === treaty.owner || account.username === \"GameMaster\";\r\n    }\r\n    function canTransferTreaty(treaty) {\r\n        return account && account.username === \"GameMaster\";\r\n    }\r\n\r\n    // Treaties: open new form\r\n    function handleAddTreaty() {\r\n        setTreatyForm({\r\n            id: null,\r\n            title: '',\r\n            content: '',\r\n            participants: [],\r\n            status: 'discussion',\r\n            owner: account ? account.username : '',\r\n        });\r\n        setTreatyEditId(null);\r\n        setTreatyViewId(null);\r\n        setShowTreatyForm(true);\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: open edit\r\n    function handleEditTreaty(treaty) {\r\n        setTreatyForm({ ...treaty });\r\n        setTreatyEditId(treaty.id);\r\n        setTreatyViewId(null);\r\n        setShowTreatyForm(true);\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: open view\r\n    function handleViewTreaty(treaty) {\r\n        setTreatyViewId(treaty.id);\r\n        setTreatyEditId(null);\r\n        setShowTreatyForm(false);\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: cancel form\r\n    function handleCancelTreatyForm() {\r\n        setTreatyForm(null);\r\n        setTreatyEditId(null);\r\n        setShowTreatyForm(false);\r\n        setTreatyError('');\r\n    }\r\n\r\n    // Treaties: save (create or update)\r\n    function handleSaveTreaty(e) {\r\n        e.preventDefault();\r\n        setTreatyError('');\r\n        setTreatySaving(true);\r\n        const isEdit = treatyEditId != null;\r\n        const form = { ...treatyForm };\r\n        if (!form.title.trim() || !form.content.trim() || !form.participants.length) {\r\n            setTreatyError('Title, content, and at least one participant are required.');\r\n            setTreatySaving(false);\r\n            return;\r\n        }\r\n        if (!form.owner) form.owner = account ? account.username : '';\r\n        if (!form.status) form.status = 'discussion';\r\n        if (!form.id) form.id = isEdit ? treatyEditId : Date.now().toString();\r\n\r\n        fetch('/api/treaties', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(form)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                // Always fetch the latest treaties from /treaties.json after save\r\n                return fetch('/treaties.json?ts=' + Date.now())\r\n                    .then(res => res.json())\r\n                    .then(data2 => {\r\n                        setTreaties(Array.isArray(data2) ? data2 : []);\r\n                        setTreatyForm(null);\r\n                        setTreatyEditId(null);\r\n                        setShowTreatyForm(false);\r\n                        setTreatyViewId(form.id);\r\n                    });\r\n            } else {\r\n                setTreatyError(data.error || 'Failed to save treaty');\r\n            }\r\n        })\r\n        .catch(() => setTreatyError('Failed to save treaty'))\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n\r\n    // Treaties: transfer ownership (GM only)\r\n    function handleTransferTreatyOwner(treaty, newOwner) {\r\n        if (!canTransferTreaty(treaty)) return;\r\n        setTreatySaving(true);\r\n        fetch('/api/treaties/transfer', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ id: treaty.id, newOwner })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                return fetch('/treaties.json')\r\n                    .then(res => res.json())\r\n                    .then(data2 => setTreaties(Array.isArray(data2) ? data2 : []));\r\n            }\r\n        })\r\n        .finally(() => setTreatySaving(false));\r\n    }\r\n\r\n    // Treaties: form field change\r\n    function handleTreatyFormChange(e) {\r\n        const { name, value, type, options } = e.target;\r\n        if (type === 'select-multiple') {\r\n            const vals = Array.from(options).filter(o => o.selected).map(o => o.value);\r\n            setTreatyForm(f => ({ ...f, [name]: vals }));\r\n        } else {\r\n            setTreatyForm(f => ({ ...f, [name]: value }));\r\n        }\r\n    }\r\n\r\n    // Treaties: render\r\n    function renderTreatyForm() {\r\n        if (!treatyForm) return null;\r\n        return (\r\n            <form className=\"treaty-form card\" onSubmit={handleSaveTreaty}>\r\n                <div className=\"treaty-form-header\">\r\n                    <input\r\n                        name=\"title\"\r\n                        placeholder=\"Treaty Title\"\r\n                        value={treatyForm.title}\r\n                        onChange={handleTreatyFormChange}\r\n                        className=\"login-input\"\r\n                        required\r\n                        disabled={treatySaving}\r\n                    />\r\n                    <select\r\n                        name=\"status\"\r\n                        value={treatyForm.status}\r\n                        onChange={handleTreatyFormChange}\r\n                        className=\"login-input\"\r\n                        disabled={treatySaving}\r\n                    >\r\n                        {TREATY_STATUSES.map(s => (\r\n                            <option key={s.value} value={s.value}>{s.label}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"treaty-form-participants\">\r\n                    <div className=\"participants-select\">\r\n                        <label className=\"participants-label\">Participants</label>\r\n                        <select\r\n                            name=\"participants\"\r\n                            value={treatyForm.participants}\r\n                            onChange={handleTreatyFormChange}\r\n                            className=\"login-input\"\r\n                            multiple\r\n                            disabled={treatySaving}\r\n                        >\r\n                            {getEmpireNames().map(e => (\r\n                                <option key={e} value={e}>{e}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {account && account.username === \"GameMaster\" && (\r\n                        <div className=\"owner-select\">\r\n                            <label className=\"owner-label\">Owner:</label>\r\n                            <select\r\n                                name=\"owner\"\r\n                                value={treatyForm.owner}\r\n                                onChange={handleTreatyFormChange}\r\n                                className=\"login-input\"\r\n                                disabled={treatySaving}\r\n                            >\r\n                                {Object.keys(accounts).map(acc => (\r\n                                    <option key={acc} value={acc}>{acc}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <label className=\"treaty-content-label\">Treaty Content</label>\r\n                <textarea\r\n                    name=\"content\"\r\n                    placeholder=\"Treaty Content\"\r\n                    value={treatyForm.content}\r\n                    onChange={handleTreatyFormChange}\r\n                    className=\"login-input\"\r\n                    rows={9}\r\n                    required\r\n                    disabled={treatySaving}\r\n                />\r\n                <div className=\"treaty-form-actions\">\r\n                    <button type=\"submit\" className=\"empire-save-btn\" disabled={treatySaving}>\r\n                        {treatyEditId ? \"Save Changes\" : \"Create Treaty\"}\r\n                    </button>\r\n                    <button type=\"button\" className=\"empire-back-btn\" onClick={handleCancelTreatyForm} disabled={treatySaving}>Cancel</button>\r\n                    {treatyError && <div className=\"login-error treaty-error\">{treatyError}</div>}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    function renderTreatyView(treaty) {\r\n        const statusObj = TREATY_STATUSES.find(s => s.value === treaty.status);\r\n        return (\r\n            <div className=\"treaty-view card\">\r\n                <div className=\"treaty-view-header\">\r\n                    <h2 className=\"treaty-title\">{treaty.title}</h2>\r\n                    <span className=\"treaty-status\" style={{color: statusObj.color}}>{statusObj ? statusObj.label : treaty.status}</span>\r\n                </div>\r\n                <div className=\"treaty-view-owner\">\r\n                    Owner: {treaty.owner}\r\n                </div>\r\n                <div className=\"treaty-view-participants\">\r\n                    <b>Participants:</b> {treaty.participants && treaty.participants.length > 0 ? treaty.participants.join(', ') : <i>None</i>}\r\n                </div>\r\n                <div className=\"treaty-content-static\">\r\n                    {treaty.content}\r\n                </div>\r\n                <div className=\"treaty-view-actions\">\r\n                    <button className=\"empire-back-btn\" onClick={() => setTreatyViewId(null)}>Back</button>\r\n                    {canEditTreaty(treaty) && (\r\n                        <button className=\"empire-save-btn\" onClick={() => handleEditTreaty(treaty)}>Edit</button>\r\n                    )}\r\n                    {canTransferTreaty(treaty) && (\r\n                        <select\r\n                            value={treaty.owner}\r\n                            onChange={e => handleTransferTreatyOwner(treaty, e.target.value)}\r\n                            className=\"owner-transfer-select\"\r\n                        >\r\n                            {Object.keys(accounts).map(acc => (\r\n                                <option key={acc} value={acc}>{acc}</option>\r\n                            ))}\r\n                        </select>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Add tab for GameMaster\r\n    const showAccountsTab = account && account.username === \"GameMaster\";\r\n    const tabs = [\r\n        { key: 'channels', label: 'Channels' },\r\n        { key: 'empires', label: 'Empires' },\r\n        { key: 'treaties', label: 'Treaties' }\r\n    ];\r\n    if (showAccountsTab) {\r\n        tabs.push({ key: 'accounts', label: 'Manage Accounts' });\r\n        tabs.push({ key: 'manage-empires', label: 'Manage Empires' });\r\n    }\r\n\r\n    // Ref for account edit panel\r\n    const accountEditPanelRef = useRef(null);\r\n\r\n    // Scroll to edit panel when editAccount changes\r\n    useEffect(() => {\r\n        if (editAccount && accountEditPanelRef.current) {\r\n            accountEditPanelRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    }, [editAccount]);\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <header className=\"header\">\r\n                <h1>Stellaris RP Diplomatic Message Boards</h1>\r\n                <div className=\"tabs-bar\">\r\n                    {tabs.map(tab => (\r\n                        <button\r\n                            key={tab.key}\r\n                            className={`tab-btn${activeTab === tab.key ? ' active' : ''}`}\r\n                            onClick={() => {\r\n                                setActiveTab(tab.key);\r\n                                setEmpirePage(null);\r\n                                setEditEmpire(null);\r\n                                setEditAccount(null);\r\n                                setTreatyEditId(null);\r\n                                setTreatyViewId(null);\r\n                                setShowTreatyForm(false);\r\n                            }}\r\n                        >\r\n                            {tab.label}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </header>\r\n            <main className=\"main-content\">\r\n                {activeTab === 'treaties' ? (\r\n                    <section\r\n                        className=\"treaties-section card\"\r\n                    >\r\n                        <div className=\"treaties-header\">\r\n                            <h2>Treaties, Contracts & Agreements</h2>\r\n                            {account && (\r\n                                <button\r\n                                    className=\"empire-save-btn\"\r\n                                    onClick={handleAddTreaty}\r\n                                >\r\n                                    + Add New Treaty\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                        {showTreatyForm && renderTreatyForm()}\r\n                        {treatyViewId && renderTreatyView(treaties.find(t => t.id === treatyViewId))}\r\n                        {/* Always show available treaties list, even if form or view is open */}\r\n                        <div className=\"treaties-list-container\">\r\n                            {!treatiesLoaded && <div className=\"login-loading\">Loading treaties...</div>}\r\n                            {treaties.length === 0 && treatiesLoaded && (\r\n                                <div className=\"no-messages\">No treaties yet.</div>\r\n                            )}\r\n                            <ul className=\"treaties-list\">\r\n                                {treaties.map(treaty => {\r\n                                    const statusObj = TREATY_STATUSES.find(s => s.value === treaty.status);\r\n                                    return (\r\n                                        <li\r\n                                            key={treaty.id}\r\n                                            className=\"treaty-item\"\r\n                                        >\r\n                                            <div className=\"treaty-info\" onClick={ev => {ev.stopPropagation(); handleViewTreaty(treaty);}}>\r\n                                                <div className=\"treaty-title\">{treaty.title}</div>\r\n                                                <div className=\"treaty-meta\">\r\n                                                    <div className=\"treaty-owner\">Owner: {treaty.owner}</div>\r\n                                                    <div className=\"treaty-participants\">\r\n                                                        <b>Participants:</b> {treaty.participants && treaty.participants.length > 0 ? treaty.participants.join(', ') : <i>None</i>}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"treaty-content\">\r\n                                                    {treaty.content.length > 180 ? treaty.content.slice(0,180) + '…' : treaty.content}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"treaty-actions\">\r\n                                                <span className=\"treaty-status\" style={{color: statusObj.color}}>\r\n                                                    {statusObj ? statusObj.label : treaty.status}\r\n                                                </span>\r\n                                                <span className=\"treaty-buttons\">\r\n                                                    <button className=\"empire-view-btn\" onClick={ev => {ev.stopPropagation(); handleViewTreaty(treaty);}}>View</button>\r\n                                                    {canEditTreaty(treaty) && (\r\n                                                        <button className=\"empire-save-btn\" onClick={ev => {ev.stopPropagation(); handleEditTreaty(treaty);}}>Edit</button>\r\n                                                    )}\r\n                                                </span>\r\n                                            </div>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n                ) : activeTab === 'manage-empires' && showAccountsTab ? (\r\n                    <section className=\"manage-empires-section card\">\r\n                        <h2>Manage Empires</h2>\r\n                        \r\n                        <form onSubmit={handleCreateEmpire} className=\"create-empire-form\">\r\n                            <input\r\n                                placeholder=\"New empire name\"\r\n                                value={newEmpireName}\r\n                                onChange={e => setNewEmpireName(e.target.value)}\r\n                                required\r\n                                className=\"login-input\"\r\n                                disabled={newEmpireLoading}\r\n                            />\r\n                            <button type=\"submit\" className=\"login-btn\" disabled={newEmpireLoading}>Create Empire</button>\r\n                        </form>\r\n                        {newEmpireError && <div className=\"login-error\">{newEmpireError}</div>}\r\n                        <h3>Empires & Account Assignment</h3>\r\n                        <ul className=\"empires-list\">\r\n                            {empires.map(emp => (\r\n                                <li\r\n                                    key={emp.name}\r\n                                    className=\"empire-item\"\r\n                                >\r\n                                    <span className=\"empire-name\">\r\n                                        <b>{emp.name}</b>\r\n                                    </span>\r\n                                    <span className=\"empire-actions\">\r\n                                        <select\r\n                                            value={emp.account || ''}\r\n                                            onChange={e => {\r\n                                                const val = e.target.value;\r\n                                                if (val) handleLinkAccount(emp.name, val);\r\n                                                else handleUnlinkAccount(emp.name);\r\n                                            }}\r\n                                            className=\"account-select\"\r\n                                        >\r\n                                            <option value=\"\" className=\"account-option\">Select account...</option>\r\n                                            {Object.keys(accounts).map(accName => (\r\n                                                <option key={accName} value={accName} className=\"account-option\">\r\n                                                    {accName}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <button\r\n                                            className=\"account-manage-btn account-delete-btn\"\r\n                                            onClick={() => handleDeleteEmpire(emp.name)}\r\n                                            disabled={newEmpireLoading}\r\n                                        >Delete</button>\r\n                                    </span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </section>\r\n                ) : activeTab === 'accounts' && showAccountsTab ? (\r\n                    <section className=\"account-manage-section card\">\r\n                        <h2>Manage Accounts</h2>\r\n                        <form onSubmit={handleCreateAccount} className=\"account-form\">\r\n                            <div className=\"account-form-fields\">\r\n                                <input\r\n                                    placeholder=\"Account name\"\r\n                                    value={newAccountName}\r\n                                    onChange={e => setNewAccountName(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={accountsTabLoading}\r\n                                />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={newAccountPass}\r\n                                    onChange={e => setNewAccountPass(e.target.value)}\r\n                                    required\r\n                                    className=\"login-input\"\r\n                                    disabled={accountsTabLoading}\r\n                                />\r\n                                <button type=\"submit\" className=\"login-btn\" disabled={accountsTabLoading}>Create</button>\r\n                            </div>\r\n                        </form>\r\n                        {accountError && <div className=\"login-error\">{accountError}</div>}\r\n                        {accountSuccess && <div className=\"login-loading\" style={{color:'limegreen'}}>{accountSuccess}</div>}\r\n\r\n                        {/* Restore account list with Edit/Delete buttons */}\r\n                        <h3>All Accounts</h3>\r\n                        <ul className=\"accounts-list\">\r\n                            {Object.keys(accounts).map(acc => (\r\n                                <li\r\n                                    key={acc}\r\n                                    className=\"account-item\"\r\n                                >\r\n                                    <b>{acc}</b>\r\n                                    {acc !== \"GameMaster\" && (\r\n                                        <span className=\"account-actions\">\r\n                                            <button\r\n                                                className=\"account-manage-btn account-edit-btn\"\r\n                                                onClick={() => {\r\n                                                    setEditAccount(acc);\r\n                                                    setEditAccountName(acc);\r\n                                                    setEditAccountPass('');\r\n                                                    setEditAccountError('');\r\n                                                }}\r\n                                                disabled={editAccountLoading}\r\n                                            >Edit</button>\r\n                                            <button\r\n                                                className=\"account-manage-btn account-delete-btn\"\r\n                                                onClick={() => handleDeleteAccount(acc)}\r\n                                                disabled={editAccountLoading}\r\n                                            >Delete</button>\r\n                                        </span>\r\n                                    )}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        {editAccount && (\r\n                            <div\r\n                                className=\"account-edit-panel card\"\r\n                                ref={accountEditPanelRef}\r\n                            >\r\n                                <h3>Edit Account: <b>{editAccount}</b></h3>\r\n                                <form onSubmit={handleRenameAccount} className=\"edit-account-form\">\r\n                                    <label>\r\n                                        Rename to:\r\n                                        <input\r\n                                            value={editAccountName}\r\n                                            onChange={e => setEditAccountName(e.target.value)}\r\n                                            className=\"login-input\"\r\n                                            disabled={editAccountLoading}\r\n                                        />\r\n                                    </label>\r\n                                    <button type=\"submit\" className=\"empire-save-btn\" disabled={editAccountLoading}>Rename</button>\r\n                                </form>\r\n                                <form onSubmit={handleChangePassword} className=\"change-password-form\">\r\n                                    <label>\r\n                                        New Password:\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            value={editAccountPass}\r\n                                            onChange={e => setEditAccountPass(e.target.value)}\r\n                                            className=\"login-input\"\r\n                                            disabled={editAccountLoading}\r\n                                        />\r\n                                    </label>\r\n                                    <button type=\"submit\" className=\"empire-save-btn\" disabled={editAccountLoading}>Change Password</button>\r\n                                </form>\r\n                                {editAccountError && <div className=\"login-error\">{editAccountError}</div>}\r\n                                <button className=\"empire-back-btn\" onClick={() => setEditAccount(null)} disabled={editAccountLoading}>Cancel</button>\r\n                            </div>\r\n                        )}\r\n                    </section>\r\n                ) : activeTab === 'empires' ? (\r\n                    editEmpire ? (\r\n                        <section className=\"empires-info-section card\">\r\n                            <h2>Edit {editEmpire}</h2>\r\n                            <EmpireEditPanel name={editEmpire} onCancel={() => setEditEmpire(null)} />\r\n                        </section>\r\n                    ) : empirePage ? (\r\n                        <EmpirePanel name={empirePage} canEdit={account && account.username === empirePage} />\r\n                    ) : (\r\n                        <section className=\"empires-info-section card\">\r\n                            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '1.5rem'}}>\r\n                                <h2 style={{margin: 0}}>Empires Overview</h2>\r\n                                <span style={{color: '#aaa', fontSize: '1.05rem'}}>\r\n                                    Total: <b>{getEmpireNames().length}</b>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"empires-info-list\" style={{display: 'flex', flexWrap: 'wrap', gap: '1.5rem', justifyContent: 'flex-start'}}>\r\n                                {getEmpireNames().map(e => {\r\n                                    const linkedAccount = getEmpireAccount(e);\r\n                                    const canEdit = account && (account.username === linkedAccount || account.username === \"GameMaster\");\r\n                                    const info = empireInfo[e] || {};\r\n                                    return (\r\n                                        <div\r\n                                            key={e}\r\n                                            className=\"empire-info-card empire-list-card\"\r\n                                            style={{\r\n                                                minWidth: 260,\r\n                                                maxWidth: 340,\r\n                                                flex: '1 1 320px',\r\n                                                background: 'var(--primary-bg)',\r\n                                                border: '1.5px solid var(--accent)',\r\n                                                borderRadius: 12,\r\n                                                boxShadow: '0 2px 12px #0002',\r\n                                                padding: '1.2rem 1.2rem',\r\n                                                display: 'flex',\r\n                                                flexDirection: 'column',\r\n                                                gap: '0.7rem',\r\n                                                cursor: 'pointer'\r\n                                            }}\r\n                                            onClick={() => setEmpirePage(e)}\r\n                                        >\r\n                                            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\r\n                                                <h3 className=\"empire-info-title\" style={{margin: 0, color: 'var(--accent)'}}>{e}</h3>\r\n                                                <span style={{fontSize: '0.95em', color: '#b3cfff'}}>\r\n                                                    {linkedAccount ? <span title=\"Assigned Account\">{linkedAccount}</span> : <i>Unassigned</i>}\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"empire-info-details\" style={{fontSize: '0.97em', color: 'var(--text)'}}>\r\n                                                <div>\r\n                                                    <b>Lore:</b> <span className=\"empire-info-field\">{info.lore ? info.lore.slice(0, 60) + (info.lore.length > 60 ? '…' : '') : <i>No lore</i>}</span>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <b>Stats:</b> <span className=\"empire-info-field\">{info.stats ? info.stats.slice(0, 40) + (info.stats.length > 40 ? '…' : '') : <i>-</i>}</span>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <b>Ethics:</b> <span className=\"empire-info-field\">{info.ethics ? info.ethics.slice(0, 40) + (info.ethics.length > 40 ? '…' : '') : <i>-</i>}</span>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <b>Civics:</b> <span className=\"empire-info-field\">{info.civics ? info.civics.slice(0, 40) + (info.civics.length > 40 ? '…' : '') : <i>-</i>}</span>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <b>Special:</b> <span className=\"empire-info-field\">{info.special ? info.special.slice(0, 40) + (info.special.length > 40 ? '…' : '') : <i>-</i>}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"empire-actions\" style={{display: 'flex', gap: '0.5rem', marginTop: '0.5rem'}}>\r\n                                                <button\r\n                                                    className=\"empire-view-btn\"\r\n                                                    style={{minWidth: 80}}\r\n                                                    onClick={ev => {ev.stopPropagation(); setEmpirePage(e);}}\r\n                                                >View</button>\r\n                                                {canEdit && (\r\n                                                    <button\r\n                                                        className=\"empire-save-btn\"\r\n                                                        style={{minWidth: 80}}\r\n                                                        onClick={ev => {ev.stopPropagation(); setEditEmpire(e);}}\r\n                                                    >Edit</button>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </section>\r\n                    )\r\n                ) : (\r\n                    <>\r\n                        {!account ? (\r\n                            <section className=\"account-section card\">\r\n                                <h2 className=\"login-title\">Login</h2>\r\n                                <form onSubmit={handleLogin} className=\"account-form login-form\">\r\n                                    <div className=\"login-fields\">\r\n                                        <input\r\n                                            placeholder=\"Empire name\"\r\n                                            value={loginUser}\r\n                                            onChange={e => setLoginUser(e.target.value)}\r\n                                            required\r\n                                            disabled={!accountsLoaded}\r\n                                            className=\"login-input\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={loginPass}\r\n                                            onChange={e => setLoginPass(e.target.value)}\r\n                                            required\r\n                                            disabled={!accountsLoaded}\r\n                                            className=\"login-input\"\r\n                                        />\r\n                                    </div>\r\n                                    <button type=\"submit\" disabled={!accountsLoaded} className=\"login-btn\">Login</button>\r\n                                </form>\r\n                                {!accountsLoaded && <div className=\"login-loading\">Loading accounts...</div>}\r\n                                {error && <div className=\"login-error\">{error}</div>}\r\n                            </section>\r\n                        ) : (\r\n                            // Center the channels page\r\n                            <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n                                <section className=\"boards-section\">\r\n                                    {/* Logout button at top right */}\r\n                                    <div className=\"channels-header\">\r\n                                        <span style={{marginRight: 'auto', color: '#aaa', fontWeight: 500}}>\r\n                                            Logged in as <b>{account.username}</b>\r\n                                        </span>\r\n                                        <button\r\n                                            className=\"logout-btn\"\r\n                                            onClick={handleLogout}\r\n                                            title=\"Logout\"\r\n                                        >\r\n                                            <span className=\"logout-icon\">&#x1F511;</span> Logout\r\n                                        </button>\r\n                                    </div>\r\n                                    {/* Main area: boards/channels list left, text channel right */}\r\n                                    <div className=\"channels-main\">\r\n                                        <div className=\"channels-sidebar\">\r\n                                            <div className=\"boards-list card\">\r\n                                                <h2>\r\n                                                    {account && account.username === \"GameMaster\"\r\n                                                        ? \"All Boards\"\r\n                                                        : \"Your Diplomatic Channels\"}\r\n                                                </h2>\r\n                                                <div className=\"boards-list-header\">\r\n                                                    <span className=\"boards-list-count\">\r\n                                                        {filteredBoards.length} {filteredBoards.length === 1 ? \"channel\" : \"channels\"}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <ul className=\"boards-list-ul\">\r\n                                                    {filteredBoards.length === 0 && (\r\n                                                        <li className=\"no-channels\">No channels available.</li>\r\n                                                    )}\r\n                                                    {filteredBoards.map(([a, b]) => {\r\n                                                        const key = a + '|' + b;\r\n                                                        return (\r\n                                                            <li key={key} className={`boards-list-item${selected === key ? ' active' : ''}`}>\r\n                                                                <button\r\n                                                                    className=\"board-btn\"\r\n                                                                    onClick={() => handleBoardSelect([a, b])}\r\n                                                                >\r\n                                                                    <span className=\"board-nations\">{a}</span>\r\n                                                                    <span className=\"board-arrow\">↔</span>\r\n                                                                    <span className=\"board-nations\">{b}</span>\r\n                                                                </button>\r\n                                                            </li>\r\n                                                        );\r\n                                                    })}\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"channels-content\">\r\n                                            <div className=\"board-messages card\">\r\n                                                {(selected && filteredBoards.length > 0) ? (\r\n                                                    <div className=\"board-messages-inner\">\r\n                                                        <div className=\"board-title-row\">\r\n                                                            <h2 className=\"board-title\">{selected.replace('|', ' ↔ ')}</h2>\r\n                                                        </div>\r\n                                                        <div className=\"messages-panel\">\r\n                                                            <div className=\"messages-list-container\">\r\n                                                                <ul className=\"messages-list\">\r\n                                                                    {(messages[selected] || []).length === 0 && <li className=\"no-messages\">No messages yet.</li>}\r\n                                                                    {(messages[selected] || []).map((msg, i) => {\r\n                                                                        const [partnerA, partnerB] = selected.split('|');\r\n                                                                        let partnerClass = '';\r\n                                                                        if (msg.author === partnerA) partnerClass = 'message-partnerA';\r\n                                                                        else if (msg.author === partnerB) partnerClass = 'message-partnerB';\r\n                                                                        return (\r\n                                                                            <li key={i} className={`message-item ${partnerClass}`}>\r\n                                                                                <div className=\"message-meta\">\r\n                                                                                    <span className=\"message-author\">{msg.author}</span>\r\n                                                                                    <small className=\"message-date\">{new Date(msg.timestamp).toLocaleString()}</small>\r\n                                                                                </div>\r\n                                                                                <div className=\"message-text\">{msg.text}</div>\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                    <div ref={messagesEndRef} />\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                            <form onSubmit={postMessage} className=\"message-form message-form-bottom\">\r\n                                                                <input\r\n                                                                    placeholder=\"Your empire\"\r\n                                                                    value={account.username}\r\n                                                                    disabled\r\n                                                                    required\r\n                                                                    className=\"author-input\"\r\n                                                                />\r\n                                                                <input\r\n                                                                    placeholder=\"Message\"\r\n                                                                    value={text}\r\n                                                                    onChange={e => setText(e.target.value)}\r\n                                                                    required\r\n                                                                    className=\"text-input\"\r\n                                                                />\r\n                                                                <button type=\"submit\" className=\"send-btn\">Send</button>\r\n                                                            </form>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <div className=\"no-messages\">Select a channel to view messages.</div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </main>\r\n            <footer className=\"footer\">\r\n                <span>Stellaris RP Board &copy; {new Date().getFullYear()}</span>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}