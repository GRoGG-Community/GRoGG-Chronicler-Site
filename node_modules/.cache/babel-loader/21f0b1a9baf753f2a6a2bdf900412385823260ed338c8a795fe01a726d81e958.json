{"ast":null,"code":"import React from'react';// Implement the empire list rendering logic here, using props for link/unlink/delete actions.\n// This component should receive the necessary data and handlers as props from the parent component.\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function EmpireList(_ref){let{empires,accounts,onLinkAccount,onUnlinkAccount,onDeleteEmpire,onEditEmpire}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"empires-info-list\",children:empires.map(empire=>{const linkedAccount=empire.account?accounts[empire.account]:null;return/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"empire-info-title\",children:empire.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-info-owner\",children:[\"Owner: \",linkedAccount?linkedAccount.username:/*#__PURE__*/_jsx(\"i\",{children:\"Unassigned\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empire-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"empire-view-btn\",onClick:()=>onEditEmpire(empire.name),children:\"View\"}),linkedAccount?/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>onUnlinkAccount(empire.name),children:\"Unlink Account\"}):/*#__PURE__*/_jsx(\"button\",{className:\"empire-save-btn\",onClick:()=>onLinkAccount(empire.name,prompt('Enter account name to link:')),children:\"Link Account\"}),/*#__PURE__*/_jsx(\"button\",{className:\"empire-delete-btn\",onClick:()=>onDeleteEmpire(empire.name),children:\"Delete\"})]})]},empire.name);})});}","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","EmpireList","_ref","empires","accounts","onLinkAccount","onUnlinkAccount","onDeleteEmpire","onEditEmpire","className","children","map","empire","linkedAccount","account","name","username","onClick","prompt"],"sources":["C:/Users/Admin/Dokumente/Stellaris/project/StellarisRP-Site/src/components/EmpireList.js"],"sourcesContent":["import React from 'react';\r\n\r\n// Implement the empire list rendering logic here, using props for link/unlink/delete actions.\r\n// This component should receive the necessary data and handlers as props from the parent component.\r\n\r\nexport default function EmpireList({\r\n    empires,\r\n    accounts,\r\n    onLinkAccount,\r\n    onUnlinkAccount,\r\n    onDeleteEmpire,\r\n    onEditEmpire\r\n}) {\r\n    return (\r\n        <div className=\"empires-info-list\">\r\n            {empires.map(empire => {\r\n                const linkedAccount = empire.account ? accounts[empire.account] : null;\r\n                return (\r\n                    <div key={empire.name} className=\"empire-info-card\">\r\n                        <h3 className=\"empire-info-title\">{empire.name}</h3>\r\n                        <div className=\"empire-info-owner\">\r\n                            Owner: {linkedAccount ? linkedAccount.username : <i>Unassigned</i>}\r\n                        </div>\r\n                        <div className=\"empire-actions\">\r\n                            <button\r\n                                className=\"empire-view-btn\"\r\n                                onClick={() => onEditEmpire(empire.name)}\r\n                            >\r\n                                View\r\n                            </button>\r\n                            {linkedAccount ? (\r\n                                <button\r\n                                    className=\"empire-save-btn\"\r\n                                    onClick={() => onUnlinkAccount(empire.name)}\r\n                                >\r\n                                    Unlink Account\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    className=\"empire-save-btn\"\r\n                                    onClick={() => onLinkAccount(empire.name, prompt('Enter account name to link:'))}\r\n                                >\r\n                                    Link Account\r\n                                </button>\r\n                            )}\r\n                            <button\r\n                                className=\"empire-delete-btn\"\r\n                                onClick={() => onDeleteEmpire(empire.name)}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,cAAe,SAAS,CAAAC,UAAUA,CAAAC,IAAA,CAO/B,IAPgC,CAC/BC,OAAO,CACPC,QAAQ,CACRC,aAAa,CACbC,eAAe,CACfC,cAAc,CACdC,YACJ,CAAC,CAAAN,IAAA,CACG,mBACIJ,IAAA,QAAKW,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC7BP,OAAO,CAACQ,GAAG,CAACC,MAAM,EAAI,CACnB,KAAM,CAAAC,aAAa,CAAGD,MAAM,CAACE,OAAO,CAAGV,QAAQ,CAACQ,MAAM,CAACE,OAAO,CAAC,CAAG,IAAI,CACtE,mBACId,KAAA,QAAuBS,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/CZ,IAAA,OAAIW,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAEE,MAAM,CAACG,IAAI,CAAK,CAAC,cACpDf,KAAA,QAAKS,SAAS,CAAC,mBAAmB,CAAAC,QAAA,EAAC,SACxB,CAACG,aAAa,CAAGA,aAAa,CAACG,QAAQ,cAAGlB,IAAA,MAAAY,QAAA,CAAG,YAAU,CAAG,CAAC,EACjE,CAAC,cACNV,KAAA,QAAKS,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3BZ,IAAA,WACIW,SAAS,CAAC,iBAAiB,CAC3BQ,OAAO,CAAEA,CAAA,GAAMT,YAAY,CAACI,MAAM,CAACG,IAAI,CAAE,CAAAL,QAAA,CAC5C,MAED,CAAQ,CAAC,CACRG,aAAa,cACVf,IAAA,WACIW,SAAS,CAAC,iBAAiB,CAC3BQ,OAAO,CAAEA,CAAA,GAAMX,eAAe,CAACM,MAAM,CAACG,IAAI,CAAE,CAAAL,QAAA,CAC/C,gBAED,CAAQ,CAAC,cAETZ,IAAA,WACIW,SAAS,CAAC,iBAAiB,CAC3BQ,OAAO,CAAEA,CAAA,GAAMZ,aAAa,CAACO,MAAM,CAACG,IAAI,CAAEG,MAAM,CAAC,6BAA6B,CAAC,CAAE,CAAAR,QAAA,CACpF,cAED,CAAQ,CACX,cACDZ,IAAA,WACIW,SAAS,CAAC,mBAAmB,CAC7BQ,OAAO,CAAEA,CAAA,GAAMV,cAAc,CAACK,MAAM,CAACG,IAAI,CAAE,CAAAL,QAAA,CAC9C,QAED,CAAQ,CAAC,EACR,CAAC,GAjCAE,MAAM,CAACG,IAkCZ,CAAC,CAEd,CAAC,CAAC,CACD,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}